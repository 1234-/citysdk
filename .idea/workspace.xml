<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="82ac4cda-63ef-47ec-b2ea-e93ad332046f" name="Default" comment="" />
    <ignored path="$PROJECT_DIR$/../target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="-985704565">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="3" />
          <entry key="project.open.time.11" value="2" />
          <entry key="project.open.time.16" value="1" />
          <entry key="project.opened" value="3" />
        </counts>
      </usages-collector>
    </session>
    <session id="364820673">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="4" />
          <entry key="project.open.time.10" value="1" />
          <entry key="project.open.time.11" value="1" />
          <entry key="project.open.time.13" value="1" />
          <entry key="project.open.time.17" value="1" />
          <entry key="project.open.time.19" value="1" />
          <entry key="project.open.time.42" value="1" />
          <entry key="project.opened" value="6" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="ClojureScript" value="6" />
          <entry key="EDN" value="1" />
          <entry key="JSON" value="23" />
          <entry key="Markdown" value="2" />
          <entry key="PLAIN_TEXT" value="5" />
          <entry key="XML" value="5" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.js.language.service.starts" />
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="clj" value="519" />
          <entry key="cljs" value="19654" />
          <entry key="gitignore" value="4" />
          <entry key="json" value="2" />
          <entry key="md" value="1022" />
          <entry key="txt" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Clojure" value="519" />
          <entry key="ClojureScript" value="19654" />
          <entry key="JSON" value="2" />
          <entry key="Markdown" value="1022" />
          <entry key="PLAIN_TEXT" value="5" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="cljs" value="6" />
          <entry key="edn" value="1" />
          <entry key="env" value="1" />
          <entry key="geojson" value="1" />
          <entry key="gitignore" value="1" />
          <entry key="json" value="23" />
          <entry key="md" value="2" />
          <entry key="txt" value="2" />
          <entry key="xml" value="5" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <splitter split-orientation="vertical" split-proportion="0.60948396">
      <split-first>
        <leaf>
          <file pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/../src/geojson/core.cljs">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="3153">
                  <caret line="269" column="9" selection-start-line="269" selection-start-column="9" selection-end-line="269" selection-end-column="9" />
                  <folding>
                    <element signature="e#19105#20756#0" />
                  </folding>
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/../test/test10-abv.json">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="558">
                  <caret line="31" column="2" selection-start-line="31" selection-start-column="2" selection-end-line="31" selection-end-column="91" />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-first>
      <split-second>
        <leaf>
          <file pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/../src/geojson/cartoFileStructure.md">
              <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
                <state split_layout="FIRST">
                  <first_editor />
                  <second_editor />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-second>
    </splitter>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>obj</find>
      <find>gfm</find>
      <find>growth</find>
      <find>x</find>
      <find>_d</find>
      <find>count</find>
    </findStrings>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/package.json" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/src/main/core.cljs" />
        <option value="$PROJECT_DIR$/shadow-cljs.edn" />
        <option value="$PROJECT_DIR$/../.env" />
        <option value="$PROJECT_DIR$/../shadow-idea-notes.md" />
        <option value="$PROJECT_DIR$/../shadow-cljs.edn" />
        <option value="$PROJECT_DIR$/../src/geojson/cartoFileStructure.md" />
        <option value="$PROJECT_DIR$/../test/files.json" />
        <option value="$PROJECT_DIR$/../test/files.txt" />
        <option value="$PROJECT_DIR$/../.gitignore" />
        <option value="$PROJECT_DIR$/../test/test9.json" />
        <option value="$PROJECT_DIR$/../test/test10.json" />
        <option value="$PROJECT_DIR$/../test/test10-abv.json" />
        <option value="$PROJECT_DIR$/../test/test11.json" />
        <option value="$PROJECT_DIR$/../pom.xml" />
        <option value="$PROJECT_DIR$/../src/merger/core.cljs" />
        <option value="$PROJECT_DIR$/../src/geojson/core.cljs" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="importAutomatically" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="NodeModulesDirectoryManager">
    <handled-path value="$PROJECT_DIR$/../node_modules" />
  </component>
  <component name="NodePackageJsonFileManager">
    <packageJsonPaths>
      <path value="$PROJECT_DIR$/../package.json" />
    </packageJsonPaths>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="2729" />
    <option name="y" value="221" />
    <option name="width" value="1432" />
    <option name="height" value="1567" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="geojson" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SearchEverywhereHistoryKey" value="markdow&#9;ACTION&#9;Markdown.Toolbar.Right&#10;gfm&#9;ACTION&#9;ActivateGfmBrowserToolWindow" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/pom.xml" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.editor" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\test" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\testing-'folder" />
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\testing-+folder" />
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\test-#testing#" />
    </key>
  </component>
  <component name="ReplState" timestamp="1533939922300">{:repl-history {:ide [], :local [], :remote [{:command &quot;(def vec-&gt;vint\n  (comp\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    ;(idxd-vinter)\n    (map #(vec %))))&quot;, :offset 142, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)\n    (map vec-&gt;vint)))&quot;, :offset 86, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)\n    (trasnsduce map vec-&gt;vint)))&quot;, :offset 97, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)\n    (transduce map vec-&gt;vint)))&quot;, :offset 96, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)\n    (into [] vec-&gt;vint)))&quot;, :offset 90, :ns &quot;geojson.core&quot;} {:command &quot;(def vec-&gt;vint\n  (comp\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    #(idxd-vinter %)\n    (map #(vec %))))&quot;, :offset 144, :ns &quot;geojson.core&quot;} {:command &quot;(def vec-&gt;vint\n  (comp\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    ((idxd-vinter))\n    (map #(vec %))))&quot;, :offset 143, :ns &quot;geojson.core&quot;} {:command &quot;(defn str-&gt;&gt;geoVinCpnts\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)                     ;; =&gt; [\&quot;st01\&quot; \&quot;d90\&quot; \&quot;shp\&quot; \&quot;zip\&quot;]\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))           ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))         ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (idxd-vinter)                                ;; only apply function to the 2nd item (vintage)\n    (map #(vec %))))&quot;, :offset 430, :ns &quot;geojson.core&quot;} {:command &quot;(defn str-&gt;&gt;geoVinCpnts\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)                     ;; =&gt; [\&quot;st01\&quot; \&quot;d90\&quot; \&quot;shp\&quot; \&quot;zip\&quot;]\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))           ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))))&quot;, :offset 262, :ns &quot;geojson.core&quot;} {:command &quot;(defn str-&gt;&gt;geoVinCpnts\n  [string]\n  (-&gt;&gt;\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))           ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))))&quot;, :offset 180, :ns &quot;geojson.core&quot;} {:command &quot;(defn str-&gt;&gt;geoVinCpnts\n  [vec-]\n  (-&gt;&gt;\n    (map (re-seq #\&quot;[a-z]+|[0-9]+\&quot; vec-))           ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))))&quot;, :offset 180, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)\n    (str-&gt;&gt;geoVinCpnts)))&quot;, :offset 90, :ns &quot;geojson.core&quot;} {:command &quot;(defn vec-&gt;&gt;geoVinCpnts\n  [vec-]\n  (-&gt;&gt;\n    (map (re-seq #\&quot;[a-z]+|[0-9]+\&quot; vec-))           ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))))&quot;, :offset 180, :ns &quot;geojson.core&quot;} {:command &quot;(doc re-seq)&quot;, :offset 12, :ns &quot;geojson.core&quot;} {:command &quot;(source re-seq)&quot;, :offset 15, :ns &quot;geojson.core&quot;} {:command &quot;(s/split \&quot;cb_2013_01_puma10_500k.zip\&quot; #\&quot;_|\\.\&quot;)&quot;, :offset 46, :ns &quot;geojson.core&quot;} {:command &quot;(vec-&gt;&gt;geoVinCpnts [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;])&quot;, :offset 60, :ns &quot;geojson.core&quot;} {:command &quot;(map (re-seq #\&quot;[a-z]+|[0-9]+\&quot; [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;]))&quot;, :offset 72, :ns &quot;geojson.core&quot;} {:command &quot;(map (re-seq #\&quot;[a-z]+|[0-9]+\&quot; [[\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;]]))&quot;, :offset 74, :ns &quot;geojson.core&quot;} {:command &quot;(defn vec-&gt;&gt;geoVinCpnts\n  [vec-]\n  (-&gt;&gt;\n    (map (re-seq #\&quot;[a-z]+|[0-9]+\&quot; %) vec-)           ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))))&quot;, :offset 182, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)\n    (vec-&gt;&gt;geoVinCpnts)))&quot;, :offset 90, :ns &quot;geojson.core&quot;} {:command &quot;(defn vec-&gt;&gt;geoVinCpnts\n  [vec-]\n  (-&gt;\n    (map (re-seq #\&quot;[a-z]+|[0-9]+\&quot; %) vec-)           ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))))&quot;, :offset 181, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)))&quot;, :offset 66, :ns &quot;geojson.core&quot;} {:command &quot;(map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %) [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;])&quot;, :offset 75, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;) ;; =&gt; [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;]\n    (vec-&gt;&gt;geoVinCpnts)))&quot;, :offset 137, :ns &quot;geojson.core&quot;} {:command &quot;(defn vec-&gt;&gt;geoVinCpnts\n  [vec-]\n  (-&gt;&gt;\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %) vec-)           ;; =&gt; ((\&quot;cb\&quot;) (\&quot;2013\&quot;) (\&quot;01\&quot;) (\&quot;puma\&quot; \&quot;10\&quot;) (\&quot;500\&quot; \&quot;k\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))))&quot;, :offset 201, :ns &quot;geojson.core&quot;} {:command &quot;(defn idxd-vinter\n  \&quot;\n  Take a vector of geo/vintage components and change\n  the second indexed item (the vintage component) from a\n  2-digit vintage to the appropriate 4-digit code\n  \&quot;\n  [input-coll]\n  (map-indexed\n    (fn [idx focus]\n      (if (zero? (mod (inc idx) 2))\n        (map (cond\n               (= \&quot;90\&quot; focus) \&quot;1990\&quot;\n               (= \&quot;00\&quot; focus) \&quot;2000\&quot;\n               :else focus))))\n    input-coll))&quot;, :offset 412, :ns &quot;geojson.core&quot;} {:command &quot;(defn idxd-vinter\n  \&quot;\n  Take a vector of geo/vintage components and change\n  the second indexed item (the vintage component) from a\n  2-digit vintage to the appropriate 4-digit code\n  \&quot;\n  (map-indexed\n    (fn [idx focus]\n      (if (zero? (mod (inc idx) 2))\n        (map (cond\n               (= \&quot;90\&quot; focus) \&quot;1990\&quot;\n               (= \&quot;00\&quot; focus) \&quot;2000\&quot;\n               :else focus))))))&quot;, :offset 382, :ns &quot;geojson.core&quot;} {:command &quot;(def vec-&gt;vint\n  (comp\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    (idxd-vinter)\n    (map #(vec %))))&quot;, :offset 141, :ns &quot;geojson.core&quot;} {:command &quot;(def idxd-vinter\n  (map-indexed\n    (fn [idx focus]\n      (if (zero? (mod (inc idx) 2))\n        (map (cond\n               (= \&quot;90\&quot; focus) \&quot;1990\&quot;\n               (= \&quot;00\&quot; focus) \&quot;2000\&quot;\n               :else focus))))))&quot;, :offset 213, :ns &quot;geojson.core&quot;} {:command &quot;(def vec-&gt;vint\n  (comp\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    (map-indexed\n      (fn [idx focus]\n        (if (zero? (mod (inc idx) 2))\n          (map (cond\n                 (= \&quot;90\&quot; focus) \&quot;1990\&quot;\n                 (= \&quot;00\&quot; focus) \&quot;2000\&quot;\n                 :else focus)))))\n    (map #(vec %))))&quot;, :offset 333, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;) ;; =&gt; [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;]\n    (transduce vec-&gt;vint [] conj)))&quot;, :offset 147, :ns &quot;geojson.core&quot;} {:command &quot;(def vec-&gt;vint\n  (comp\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    (map-indexed (fn [idx focus]\n                   (if (zero? (mod (inc idx) 2))\n                     (map (cond\n                            (= \&quot;90\&quot; focus) \&quot;1990\&quot;\n                            (= \&quot;00\&quot; focus) \&quot;2000\&quot;\n                            :else focus)))))\n    (map #(vec %))))&quot;, :offset 382, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDVinter\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;) ;; =&gt; [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;]\n    (transduce vec-&gt;vint conj)))&quot;, :offset 144, :ns &quot;geojson.core&quot;} {:command &quot;(geoIDVinter \&quot;cb_2013_01_puma10_500k.zip\&quot;)&quot;, :offset 42, :ns &quot;geojson.core&quot;} {:command &quot;(transduce vec-&gt;vint conj [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;])&quot;, :offset 67, :ns &quot;geojson.core&quot;} {:command &quot;(into [] vec-&gt;vint [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;])&quot;, :offset 60, :ns &quot;geojson.core&quot;} {:command &quot;(transduce vec-&gt;vint conj [] [\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;])&quot;, :offset 70, :ns &quot;geojson.core&quot;} {:command &quot;(transduce vec-&gt;vint conj [] ([\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;]))&quot;, :offset 72, :ns &quot;geojson.core&quot;} {:command &quot;(transduce vec-&gt;vint conj [] (\&quot;cb\&quot; \&quot;2013\&quot; \&quot;01\&quot; \&quot;puma10\&quot; \&quot;500k\&quot; \&quot;zip\&quot;))&quot;, :offset 70, :ns &quot;geojson.core&quot;} {:command &quot;(def vec-&gt;vint\n  (-&gt;&gt;\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    (map-indexed (fn [idx focus]\n                   (if (zero? (mod (inc idx) 2))\n                     (map (cond\n                            (= \&quot;90\&quot; focus) \&quot;1990\&quot;\n                            (= \&quot;00\&quot; focus) \&quot;2000\&quot;\n                            :else focus)))))\n    (map #(vec %))))&quot;, :offset 381, :ns &quot;geojson.core&quot;} {:command &quot;(s/split \&quot;testing_all_my.stuff\&quot; #\&quot;_|\\.\&quot;)&quot;, :offset 40, :ns &quot;geojson.core&quot;} {:command &quot;(s/split \&quot;testing_2ll_my.stuff\&quot; #\&quot;_|\\.\&quot;)&quot;, :offset 40, :ns &quot;geojson.core&quot;} {:command &quot;(map (partial re-seq #\&quot;[a-z]+|[0-9]+\&quot;) [\&quot;testing\&quot; \&quot;2ll\&quot; \&quot;my\&quot; \&quot;stuff\&quot;])&quot;, :offset 70, :ns &quot;geojson.core&quot;} {:command &quot;(defn ii-&gt;vin\n  \&quot;map over a single vector from the returned set of vectors from re-seq\&quot;\n  [vtr] \n  (map #(cond (= \&quot;90\&quot; %) \&quot;1990\&quot; (= \&quot;00\&quot; %) \&quot;2000\&quot; :else %) vtr))&quot;, :offset 161, :ns &quot;geojson.core&quot;} {:command &quot;(shadow/watch :lib)&quot;, :offset 19, :ns &quot;shadow.user&quot;} {:command &quot;(shadow.cljs.devtools.api/node-repl)&quot;, :offset 36, :ns &quot;shadow.user&quot;} {:command &quot;(ns geojson.core\n  (:require [cljs.core.async\n             :as async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async]]\n            [cljs.core.async :refer-macros [go go-loop alt!]]\n            [ajax.core :as http :refer [GET POST]]\n            [cognitect.transit :as t]\n            [oops.core :as obj]\n            [clojure.string :as s]\n            [clojure.set :refer [map-invert]]\n            [cljs.pprint :refer [pprint]]\n            [defun.core :refer-macros [defun]]\n            [\&quot;dotenv\&quot; :as env]\n            [\&quot;node-dir\&quot; :as dir]\n            [\&quot;fs\&quot; :as fs]\n            [\&quot;path\&quot; :as path]\n            [clojure.repl :refer [source]]))&quot;, :offset 672, :ns &quot;cljs.user&quot;} {:command &quot;(def geoKeyMap\n  {:nation                                                      {:2010 \&quot;outline\&quot;\n                                                                 :2013 \&quot;nation\&quot;\n                                                                 :2014 \&quot;nation\&quot;\n                                                                 :2015 \&quot;nation\&quot;\n                                                                 :2016 \&quot;nation\&quot;\n                                                                 :2017 \&quot;nation\&quot;}\n   :region                                                      {:2013 \&quot;region\&quot;\n                                                                 :2014 \&quot;region\&quot;\n                                                                 :2015 \&quot;region\&quot;\n                                                                 :2016 \&quot;region\&quot;\n                                                                 :2017 \&quot;region\&quot;\n                                                                 :2010 \&quot;020\&quot;\n                                                                 :2000 \&quot;rg\&quot;}\n   :division                                                    {:2013 \&quot;division\&quot;\n                                                                 :2014 \&quot;division\&quot;\n                                                                 :2015 \&quot;division\&quot;\n                                                                 :2016 \&quot;division\&quot;\n                                                                 :2017 \&quot;division\&quot;\n                                                                 :2010 \&quot;030\&quot;\n                                                                 :2000 \&quot;dv\&quot;}\n   :state                                                       {:2013 \&quot;state\&quot;\n                                                                 :2014 \&quot;state\&quot;\n                                                                 :2015 \&quot;state\&quot;\n                                                                 :2016 \&quot;state\&quot;\n                                                                 :2017 \&quot;state\&quot;\n                                                                 :2010 \&quot;040\&quot;\n                                                                 :1990 \&quot;st\&quot;\n                                                                 :2000 \&quot;st\&quot;}\n   :consolidated-cities                                         {:2000 \&quot;cc\&quot;\n                                                                 :2010 \&quot;170\&quot;\n                                                                 :2013 \&quot;concity\&quot;\n                                                                 :2014 \&quot;concity\&quot;\n                                                                 :2015 \&quot;concity\&quot;\n                                                                 :2016 \&quot;concity\&quot;\n                                                                 :2017 \&quot;concity\&quot;}\n   :county                                                      {:2013 \&quot;county\&quot;\n                                                                 :2014 \&quot;county\&quot;\n                                                                 :2015 \&quot;county\&quot;\n                                                                 :2016 \&quot;county\&quot;\n                                                                 :2017 \&quot;county\&quot;\n                                                                 :2010 \&quot;050\&quot;\n                                                                 :1990 \&quot;co\&quot;\n                                                                 :2000 \&quot;co\&quot;}\n   :county-subdivision                                          {:2013 \&quot;cousub\&quot;\n                                                                 :2014 \&quot;cousub\&quot;\n                                                                 :2015 \&quot;cousub\&quot;\n                                                                 :2016 \&quot;cousub\&quot;\n                                                                 :2017 \&quot;cousub\&quot;\n                                                                 :2010 \&quot;060\&quot;\n                                                                 :1990 \&quot;cs\&quot;\n                                                                 :2000 \&quot;cs\&quot;}\n   :tract                                                       {:2013 \&quot;tract\&quot;\n                                                                 :2014 \&quot;tract\&quot;\n                                                                 :2015 \&quot;tract\&quot;\n                                                                 :2016 \&quot;tract\&quot;\n                                                                 :2017 \&quot;tract\&quot;\n                                                                 :2010 \&quot;140\&quot;\n                                                                 :1990 \&quot;tr\&quot;\n                                                                 :2000 \&quot;tr\&quot;}\n   :place                                                       {:2013 \&quot;place\&quot;\n                                                                 :2014 \&quot;place\&quot;\n                                                                 :2015 \&quot;place\&quot;\n                                                                 :2016 \&quot;place\&quot;\n                                                                 :2017 \&quot;place\&quot;\n                                                                 :2010 \&quot;160\&quot;\n                                                                 :1990 \&quot;pl\&quot;\n                                                                 :2000 \&quot;pl\&quot;}\n   :alaska-native-regional-corporation                          {:2013 \&quot;anrc\&quot;\n                                                                 :2014 \&quot;anrc\&quot;\n                                                                 :2015 \&quot;anrc\&quot;\n                                                                 :2016 \&quot;anrc\&quot;\n                                                                 :2017 \&quot;anrc\&quot;\n                                                                 :2010 \&quot;230\&quot;\n                                                                 :1990 \&quot;an\&quot;\n                                                                 :2000 \&quot;an\&quot;}\n   :american-indian-area!alaska-native-area!hawaiian-home-land  {:2013 \&quot;aiannh\&quot;\n                                                                 :2014 \&quot;aiannh\&quot;\n                                                                 :2015 \&quot;aiannh\&quot;\n                                                                 :2016 \&quot;aiannh\&quot;\n                                                                 :2017 \&quot;aiannh\&quot;\n                                                                 :2010 \&quot;250\&quot;\n                                                                 :1990 \&quot;ir\&quot;\n                                                                 :2000 \&quot;na\&quot;}\n   :metropolitan-statistical-area!micropolitan-statistical-area {:2013 \&quot;cbsa\&quot;\n                                                                 :2014 \&quot;cbsa\&quot;\n                                                                 :2015 \&quot;cbsa\&quot;\n                                                                 :2016 \&quot;cbsa\&quot;\n                                                                 :2017 \&quot;cbsa\&quot;\n                                                                 :2010 \&quot;310\&quot;\n                                                                 :1990 \&quot;ma\&quot;}\n   :combined-statistical-area                                   {:2013 \&quot;csa\&quot;\n                                                                 :2014 \&quot;csa\&quot;\n                                                                 :2015 \&quot;csa\&quot;\n                                                                 :2016 \&quot;csa\&quot;\n                                                                 :2017 \&quot;csa\&quot;\n                                                                 :2010 \&quot;330\&quot;}\n   :new-england-city-and-town-area                              {:2013 \&quot;necta\&quot;\n                                                                 :2014 \&quot;necta\&quot;\n                                                                 :2015 \&quot;necta\&quot;\n                                                                 :2016 \&quot;necta\&quot;\n                                                                 :2017 \&quot;necta\&quot;\n                                                                 :2010 \&quot;350\&quot;}\n   :combined-new-england-city-and-town-area                     {:2016 \&quot;cnecta\&quot;\n                                                                 :2017 \&quot;cnecta\&quot;}\n   :urban-area                                                  {:2013 \&quot;ua\&quot;\n                                                                 :2014 \&quot;ua\&quot;\n                                                                 :2015 \&quot;ua\&quot;\n                                                                 :2016 \&quot;ua\&quot;\n                                                                 :2017 \&quot;ua\&quot;\n                                                                 :2012 \&quot;uac\&quot;\n                                                                 :1990 \&quot;ua\&quot;\n                                                                 :2000 \&quot;ua\&quot;}\n   :congressional-district                                      {:103  \&quot;cd\&quot;\n                                                                 :104  \&quot;cd\&quot;\n                                                                 :105  \&quot;cd\&quot;\n                                                                 :106  \&quot;cd\&quot;\n                                                                 :107  \&quot;cd\&quot;\n                                                                 :108  \&quot;cd\&quot;\n                                                                 :109  \&quot;cd\&quot;\n                                                                 :110  \&quot;cd\&quot;\n                                                                 :2013 \&quot;cd\&quot;\n                                                                 :2014 \&quot;cd\&quot;\n                                                                 :2015 \&quot;cd\&quot;\n                                                                 :2016 \&quot;cd\&quot;\n                                                                 :2017 \&quot;cd\&quot;\n                                                                 :2012 \&quot;cd\&quot;\n                                                                 :2010 \&quot;500\&quot;}\n   :school-district-'elementary'                                {:2016 \&quot;elsd\&quot;\n                                                                 :2017 \&quot;elsd\&quot;\n                                                                 :2000 \&quot;se\&quot;}\n   :school-district-'secondary'                                 {:2016 \&quot;scsd\&quot;\n                                                                 :2017 \&quot;scsd\&quot;\n                                                                 :2000 \&quot;ss\&quot;}\n   :school-district-'unified'                                   {:2016 \&quot;unsd\&quot;\n                                                                 :2017 \&quot;unsd\&quot;\n                                                                 :2010 \&quot;970\&quot;\n                                                                 :2000 \&quot;sn\&quot;}\n   :block-group                                                 {:2013 \&quot;bg\&quot;\n                                                                 :2014 \&quot;bg\&quot;\n                                                                 :2015 \&quot;bg\&quot;\n                                                                 :2016 \&quot;bg\&quot;\n                                                                 :2017 \&quot;bg\&quot;\n                                                                 :2010 \&quot;150\&quot;\n                                                                 :1990 \&quot;bg\&quot;\n                                                                 :2000 \&quot;bg\&quot;}\n   :public-use-microdata-area                                   {:2013 \&quot;puma\&quot;\n                                                                 :2014 \&quot;puma\&quot;\n                                                                 :2015 \&quot;puma\&quot;\n                                                                 :2016 \&quot;puma\&quot;\n                                                                 :2017 \&quot;puma\&quot;}\n   :zip-code-tabulation-area                                    {:2013 \&quot;zcta\&quot;\n                                                                 :2014 \&quot;zcta\&quot;\n                                                                 :2015 \&quot;zcta\&quot;\n                                                                 :2016 \&quot;zcta\&quot;\n                                                                 :2017 \&quot;zcta\&quot;\n                                                                 :2010 \&quot;860\&quot;\n                                                                 :2000 \&quot;zt\&quot;} ;; zipcodes are *not* the same\n   :state-legislative-district-'upper-chamber'                  {:2013 \&quot;sldu\&quot;\n                                                                 :2014 \&quot;sldu\&quot;\n                                                                 :2015 \&quot;sldu\&quot;\n                                                                 :2016 \&quot;sldu\&quot;\n                                                                 :2017 \&quot;sldu\&quot;\n                                                                 :2012 \&quot;sldu\&quot;\n                                                                 :2010 \&quot;610\&quot;\n                                                                 :2000 \&quot;su\&quot;}\n   :state-legislative-district-'lower-chamber'                  {:2013 \&quot;sldl\&quot;\n                                                                 :2014 \&quot;sldl\&quot;\n                                                                 :2015 \&quot;sldl\&quot;\n                                                                 :2016 \&quot;sldl\&quot;\n                                                                 :2017 \&quot;sldl\&quot;\n                                                                 :2012 \&quot;sldl\&quot;\n                                                                 :2010 \&quot;620\&quot;\n                                                                 :2000 \&quot;sl\&quot;}})&quot;, :offset 13549, :ns &quot;geojson.core&quot;} {:command &quot;(defn ii-&gt;vin\n  \&quot;map over a single vector from the returned set of vectors from re-seq\&quot;\n  [vtr]\n  (map #(cond (= \&quot;90\&quot; %) \&quot;1990\&quot; (= \&quot;00\&quot; %) \&quot;2000\&quot; :else %) vtr))&quot;, :offset 160, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoIDPartitioner\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)                                     ;; =&gt; [\&quot;st01\&quot; \&quot;d90\&quot; \&quot;shp\&quot; \&quot;zip\&quot;]\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))                           ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))                         ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map-indexed #(if (zero? (mod (inc %1) 2)) (ii-&gt;vin %2) %2)) ;; only apply function to the 2nd item (vintage)\n    (map #(vec %))))&quot;, :offset 493, :ns &quot;geojson.core&quot;} {:command &quot;(geoIDPartitioner \&quot;cb_2013_01_county_within_ua_500k.zip\&quot;)&quot;, :offset 57, :ns &quot;geojson.core&quot;} {:command &quot;(geoIDPartitioner \&quot;cb_d00_01_county_within_ua_500k.zip\&quot;)&quot;, :offset 56, :ns &quot;geojson.core&quot;} {:command &quot;(defn ii-&gt;vin\n  \&quot;map over a collection to transform 2-digit vintages to 4-digit\&quot;\n  [vtr]\n  (map #(cond (= \&quot;90\&quot; %) \&quot;1990\&quot;\n              (= \&quot;00\&quot; %) \&quot;2000\&quot;\n              :else %)\n       vtr))&quot;, :offset 188, :ns &quot;geojson.core&quot;} {:command &quot;(defn map-target-idx\n  \&quot;maps a provided function to a specific index of a provided collection\&quot;\n  [fnc idx coll]\n  (map-indexed #(if (zero? (mod (inc %1) idx)) (fnc %2) %2)) coll)&quot;, :offset 178, :ns &quot;geojson.core&quot;} {:command &quot;(defn map-target-idx\n  \&quot;maps a provided function to a specific index of a provided collection of collections\&quot;\n  [fnc idx coll]\n  (map-indexed #(if (zero? (mod (inc %1) idx)) (fnc %2) %2) coll))&quot;, :offset 193, :ns &quot;geojson.core&quot;} {:command &quot;(defn filename-&gt;geoID\n  \&quot;breaks apart a Census Tiger filename into its meaningful parts\&quot;\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    (map-target-idx ii-&gt;vin 2)\n    (map #(vec %))))&quot;, :offset 267, :ns &quot;geojson.core&quot;} {:command &quot;(filename-&gt;geoID \&quot;cb_d00_01_county_within_ua_500k.zip\&quot;)&quot;, :offset 55, :ns &quot;geojson.core&quot;} {:command &quot;(apply str \&quot;100\&quot; (\&quot;200\&quot; \&quot;203\&quot;))&quot;, :offset 31, :ns &quot;geojson.core&quot;} {:command &quot;(apply str \&quot;100\&quot; [\&quot;200\&quot; \&quot;203\&quot;])&quot;, :offset 31, :ns &quot;geojson.core&quot;} {:command &quot;(str \&quot;100\&quot; [\&quot;200\&quot; \&quot;203\&quot;])&quot;, :offset 25, :ns &quot;geojson.core&quot;} {:command &quot;(apply pprint \&quot;100\&quot; [\&quot;200\&quot; \&quot;203\&quot;])&quot;, :offset 34, :ns &quot;geojson.core&quot;} {:command &quot;(tester \&quot;100\&quot; [\&quot;200\&quot; \&quot;203\&quot;])&quot;, :offset 28, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (map identity stuff more))&quot;, :offset 58, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (map str stuff more))&quot;, :offset 53, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (map #(identity %) stuff more))&quot;, :offset 63, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (map #(str %) stuff more))&quot;, :offset 58, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (map + stuff more))&quot;, :offset 51, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (apply str stuff more))&quot;, :offset 55, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (apply identity stuff more))&quot;, :offset 60, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (apply #(map identity %) stuff more))&quot;, :offset 69, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (apply #(map str %) stuff more))&quot;, :offset 64, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (map #(apply str %) stuff more))&quot;, :offset 64, :ns &quot;geojson.core&quot;} {:command &quot;(defn tester\n  [stuff &amp; more]\n  (list* stuff more))&quot;, :offset 51, :ns &quot;geojson.core&quot;} {:command &quot;(tester \&quot;100\&quot; \&quot;200\&quot; \&quot;203\&quot;)&quot;, :offset 26, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [lev res m vin &amp; etc]\n  (apply str (interpose \&quot;/\&quot; [(apply str res m) (list* vin etc) (apply str (keyFinder vin lev) \&quot;.json\&quot;)])))&quot;, :offset 252, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (apply str (interpose \&quot;/\&quot; [(apply str res m) (list* vin etc) (apply str (keyFinder vin lev) \&quot;.json\&quot;)])))&quot;, :offset 254, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (apply str (interpose \&quot;/\&quot; [(apply str res m) (interpose \&quot;/\&quot;(list* vin etc)) (apply str (keyFinder vin lev) \&quot;.json\&quot;)])))&quot;, :offset 269, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (apply str (interpose \&quot;/\&quot; [(apply str res m) (interpose \&quot;/\&quot; [vin etc]) (apply str (keyFinder vin lev) \&quot;.json\&quot;)])))&quot;, :offset 264, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (apply str (interpose \&quot;/\&quot; [(apply str res m) (interpose \&quot;/\&quot; [(list* vin etc)]) (apply str (keyFinder vin lev) \&quot;.json\&quot;)])))&quot;, :offset 272, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (let [geopath (interpose \&quot;/\&quot; [(list* vin etc)])]\n    (apply str (interpose \&quot;/\&quot; [(apply str res m) geopath (apply str (keyFinder vin lev) \&quot;.json\&quot;)]))))&quot;, :offset 300, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (let [geopath (interpose \&quot;/\&quot; [vin etc])]\n    (apply str (interpose \&quot;/\&quot; [(apply str res m) geopath (apply str (keyFinder vin lev) \&quot;.json\&quot;)]))))&quot;, :offset 292, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (let [geopath (interpose \&quot;/\&quot; (apply str (list* vin etc)))]\n    (apply str (interpose \&quot;/\&quot; [(apply str res m) geopath (apply str (keyFinder vin lev) \&quot;.json\&quot;)]))))&quot;, :offset 310, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (let [geopath (interpose \&quot;/\&quot; (apply identity (list* vin etc)))]\n    (apply str (interpose \&quot;/\&quot; [(apply str res m) geopath (apply str (keyFinder vin lev) \&quot;.json\&quot;)]))))&quot;, :offset 315, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (let [geopath (interpose \&quot;/\&quot; (list* vin etc))]\n    (apply str (interpose \&quot;/\&quot; [(apply str res m) geopath (apply str (keyFinder vin lev) \&quot;.json\&quot;)]))))&quot;, :offset 298, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (let [geopath (apply str (interpose \&quot;/\&quot; (list* vin etc)))]\n    (apply str (interpose \&quot;/\&quot; [(apply str res m) geopath (apply str (keyFinder vin lev) \&quot;.json\&quot;)]))))&quot;, :offset 310, :ns &quot;geojson.core&quot;} {:command &quot;(parts-&gt;geopath [\&quot;county\&quot; \&quot;500\&quot; \&quot;k\&quot; \&quot;2000\&quot; \&quot;01\&quot;])&quot;, :offset 49, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoKeyTranslator\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin sco]]\n  (if-not (= \&quot;\&quot; (keyFinder vin lev))\n    (if (or (= sco \&quot;99\&quot;) (= sco \&quot;us\&quot;))\n      (parts-&gt;geopath [lev res m vin])\n      (parts-&gt;geopath [lev res m vin sco]))\n    nil))&quot;, :offset 316, :ns &quot;geojson.core&quot;} {:command &quot;(defn ii-&gt;vin\n  \&quot;Map over a collection to transform 2-digit vintages to their 4-digit codes.\&quot;\n  [vtr]\n  (map #(cond (= \&quot;90\&quot; %) \&quot;1990\&quot;\n              (= \&quot;00\&quot; %) \&quot;2000\&quot;\n              :else %)\n       vtr))&quot;, :offset 201, :ns &quot;geojson.core&quot;} {:command &quot;(defn map-target-idx\n  \&quot;Maps a provided function to a specific index of a provided collection of collections.\&quot;\n  [fnc idx coll]\n  (map-indexed #(if (zero? (mod (inc %1) idx)) (fnc %2) %2) coll))&quot;, :offset 194, :ns &quot;geojson.core&quot;} {:command &quot;(defn filename-&gt;geoIDvecs\n  \&quot;Breaks apart a Census Tiger filename and cleans it into meaningful parts.\&quot;\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;)\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n    (map-target-idx ii-&gt;vin 2)\n    (map #(vec %))))&quot;, :offset 282, :ns &quot;geojson.core&quot;} {:command &quot;(defn find1Key\n  \&quot;Searches a single item from an inverted geoKeyMap and checks for a match against the provided vintage/level-code pair. Returns the `name` of the key (string) if matched and `nil` if mismatched.\&quot;\n  [vintage level [k v]]\n  (if-let [[_ v2] (find k (keyword vintage))]\n    (if (= v2 level)\n      (name v)\n      nil)\n    nil))&quot;, :offset 339, :ns &quot;geojson.core&quot;} {:command &quot;(defn keyFinder\n  \&quot;Searches the entire geoKeyMap (inverted) for matches against a provided vintage and level returning a string for the verbose geoKeyMap key match if successful and an empty string ('') if not\&quot;\n  [vintage level]\n  (apply str (remove nil? (map #(find1Key vintage level %) (seq (map-invert geoKeyMap))))))&quot;, :offset 320, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;Consumes parts of the Tiger filename to compose a structured path for storage as a `.json` file.\&quot;\n  [[lev res m vin &amp; etc]]\n  (let [geopath (s/join \&quot;/\&quot; (list* vin etc))]\n    (apply str (interpose \&quot;/\&quot; [(apply str res m) geopath (apply str (keyFinder vin lev) \&quot;.json\&quot;)]))))&quot;, :offset 295, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoScopeFiler\n  \&quot;Creates a filepath determined by whether or not the input contains a state (e.g., '01') or national code ('99'/'us')\&quot;\n  [[lev res m vin sco]]\n  (if-not (= \&quot;\&quot; (keyFinder vin lev))\n    (if (or (= sco \&quot;99\&quot;) (= sco \&quot;us\&quot;))\n      (parts-&gt;geopath [lev res m vin])\n      (parts-&gt;geopath [lev res m vin sco]))\n    nil))&quot;, :offset 333, :ns &quot;geojson.core&quot;} {:command &quot;(defun fileDirector\n  \&quot;testing doc\&quot;\n  ([[lev sco] [vin] _     _]                                (geoScopeFiler [lev       \&quot;500\&quot; \&quot;k\&quot; vin    sco]))\n  ([_         [vin] [sco] [\&quot;outline\&quot;]  [res m] _]           (geoScopeFiler [\&quot;outline\&quot; res   m   vin    sco]))\n  ([_         [vin] [sco] [\&quot;uac\&quot; \&quot;10\&quot;] [res m] _]           (geoScopeFiler [\&quot;uac\&quot;     res   m   vin    sco]))\n  ([_         [vin] [sco] [lev]        _         [res m] _] (geoScopeFiler [lev       res   m   vin    sco]))\n  ([_         [vin] [sco] [lev]        [res m] _]           (geoScopeFiler [lev       res   m   vin    sco]))\n  ([_         [vin] [sco] [lev]        [res m] _]           (geoScopeFiler [lev       res   m   vin    sco]))\n  ([_         _     [sco] [lev \&quot;113\&quot;]  [res m] _]           (geoScopeFiler [lev       res   m   \&quot;2012\&quot; sco]))\n  ([&amp; anything-else] nil))&quot;, :offset 832, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoFileTrans\n  [string]\n  (if-let [answer (-&gt;&gt; (filename-&gt;geoIDvecs string) (apply fileDirector))]\n    answer\n    nil))&quot;, :offset 125, :ns &quot;geojson.core&quot;} {:command &quot;(\n\n\n;;                  88~\\\n;;  Y88b  /       _888__  e88~-_  888-~\\ 888-~88e-~88e\n;;   Y88b/   ____  888   d888   i 888    888  888  888\n;;    Y88b         888   8888   | 888    888  888  888\n;;    /Y88b        888   Y888   ' 888    888  888  888\n;;   /  Y88b       888    '88_-~  888    888  888  888\n\n\n;(defn x-vinter\n;  [rf]\n;  (fn\n;    ([] (rf))\n;    ([result] (rf result))\n;    ([result input]\n;     (rf result\n;         (cond\n;           (= \&quot;90\&quot; input) \&quot;1990\&quot;\n;           (= \&quot;00\&quot; input) \&quot;2000\&quot;\n;           :else input))))))\n;\n;(into [] x-vinter [\&quot;90\&quot; \&quot;blah\&quot;])\n\n;([string]\n;  (fn [rf]\n;    (fn\n;      ([] (rf))\n;      ([result] (rf result))\n;      ([result item]\n;       (rf result (s/split string #\&quot;\\\\\&quot;) item))))))\n\n\n;(comment\n  (geoFileTrans \&quot;tb99_d00_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;zt01_d00_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/2000/01/zip-code-tabulation-area.json\&quot;\n\n  (geoFileTrans \&quot;cm_sa_96_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;tb99_d00_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;zt01_d00_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/2000/01/zip-code-tabulation-area.json\&quot;\n\n  (geoFileTrans \&quot;cm_sa_96_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;cmsa_96_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;cb99_03a_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;cb_2014_us_county_within_cd114_500k.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;cb_rd13_us_cd113_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2012/congressional-district.json\&quot;\n\n  (geoFileTrans \&quot;st01_d90_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/1990/01/state.json\&quot;\n\n  (geoFileTrans \&quot;rg99_d00_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/2000/region.json\&quot;\n\n  (geoFileTrans \&quot;gz_2010_us_outline_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2010/nation.json\&quot;\n\n  (geoFileTrans \&quot;cb_2012_us_uac10_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2012/urban-area.json\&quot;\n\n  (geoFileTrans \&quot;gz_2010_us_330_m1_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2010/combined-statistical-area.json\&quot;\n\n  (geoFileTrans \&quot;gz_2010_01_970_00_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2010/01/school-district-'unified'.json\&quot;\n\n  (geoFileTrans \&quot;cb_2014_us_nation_5m.zip\&quot;)\n  ;; =&gt; \&quot;5m/2014/nation.json\&quot;\n\n  (geoFileTrans \&quot;cb_2014_us_region_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2014/region.json\&quot;\n\n  (geoFileTrans \&quot;cb_2014_01_tract_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2014/01/tract.json\&quot;\n\n  (geoFileTrans \&quot;cd36_103_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/103/36/congressional-district.json\&quot;\n\n  (geoFileTrans \&quot;cb_rd13_us_cd113_500k.zip\&quot;))&quot;, :offset 2241, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoFileTrans\n  [string]\n  (if-let [answer (-&gt;&gt; (filename-&gt;geoIDvecs string) (apply fileDirector))]\n    answer\n    nil)                                                   ;; use the `nil` here to trigger the fs to skip this file\n;(str (first (s/split string #\&quot;\\.\&quot;)) \&quot;.json\&quot;))) ;; just naively convert the filename to .json in flat folder\n\n\n\n\n;;                  88~\\\n;;  Y88b  /       _888__  e88~-_  888-~\\ 888-~88e-~88e\n;;   Y88b/   ____  888   d888   i 888    888  888  888\n;;    Y88b         888   8888   | 888    888  888  888\n;;    /Y88b        888   Y888   ' 888    888  888  888\n;;   /  Y88b       888    '88_-~  888    888  888  888\n\n\n;(defn x-vinter\n;  [rf]\n;  (fn\n;    ([] (rf))\n;    ([result] (rf result))\n;    ([result input]\n;     (rf result\n;         (cond\n;           (= \&quot;90\&quot; input) \&quot;1990\&quot;\n;           (= \&quot;00\&quot; input) \&quot;2000\&quot;\n;           :else input))))))\n;\n;(into [] x-vinter [\&quot;90\&quot; \&quot;blah\&quot;])\n\n;([string]\n;  (fn [rf]\n;    (fn\n;      ([] (rf))\n;      ([result] (rf result))\n;      ([result item]\n;       (rf result (s/split string #\&quot;\\\\\&quot;) item))))))\n\n  \n  (geoFileTrans \&quot;tb99_d00_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;zt01_d00_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/2000/01/zip-code-tabulation-area.json\&quot;\n\n  (geoFileTrans \&quot;cm_sa_96_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;tb99_d00_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;zt01_d00_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/2000/01/zip-code-tabulation-area.json\&quot;\n\n  (geoFileTrans \&quot;cm_sa_96_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;cmsa_96_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;cb99_03a_shp.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;cb_2014_us_county_within_cd114_500k.zip\&quot;)\n  ;; =&gt; nil\n\n  (geoFileTrans \&quot;cb_rd13_us_cd113_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2012/congressional-district.json\&quot;\n\n  (geoFileTrans \&quot;st01_d90_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/1990/01/state.json\&quot;\n\n  (geoFileTrans \&quot;rg99_d00_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/2000/region.json\&quot;\n\n  (geoFileTrans \&quot;gz_2010_us_outline_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2010/nation.json\&quot;\n\n  (geoFileTrans \&quot;cb_2012_us_uac10_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2012/urban-area.json\&quot;\n\n  (geoFileTrans \&quot;gz_2010_us_330_m1_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2010/combined-statistical-area.json\&quot;\n\n  (geoFileTrans \&quot;gz_2010_01_970_00_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2010/01/school-district-'unified'.json\&quot;\n\n  (geoFileTrans \&quot;cb_2014_us_nation_5m.zip\&quot;)\n  ;; =&gt; \&quot;5m/2014/nation.json\&quot;\n\n  (geoFileTrans \&quot;cb_2014_us_region_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2014/region.json\&quot;\n\n  (geoFileTrans \&quot;cb_2014_01_tract_500k.zip\&quot;)\n  ;; =&gt; \&quot;500k/2014/01/tract.json\&quot;\n\n  (geoFileTrans \&quot;cd36_103_shp.zip\&quot;)\n  ;; =&gt; \&quot;500k/103/36/congressional-district.json\&quot;\n\n  (geoFileTrans \&quot;cb_rd13_us_cd113_500k.zip\&quot;))&quot;, :offset 2575, :ns &quot;geojson.core&quot;} {:command &quot;(geoFileTrans \&quot;tb99_d00_shp.zip\&quot;)&quot;, :offset 33, :ns &quot;geojson.core&quot;}]}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="&lt;template&gt;" type="JUnit" default="true" selected="false">
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
    </configuration>
    <configuration name="&lt;template&gt;" type="TestNG" default="true" selected="false">
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Shadow REPL" type="ClojureREPL" factoryName="Remote">
      <module name="census-geojson" />
      <setting name="host" value="localhost" />
      <setting name="port" value="3333" />
      <setting name="replType" value="0" />
      <method v="2" />
    </configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="82ac4cda-63ef-47ec-b2ea-e93ad332046f" name="Default" comment="" />
      <created>1532985568925</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1532985568925</updated>
      <workItem from="1532985572100" duration="1880000" />
      <workItem from="1532987541062" duration="95000" />
      <workItem from="1532987719844" duration="2400000" />
      <workItem from="1532990391831" duration="692000" />
      <workItem from="1532991145601" duration="37320000" />
      <workItem from="1533223286311" duration="471000" />
      <workItem from="1533223860548" duration="61732000" />
      <workItem from="1533477791155" duration="93000" />
      <workItem from="1533477968393" duration="42000" />
      <workItem from="1533478159070" duration="86000" />
      <workItem from="1533478288842" duration="6152000" />
      <workItem from="1533558682794" duration="282000" />
      <workItem from="1533559006262" duration="69089000" />
      <workItem from="1533816892156" duration="21721000" />
      <workItem from="1533908701380" duration="2169000" />
      <workItem from="1533910910674" duration="122000" />
      <workItem from="1533911219766" duration="17000" />
      <workItem from="1533911277575" duration="19508000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="223871000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="2729" y="221" width="1432" height="1567" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.16399416" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Designer" order="2" />
      <window_info id="Favorites" order="3" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" sideWeight="0.49960032" weight="0.32914925" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" weight="0.32914925" />
      <window_info anchor="bottom" id="Database Changes" order="8" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="9" show_stripe_button="false" />
      <window_info anchor="bottom" id="Quokka" order="10" />
      <window_info anchor="bottom" id="Terminal" order="11" sideWeight="0.3277378" weight="0.32977304" />
      <window_info anchor="bottom" id="Dependency Viewer" order="12" weight="0.32962447" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="GfmBrowser" order="3" weight="0.32980227" />
      <window_info anchor="right" id="Palette&#9;" order="4" />
      <window_info anchor="right" id="Leiningen" order="5" />
      <window_info anchor="right" id="Database" order="6" />
      <window_info anchor="right" id="Maven Projects" order="7" />
      <window_info active="true" anchor="right" x="4159" y="1178" width="1136" height="602" id="REPL" order="8" sideWeight="0.5003997" side_tool="true" type="WINDOWED" visible="true" weight="0.33734134" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName=".gitignore" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/../node_modules/shadow-cljs/package.json" />
    <entry file="file://$PROJECT_DIR$/../node_modules/shadow-cljs/cli/default-config.edn" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="60">
          <caret line="3" column="10" selection-start-line="3" selection-start-column="10" selection-end-line="3" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../geoRaw/test-#testing#/test-#.json" />
    <entry file="file://$PROJECT_DIR$/../geoRaw/testing-+folder/testing-+file.json" />
    <entry file="file://$PROJECT_DIR$/../geoRaw/testing!-'folder/counties-!test'.json" />
    <entry file="file://$PROJECT_DIR$/../shadow-idea-notes.md" />
    <entry file="file://$PROJECT_DIR$/../src/main/core.cljs" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojurescript/1.10.339/clojurescript-1.10.339.jar!/cljs/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="724">
          <caret line="2936" column="6" selection-start-line="2936" selection-start-column="6" selection-end-line="2936" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../test/testingslashes.json" />
    <entry file="file://$PROJECT_DIR$/../test/files.json" />
    <entry file="file://$PROJECT_DIR$/../test/files.txt" />
    <entry file="file://$PROJECT_DIR$/../test/filelist.json" />
    <entry file="file://$PROJECT_DIR$/../test/test2.json" />
    <entry file="file://$PROJECT_DIR$/../test/test3.json" />
    <entry file="file://$PROJECT_DIR$/../test/test4.json" />
    <entry file="file://$PROJECT_DIR$/../.env" />
    <entry file="file://$PROJECT_DIR$/../.gitignore" />
    <entry file="file://$PROJECT_DIR$/../test/test7.json" />
    <entry file="file://$PROJECT_DIR$/../test/test6.json" />
    <entry file="file://$PROJECT_DIR$/../test/test5.json" />
    <entry file="file://$PROJECT_DIR$/../test/test9.json" />
    <entry file="file://$PROJECT_DIR$/../test/test8.json" />
    <entry file="file://$PROJECT_DIR$/../test/counties.json" />
    <entry file="file://$PROJECT_DIR$/../test/test11.json" />
    <entry file="file://$PROJECT_DIR$/../src/merger/core.cljs" />
    <entry file="file://$PROJECT_DIR$/../pom.xml" />
    <entry file="file://$PROJECT_DIR$/../test/test10.json" />
    <entry file="file://$PROJECT_DIR$/../shadow-cljs.edn" />
    <entry file="file://$PROJECT_DIR$/../package.json" />
    <entry file="file://$USER_HOME$/AppData/Local/Temp/Temp1_mygeodata.zip/cb_2015_us_aiannh_500k.geojson" />
    <entry file="file://$PROJECT_DIR$/../src/geojson/cartoFileStructure.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="FIRST">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../test/test10-abv.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="558">
          <caret line="31" column="2" selection-start-line="31" selection-start-column="2" selection-end-line="31" selection-end-column="91" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/geojson/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="3153">
          <caret line="269" column="9" selection-start-line="269" selection-start-column="9" selection-end-line="269" selection-end-column="9" />
          <folding>
            <element signature="e#19105#20756#0" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>census-geojson</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Maven: args4j:args4j:2.33</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>