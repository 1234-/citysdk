<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="82ac4cda-63ef-47ec-b2ea-e93ad332046f" name="Default" comment="" />
    <ignored path="$PROJECT_DIR$/../target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="-985704565">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="1" />
          <entry key="project.open.time.11" value="1" />
          <entry key="project.opened" value="1" />
        </counts>
      </usages-collector>
    </session>
    <session id="364820673">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.open.time.10" value="1" />
          <entry key="project.opened" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="ClojureScript" value="2" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.js.language.service.starts" />
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="clj" value="105" />
          <entry key="cljs" value="801" />
          <entry key="md" value="89" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Clojure" value="105" />
          <entry key="ClojureScript" value="801" />
          <entry key="Markdown" value="89" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="cljs" value="2" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <splitter split-orientation="vertical" split-proportion="0.5">
      <split-first>
        <leaf>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/../src/geojson/cartoFileStructure.md">
              <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
                <state split_layout="FIRST">
                  <first_editor relative-caret-position="500">
                    <caret line="25" column="18" selection-start-line="25" selection-start-column="18" selection-end-line="25" selection-end-column="18" />
                  </first_editor>
                  <second_editor />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/../src/geojson/core.cljs">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="521">
                  <caret line="109" column="11" lean-forward="true" selection-start-line="109" selection-start-column="11" selection-end-line="109" selection-end-column="11" />
                </state>
              </provider>
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/../src/main/core.cljs">
              <provider selected="true" editor-type-id="text-editor" />
            </entry>
          </file>
          <file pinned="false" current-in-tab="false">
            <entry file="file://$PROJECT_DIR$/../src/merger/core.cljs">
              <provider selected="true" editor-type-id="text-editor">
                <state>
                  <caret column="2" lean-forward="true" selection-start-column="2" selection-end-column="2" />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-first>
      <split-second>
        <leaf>
          <file pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/../src/geojson/cartoFileStructure.md">
              <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
                <state split_layout="FIRST">
                  <first_editor relative-caret-position="539">
                    <caret line="408" column="34" selection-start-line="408" selection-start-column="34" selection-end-line="408" selection-end-column="34" />
                  </first_editor>
                  <second_editor />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-second>
    </splitter>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>obj</find>
      <find>gfm</find>
      <find>growth</find>
      <find>x</find>
      <find>_d</find>
    </findStrings>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/package.json" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/src/main/core.cljs" />
        <option value="$PROJECT_DIR$/shadow-cljs.edn" />
        <option value="$PROJECT_DIR$/../shadow-cljs.edn" />
        <option value="$PROJECT_DIR$/../.env" />
        <option value="$PROJECT_DIR$/../.gitignore" />
        <option value="$PROJECT_DIR$/../shadow-idea-notes.md" />
        <option value="$PROJECT_DIR$/../src/merger/core.cljs" />
        <option value="$PROJECT_DIR$/../src/geojson/cartoFileStructure.md" />
        <option value="$PROJECT_DIR$/../src/geojson/core.cljs" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="importAutomatically" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="NodeModulesDirectoryManager">
    <handled-path value="$PROJECT_DIR$/../node_modules" />
  </component>
  <component name="NodePackageJsonFileManager">
    <packageJsonPaths>
      <path value="$PROJECT_DIR$/../package.json" />
    </packageJsonPaths>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="2729" />
    <option name="y" value="221" />
    <option name="width" value="1525" />
    <option name="height" value="1567" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="geojson" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="merger" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
      <pane id="PackagesPane" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SearchEverywhereHistoryKey" value="markdow&#9;ACTION&#9;Markdown.Toolbar.Right&#10;gfm&#9;ACTION&#9;ActivateGfmBrowserToolWindow" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/pom.xml" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\testing-'folder" />
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\testing-+folder" />
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\test-#testing#" />
    </key>
  </component>
  <component name="ReplState" timestamp="1533489982696">{:repl-history {:ide [], :local [], :remote [{:command &quot;(GET\n  \&quot;http://api.sushicount.com/add-piece-of-sushi/0\&quot;\n  {:handler #(prn %)})&quot;, :offset 78, :ns &quot;merger.core&quot;} {:command &quot;(go\n  (-&gt;\n    (get-json-&gt;put! \&quot;https://api.census.gov/data/2016/acs/acs5?get=B01001_001E,B01001_001M&amp;in=state:01&amp;for=county:*\&quot;)\n    (&lt;!)\n    (pprint)))&quot;, :offset 151, :ns &quot;merger.core&quot;} {:command &quot;(ns merger.core\n  (:require [cljs.core.async\n             :as async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async]]\n            [cljs.core.async :refer-macros [go go-loop alt!]]\n            [ajax.core :as http :refer [GET POST]]\n            [cognitect.transit :as t]\n            [oops.core :as obj]\n            [clojure.string :as s]\n            [cljs.pprint :refer [pprint]]\n            [\&quot;dotenv\&quot; :as env]\n            [\&quot;fs\&quot; :as fs])\n  (:use [clojure.repl :only (source)]))&quot;, :offset 511, :ns &quot;cljs.user&quot;} {:command &quot;(defn get-sushi [format handler keywords?]\n  (GET\n    \&quot;http://api.sushicount.com/add-piece-of-sushi/0\&quot;\n    {:handler         handler\n     :error-handler   #(prn (str \&quot;bad sushi: \&quot; %))\n     :response-format format\n     :keywords?       keywords?}))&quot;, :offset 247, :ns &quot;merger.core&quot;} {:command &quot;(get-sushi :json prn false)&quot;, :offset 27, :ns &quot;merger.core&quot;} {:command &quot;(defn get-markets [format zipcode keywords?]\n  (GET\n    \&quot;https://search.ams.usda.gov/farmersmarkets/v1/data.svc/zipSearch\&quot;\n    {:response-format format\n     :handler         #(pprint %)\n     :keywords?       keywords?\n     :error-handler   #(prn (str \&quot;Error!: \&quot; %))\n     :params          {:zip zipcode}}))&quot;, :offset 305, :ns &quot;merger.core&quot;} {:command &quot;(defn get-json-&gt;put!\n  [base-url keywords?]\n  (let [=resp= (chan)\n        args (merge\n               {:response-format :json\n                :handler         #(put! =resp= %)\n                :error-handler   #(prn (str \&quot;ERROR: \&quot; %))}\n               (when-let [keywords? {:keywords? keywords?}]\n                 keywords?))]\n    (do\n      (GET base-url args)\n      =resp=)))&quot;, :offset 373, :ns &quot;merger.core&quot;} {:command &quot;(go\n  (-&gt;\n    (get-json-&gt;put! \&quot;https://api.census.gov/data/2016/acs/acs5?get=B01001_001E,B01001_001M&amp;in=state:01&amp;for=county:*\&quot; false)\n    (&lt;!)\n    (pprint)))&quot;, :offset 157, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair]\n  (subs (str (s/join \&quot;:\&quot; pair)) 1))&quot;, :offset 61, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot; (s/join \&quot;/\&quot; sourcePath)\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy)))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str %) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy))))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 509, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot; (s/join \&quot;/\&quot; sourcePath)\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (\&quot;&amp;\&quot; ()))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 575, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot; (s/join \&quot;/\&quot; sourcePath)\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (\&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))\n      (\&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 622, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :tract \&quot;000100\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :predicates   {:test 01}\n                    :statsKey     stats-key})&quot;, :offset 322, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot; (s/join \&quot;/\&quot; sourcePath)\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (s/join (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates)))\n      (str \&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 639, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot; (s/join \&quot;/\&quot; sourcePath)\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))\n      (str \&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 630, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :tract \&quot;000100\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :predicates   {:test \&quot;01\&quot;}\n                    :statsKey     stats-key})&quot;, :offset 324, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot; (s/join \&quot;/\&quot; sourcePath)\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (str (s/join \&quot;\&quot; (map #(kv-pair-&gt;str % \&quot;-\&quot;) predicates))))\n      (str \&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 648, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot; (s/join \&quot;/\&quot; sourcePath)\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (str (s/join \&quot;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n      (str \&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 648, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (str (s/join separator pair)))&quot;, :offset 68, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot; (s/join \&quot;/\&quot; sourcePath)\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n      (str \&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 649, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :tract \&quot;000100\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :predicates   {:test \&quot;01\&quot;\n                                   :smell \&quot;02\&quot;}\n                    :statsKey     stats-key})&quot;, :offset 371, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot;\n    (if (= 1 (count sourcePath))\n      (str sourcePath)\n      (s/join \&quot;/\&quot; sourcePath))\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n      (str \&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 712, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2010\&quot;\n                    :sourcePath   [cbp]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;*\&quot;}\n                    :variables    [\&quot;ESTAB\&quot;]\n                    :predicates   {:EMPSZES \&quot;212\&quot;}\n                    :statsKey     stats-key})&quot;, :offset 281, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot;\n    (if (= 1 (count sourcePath))\n      (reduce str sourcePath \&quot;\&quot;)\n      (s/join \&quot;/\&quot; sourcePath))\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n      (str \&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 722, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2010\&quot;\n                    :sourcePath   [\&quot;cbp\&quot; \&quot;xyz\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;*\&quot;}\n                    :variables    [\&quot;ESTAB\&quot;]\n                    :predicates   {:EMPSZES \&quot;212\&quot;}\n                    :statsKey     stats-key})&quot;, :offset 289, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot;\n    (if (= 1 (count sourcePath))\n      (str (first sourcePath))\n      (s/join \&quot;/\&quot; sourcePath))\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n      (str \&quot;\&quot;))\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 720, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (str\n    \&quot;https://api.census.gov/data/\&quot;\n    vintage\n    \&quot;/\&quot;\n    (if (= 1 (count sourcePath))\n      (str (first sourcePath))\n      (s/join \&quot;/\&quot; sourcePath))\n    \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n    (if (some? predicates)\n      (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n      \&quot;\&quot;)\n    (if (= 1 (count geoHierarchy))\n      (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n      (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n           \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n    \&quot;&amp;key=\&quot; statsKey))&quot;, :offset 714, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (replace\n    (str\n      \&quot;https://api.census.gov/data/\&quot;\n      vintage\n      \&quot;/\&quot;\n      (if (= 1 (count sourcePath))\n        (str (first sourcePath))\n        (s/join \&quot;/\&quot; sourcePath))\n      \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n      (if (some? predicates)\n        (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n        \&quot;\&quot;)\n      (if (= 1 (count geoHierarchy))\n        (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n        (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n             \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n      \&quot;&amp;key=\&quot; statsKey)\n    #\&quot;-\&quot; \&quot;%20\&quot;))&quot;, :offset 773, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace\n    (str\n      \&quot;https://api.census.gov/data/\&quot;\n      vintage\n      \&quot;/\&quot;\n      (if (= 1 (count sourcePath))\n        (str (first sourcePath))\n        (s/join \&quot;/\&quot; sourcePath))\n      \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n      (if (some? predicates)\n        (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n        \&quot;\&quot;)\n      (if (= 1 (count geoHierarchy))\n        (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n        (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n             \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n      \&quot;&amp;key=\&quot; statsKey)\n    #\&quot;-\&quot; \&quot;%20\&quot;))&quot;, :offset 775, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace\n    (str\n      \&quot;https://api.census.gov/data/\&quot;\n      vintage\n      (map #(str \&quot;/\&quot; %) sourcePath)\n      (comment\n        \&quot;/\&quot;\n        (if (= 1 (count sourcePath))\n          (str (first sourcePath))\n          (s/join \&quot;/\&quot; sourcePath)))\n      \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n      (if (some? predicates)\n        (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n        \&quot;\&quot;)\n      (if (= 1 (count geoHierarchy))\n        (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n        (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n             \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n      \&quot;&amp;key=\&quot; statsKey)\n    #\&quot;-\&quot; \&quot;%20\&quot;))&quot;, :offset 835, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace\n    (str\n      \&quot;https://api.census.gov/data/\&quot;\n      vintage\n      (str (map #(str \&quot;/\&quot; %) sourcePath))\n      (comment\n        \&quot;/\&quot;\n        (if (= 1 (count sourcePath))\n          (str (first sourcePath))\n          (s/join \&quot;/\&quot; sourcePath)))\n      \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n      (if (some? predicates)\n        (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n        \&quot;\&quot;)\n      (if (= 1 (count geoHierarchy))\n        (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n        (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n             \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n      \&quot;&amp;key=\&quot; statsKey)\n    #\&quot;-\&quot; \&quot;%20\&quot;))&quot;, :offset 841, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace\n    (str\n      \&quot;https://api.census.gov/data/\&quot;\n      vintage\n      (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n      (comment\n        \&quot;/\&quot;\n        (if (= 1 (count sourcePath))\n          (str (first sourcePath))\n          (s/join \&quot;/\&quot; sourcePath)))\n      \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n      (if (some? predicates)\n        (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n        \&quot;\&quot;)\n      (if (= 1 (count geoHierarchy))\n        (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n        (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n             \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n      \&quot;&amp;key=\&quot; statsKey)\n    #\&quot;-\&quot; \&quot;%20\&quot;))&quot;, :offset 844, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2010\&quot;\n                    :sourcePath   [\&quot;cbp\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county-subdivision \&quot;*\&quot;}\n                    :variables    [\&quot;ESTAB\&quot;]\n                    :predicates   {:EMPSZES \&quot;212\&quot;}\n                    :statsKey     stats-key})&quot;, :offset 295, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :state-legislative-district-(upper-chamber) \&quot;000100\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 314, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :state-legislative-district-#upper-chamber# \&quot;000100\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 314, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|#\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;#\&quot; \&quot;)\&quot;})\n    #\&quot;)\&quot; \&quot;(\&quot;))&quot;, :offset 788, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (str (s/replace\n           (str\n             \&quot;https://api.census.gov/data/\&quot;\n             vintage\n             (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n             \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n             (if (some? predicates)\n               (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n               \&quot;\&quot;)\n             (if (= 1 (count geoHierarchy))\n               (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n               (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n                    \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n             \&quot;&amp;key=\&quot; statsKey)\n           #\&quot;-|#\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;#\&quot; \&quot;)\&quot;}))\n    #\&quot;)\&quot; \&quot;(\&quot;))&quot;, :offset 864, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace\n    (str\n      \&quot;https://api.census.gov/data/\&quot;\n      vintage\n      (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n      \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n      (if (some? predicates)\n        (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n        \&quot;\&quot;)\n      (if (= 1 (count geoHierarchy))\n        (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n        (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n             \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n      \&quot;&amp;key=\&quot; statsKey)\n    #\&quot;-|#\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;#\&quot; \&quot;)\&quot;}))&quot;, :offset 725, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first (s/replace\n                     (str\n                       \&quot;https://api.census.gov/data/\&quot;\n                       vintage\n                       (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n                       \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n                       (if (some? predicates)\n                         (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n                         \&quot;\&quot;)\n                       (if (= 1 (count geoHierarchy))\n                         (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n                         (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n                              \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n                       \&quot;&amp;key=\&quot; statsKey)\n                     #\&quot;-|#\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;#\&quot; \&quot;)\&quot;})\n                   #\&quot;)\&quot; \&quot;(\&quot;))&quot;, :offset 1009, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first (s/replace\n                     (str\n                       \&quot;https://api.census.gov/data/\&quot;\n                       vintage\n                       (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n                       \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n                       (if (some? predicates)\n                         (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n                         \&quot;\&quot;)\n                       (if (= 1 (count geoHierarchy))\n                         (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n                         (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n                              \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n                       \&quot;&amp;key=\&quot; statsKey)\n                     #\&quot;-|#\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;#\&quot; \&quot;)\&quot;})\n                   #\&quot;[)]\&quot; \&quot;[(]\&quot;))&quot;, :offset 1013, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first (s/replace\n                     (str\n                       \&quot;https://api.census.gov/data/\&quot;\n                       vintage\n                       (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n                       \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n                       (if (some? predicates)\n                         (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n                         \&quot;\&quot;)\n                       (if (= 1 (count geoHierarchy))\n                         (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n                         (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n                              \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n                       \&quot;&amp;key=\&quot; statsKey)\n                     #\&quot;-|#\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;#\&quot; \&quot;)\&quot;})\n                   #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 1011, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :state-legislative-district-#upper-chamber# \&quot;030\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 297, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state-legislative-district-#upper-chamber# \&quot;030\&quot; :state \&quot;01\&quot; :county \&quot;073\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 297, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|#\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;#\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 790, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative-district-#upper-chamber# \&quot;030\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(ns geojson.core\n  (:require [cljs.core.async\n             :as async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async]]\n            [cljs.core.async :refer-macros [go go-loop alt!]]\n            [ajax.core :as http :refer [GET POST]]\n            [cognitect.transit :as t]\n            [oops.core :as obj]\n            [clojure.string :as s]\n            [cljs.pprint :refer [pprint]]\n            [\&quot;dotenv\&quot; :as env]\n            [\&quot;fs\&quot; :as fs])\n  (:use [clojure.repl :only (source)]))&quot;, :offset 512, :ns &quot;merger.core&quot;} {:command &quot;(merger.core/stats-url-builder {:vintage      \&quot;2016\&quot;\n                                :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                                :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :tract \&quot;000100\&quot;}\n                                :variables    [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                                :statsKey     stats-key})&quot;, :offset 337, :ns &quot;geojson.core&quot;} {:command &quot;(ns geojson.core\n  (:require [cljs.core.async\n             :as async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async]]\n            [cljs.core.async :refer-macros [go go-loop alt!]]\n            [ajax.core :as http :refer [GET POST]]\n            [cognitect.transit :as t]\n            [oops.core :as obj]\n            [clojure.string :as s]\n            [cljs.pprint :refer [pprint]]\n            [\&quot;dotenv\&quot; :as env]\n            [\&quot;fs\&quot; :as fs]\n            [merger.core/stats-url-builder :as stats-url-builder])\n  (:use [clojure.repl :only (source)]))&quot;, :offset 578, :ns &quot;geojson.core&quot;} {:command &quot;(ns geojson.core\n  (:require [cljs.core.async\n             :as async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async]]\n            [cljs.core.async :refer-macros [go go-loop alt!]]\n            [ajax.core :as http :refer [GET POST]]\n            [cognitect.transit :as t]\n            [oops.core :as obj]\n            [clojure.string :as s]\n            [cljs.pprint :refer [pprint]]\n            [\&quot;dotenv\&quot; :as env]\n            [\&quot;fs\&quot; :as fs]\n            [merger.core/stats-url-builder :as stats-url])\n  (:use [clojure.repl :only (source)]))&quot;, :offset 570, :ns &quot;geojson.core&quot;} {:command &quot;(ns geojson.core\n  (:require [cljs.core.async\n             :as async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async]]\n            [cljs.core.async :refer-macros [go go-loop alt!]]\n            [ajax.core :as http :refer [GET POST]]\n            [cognitect.transit :as t]\n            [oops.core :as obj]\n            [clojure.string :as s]\n            [cljs.pprint :refer [pprint]]\n            [\&quot;dotenv\&quot; :as env]\n            [\&quot;fs\&quot; :as fs]\n            [merger.core :as merger])\n  (:use [clojure.repl :only (source)]))&quot;, :offset 549, :ns &quot;geojson.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|+\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;+\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 790, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|/+\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;+\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 791, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|\\+\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;+\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 791, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (subs (str (s/join separator pair)) 1))&quot;, :offset 77, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative-district-+upper-chamber+ \&quot;001\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|.\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;.\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 790, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|\\.\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;\\.\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 792, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|\\.\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;.\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 791, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative-district-.upper-chamber. \&quot;001\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|\\$\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;\\$\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 792, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|\\$\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;$\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 791, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|$\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;$\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 790, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative-district-%upper-chamber$ \&quot;001\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative-district-'upper-chamber' \&quot;001\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative/district-'upper-chamber' \&quot;001\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|'\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;'\&quot; \&quot;)\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 790, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative!!district-'upper-chamber' \&quot;001\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 284, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy variables predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; variables)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|'|!\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;'\&quot; \&quot;)\&quot; \&quot;!\&quot; \&quot;/\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 800, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :tract \&quot;000100\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 277, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative!district-'upper-chamber' \&quot;001\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :metropolitan-statistical-area!micropolitan-statistical-area \&quot;*\&quot;}\n                    :variables    [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 298, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2010\&quot;\n                    :sourcePath   [\&quot;cbp\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;*\&quot;}\n                    :variables    [\&quot;ESTAB\&quot;]\n                    :predicates   {:EMPSZES \&quot;212\&quot;}\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy values predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        vintage\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; values)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|'|!\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;'\&quot; \&quot;)\&quot; \&quot;!\&quot; \&quot;/\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 794, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :tract \&quot;000100\&quot;}\n                    :values       [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 277, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (let [[k v] pair]\n    (subs (str (s/join separator (str k (str v))) 1))))&quot;, :offset 111, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (let [[k v] pair]\n    (subs (str (s/join separator (str k (str v)))) 1)))&quot;, :offset 111, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (let [[k v] pair]\n    (subs (str (s/join separator (str (identity k) (str v)))) 1)))&quot;, :offset 122, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (let [[k v] pair]\n    (s/join separator ((name k) (str v)))))&quot;, :offset 99, :ns &quot;merger.core&quot;} {:command &quot;defn&quot;, :offset 4, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (let [[k v] pair]\n    (s/join separator (str (name k) (str v)))))&quot;, :offset 103, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (let [[k v] pair]\n    (s/join separator (identity ((name k) (str v))))))&quot;, :offset 110, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      2016\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state 01 :county 073 :tract 000100}\n                    :values       [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 269, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [pair separator]\n  (let [[k v] pair]\n    (s/join separator [(name k) (str v)])))&quot;, :offset 99, :ns &quot;merger.core&quot;} {:command &quot;(defn kv-pair-&gt;str [[k v] separator]\n  (s/join separator [(name k) (str v)]))&quot;, :offset 77, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy values predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str\n        \&quot;https://api.census.gov/data/\&quot;\n        (str vintage)\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; values)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|'|!\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;'\&quot; \&quot;)\&quot; \&quot;!\&quot; \&quot;/\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 800, :ns &quot;merger.core&quot;} {:command &quot;(defn stats-url-builder\n  \&quot;Composes a URL to call Census' statistics API\&quot;\n  [{:keys [vintage sourcePath geoHierarchy values predicates statsKey]}]\n  (s/replace-first\n    (s/replace\n      (str \n        \&quot;https://api.census.gov/data/\&quot; \n        (str vintage)\n        (s/join (map #(str \&quot;/\&quot; %) sourcePath))\n        \&quot;?get=\&quot; (s/join \&quot;,\&quot; values)\n        (if (some? predicates)\n          (str \&quot;&amp;\&quot; (str (s/join \&quot;&amp;\&quot; (map #(kv-pair-&gt;str % \&quot;=\&quot;) predicates))))\n          \&quot;\&quot;)\n        (if (= 1 (count geoHierarchy))\n          (str \&quot;&amp;for=\&quot; (kv-pair-&gt;str (first geoHierarchy) \&quot;:\&quot;))\n          (str \&quot;&amp;in=\&quot; (s/join \&quot;%20\&quot; (map #(kv-pair-&gt;str % \&quot;:\&quot;) (butlast geoHierarchy)))\n               \&quot;&amp;for=\&quot; (kv-pair-&gt;str (last geoHierarchy) \&quot;:\&quot;)))\n        \&quot;&amp;key=\&quot; statsKey)\n      #\&quot;-|'|!\&quot; {\&quot;-\&quot; \&quot;%20\&quot; \&quot;'\&quot; \&quot;)\&quot; \&quot;!\&quot; \&quot;/\&quot;})\n    #\&quot;[)]\&quot; \&quot;(\&quot;))&quot;, :offset 802, :ns &quot;merger.core&quot;} {:command &quot;(def stats-key (obj/oget (env/load) [\&quot;parsed\&quot; \&quot;Census_Key_Pro\&quot;]))&quot;, :offset 65, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      2016\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :tract \&quot;000100\&quot;}\n                    :values       [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 275, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :state-legislative-district-'upper-chamber' \&quot;001\&quot;}\n                    :values       [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2016\&quot;\n                    :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                    :geoHierarchy {:state \&quot;12\&quot; :metropolitan-statistical-area!micropolitan-statistical-area \&quot;*\&quot;}\n                    :values       [\&quot;B01001_001E\&quot;]\n                    :statsKey     stats-key})&quot;, :offset 298, :ns &quot;merger.core&quot;} {:command &quot;(stats-url-builder {:vintage      \&quot;2010\&quot;\n                    :sourcePath   [\&quot;cbp\&quot;]\n                    :geoHierarchy {:state \&quot;01\&quot; :county \&quot;*\&quot;}\n                    :values       [\&quot;ESTAB\&quot;]\n                    :predicates   {:EMPSZES \&quot;212\&quot;}\n                    :statsKey     stats-key})&quot;, :offset 283, :ns &quot;merger.core&quot;} {:command &quot;(shadow/watch :lib)&quot;, :offset 19, :ns &quot;shadow.user&quot;} {:command &quot;(shadow.cljs.devtools.api/node-repl)&quot;, :offset 36, :ns &quot;shadow.user&quot;} {:command &quot;(ns geojson.core\n  (:require [cljs.core.async\n             :as async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async]]\n            [cljs.core.async :refer-macros [go go-loop alt!]]\n            [ajax.core :as http :refer [GET POST]]\n            [cognitect.transit :as t]\n            [oops.core :as obj]\n            [clojure.string :as s]\n            [cljs.pprint :refer [pprint]]\n            [\&quot;dotenv\&quot; :as env]\n            [\&quot;fs\&quot; :as fs]\n            [merger.core :as merger]\n            [clojure.repl :refer [source]]))&quot;, :offset 553, :ns &quot;cljs.user&quot;} {:command &quot;(defn geoIDPartitioner\n  [string]\n  (-&gt;&gt;\n    (s/split string #\&quot;_|\\.\&quot;) ;; =&gt; [\&quot;st01\&quot; \&quot;d90\&quot; \&quot;shp\&quot; \&quot;zip\&quot;]\n    (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %)) ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;d\&quot; \&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map (fn [y] (remove #(= \&quot;d\&quot; %) y))) ;; =&gt; ((\&quot;st\&quot; \&quot;01\&quot;) (\&quot;90\&quot;) (\&quot;shp\&quot;) (\&quot;zip\&quot;))\n    (map #(vec %))))&quot;, :offset 293, :ns &quot;geojson.core&quot;} {:command &quot;(geoIDPartitioner \&quot;st01_d90_shp.zip\&quot;)&quot;, :offset 37, :ns &quot;geojson.core&quot;} {:command &quot;(map #(js/parseInt %) ([\&quot;gz\&quot;] [\&quot;2010\&quot;] [\&quot;us\&quot;] [\&quot;970\&quot;] [\&quot;00\&quot;] [\&quot;500\&quot; \&quot;k\&quot;] [\&quot;zip\&quot;]))&quot;, :offset 82, :ns &quot;geojson.core&quot;} {:command &quot;(clear)&quot;, :offset 6, :ns &quot;geojson.core&quot;} {:command &quot;(ns geojson.core\n  (:require [cljs.core.async\n             :as async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async]]\n            [cljs.core.async :refer-macros [go go-loop alt!]]\n            [ajax.core :as http :refer [GET POST]]\n            [cognitect.transit :as t]\n            [oops.core :as obj]\n            [clojure.string :as s]\n            [cljs.pprint :refer [pprint]]\n            [\&quot;dotenv\&quot; :as env]\n            [\&quot;fs\&quot; :as fs]\n            ;[merger.core :as merger]\n            [clojure.repl :refer [source]]))&quot;, :offset 554, :ns &quot;geojson.core&quot;} {:command &quot;(merger/stats-url-builder {:vintage      \&quot;2016\&quot;\n                           :sourcePath   [\&quot;acs\&quot; \&quot;acs5\&quot;]\n                           :geoHierarchy {:state \&quot;01\&quot; :county \&quot;073\&quot; :tract \&quot;000100\&quot;}\n                           :variables    [\&quot;B01001_001E\&quot; \&quot;B01001_001M\&quot;]\n                           :statsKey     stats-key})&quot;, :offset 312, :ns &quot;geojson.core&quot;}]}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="&lt;template&gt;" type="JUnit" default="true" selected="false">
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
    </configuration>
    <configuration name="&lt;template&gt;" type="TestNG" default="true" selected="false">
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Shadow REPL" type="ClojureREPL" factoryName="Remote">
      <module name="census-geojson" />
      <setting name="host" value="localhost" />
      <setting name="port" value="3333" />
      <setting name="replType" value="0" />
      <method v="2" />
    </configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="82ac4cda-63ef-47ec-b2ea-e93ad332046f" name="Default" comment="" />
      <created>1532985568925</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1532985568925</updated>
      <workItem from="1532985572100" duration="1880000" />
      <workItem from="1532987541062" duration="95000" />
      <workItem from="1532987719844" duration="2400000" />
      <workItem from="1532990391831" duration="692000" />
      <workItem from="1532991145601" duration="37320000" />
      <workItem from="1533223286311" duration="471000" />
      <workItem from="1533223860548" duration="61732000" />
      <workItem from="1533477791155" duration="93000" />
      <workItem from="1533477968393" duration="42000" />
      <workItem from="1533478159070" duration="86000" />
      <workItem from="1533478288842" duration="6152000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="110963000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="2729" y="221" width="1525" height="1567" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.15017065" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Designer" order="2" />
      <window_info id="Favorites" order="3" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" sideWeight="0.49960032" weight="0.32977304" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" weight="0.329904" />
      <window_info anchor="bottom" id="Database Changes" order="8" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="9" show_stripe_button="false" />
      <window_info anchor="bottom" id="Quokka" order="10" />
      <window_info anchor="bottom" id="Terminal" order="11" sideWeight="0.3277378" weight="0.32977304" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="GfmBrowser" order="3" weight="0.32980227" />
      <window_info anchor="right" id="Palette&#9;" order="4" />
      <window_info anchor="right" id="Leiningen" order="5" />
      <window_info anchor="right" id="Database" order="6" />
      <window_info anchor="right" id="Maven Projects" order="7" />
      <window_info active="true" anchor="right" x="4248" y="1259" width="1047" height="521" id="REPL" order="8" sideWeight="0.5003997" side_tool="true" type="WINDOWED" visible="true" weight="0.33734134" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName=".gitignore" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/../node_modules/shadow-cljs/package.json" />
    <entry file="file://$PROJECT_DIR$/../node_modules/shadow-cljs/cli/default-config.edn" />
    <entry file="file://$PROJECT_DIR$/../pom.xml" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/core.async/0.4.474/core.async-0.4.474.jar!/cljs/core/async.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="60">
          <caret line="3" column="10" selection-start-line="3" selection-start-column="10" selection-end-line="3" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../.gitignore" />
    <entry file="file://$PROJECT_DIR$/../geoRaw/test-#testing#/test-#.json" />
    <entry file="file://$PROJECT_DIR$/../geoRaw/testing-+folder/testing-+file.json" />
    <entry file="file://$PROJECT_DIR$/../geoRaw/testing!-'folder/counties-!test'.json" />
    <entry file="file://$PROJECT_DIR$/../.env" />
    <entry file="file://$PROJECT_DIR$/../shadow-idea-notes.md" />
    <entry file="file://$PROJECT_DIR$/../shadow-cljs.edn" />
    <entry file="file://$PROJECT_DIR$/../package.json" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojurescript/1.10.339/clojurescript-1.10.339.jar!/cljs/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1339">
          <caret line="5646" column="1" selection-start-line="5646" selection-start-column="1" selection-end-line="5646" selection-end-column="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/geojson/cartoFileStructure.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="FIRST">
          <first_editor relative-caret-position="500">
            <caret line="25" column="18" selection-start-line="25" selection-start-column="18" selection-end-line="25" selection-end-column="18" />
          </first_editor>
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/main/core.cljs">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/merger/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="2" lean-forward="true" selection-start-column="2" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/geojson/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="521">
          <caret line="109" column="11" lean-forward="true" selection-start-line="109" selection-start-column="11" selection-end-line="109" selection-end-column="11" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>census-geojson</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Maven: args4j:args4j:2.33</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>