<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="82ac4cda-63ef-47ec-b2ea-e93ad332046f" name="Default" comment="" />
    <ignored path="$PROJECT_DIR$/../target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="-985704565">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="4" />
          <entry key="project.open.time.11" value="2" />
          <entry key="project.open.time.16" value="1" />
          <entry key="project.open.time.9" value="1" />
          <entry key="project.opened" value="4" />
        </counts>
      </usages-collector>
    </session>
    <session id="364820673">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="16" />
          <entry key="project.open.time.10" value="1" />
          <entry key="project.open.time.11" value="1" />
          <entry key="project.open.time.12" value="3" />
          <entry key="project.open.time.13" value="4" />
          <entry key="project.open.time.14" value="1" />
          <entry key="project.open.time.15" value="4" />
          <entry key="project.open.time.17" value="2" />
          <entry key="project.open.time.18" value="2" />
          <entry key="project.open.time.19" value="2" />
          <entry key="project.open.time.42" value="1" />
          <entry key="project.open.time.9" value="1" />
          <entry key="project.opened" value="22" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="ClojureScript" value="15" />
          <entry key="EDN" value="3" />
          <entry key="JSON" value="103" />
          <entry key="Markdown" value="4" />
          <entry key="PLAIN_TEXT" value="6" />
          <entry key="XML" value="15" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.js.language.service.starts" />
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="clj" value="1656" />
          <entry key="cljs" value="51880" />
          <entry key="edn" value="49" />
          <entry key="gitignore" value="4" />
          <entry key="json" value="10" />
          <entry key="md" value="1022" />
          <entry key="txt" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Clojure" value="1656" />
          <entry key="ClojureScript" value="51880" />
          <entry key="EDN" value="49" />
          <entry key="JSON" value="10" />
          <entry key="Markdown" value="1022" />
          <entry key="PLAIN_TEXT" value="5" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="cljs" value="15" />
          <entry key="edn" value="3" />
          <entry key="env" value="1" />
          <entry key="geojson" value="1" />
          <entry key="gitignore" value="1" />
          <entry key="json" value="103" />
          <entry key="md" value="4" />
          <entry key="nrepl-port" value="1" />
          <entry key="txt" value="2" />
          <entry key="xml" value="15" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/../src/geojson/core.cljs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="708">
              <caret line="486" lean-forward="true" selection-start-line="486" selection-end-line="486" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/../shadow-cljs.edn">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="280">
              <caret line="14" selection-start-line="14" selection-end-line="14" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>obj</find>
      <find>gfm</find>
      <find>growth</find>
      <find>x</find>
      <find>_d</find>
      <find>count</find>
      <find>async</find>
      <find>dir</find>
      <find>no match</find>
      <find>threa</find>
      <find>termin</find>
      <find>terminal</find>
      <find>err</find>
    </findStrings>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/package.json" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/src/main/core.cljs" />
        <option value="$PROJECT_DIR$/shadow-cljs.edn" />
        <option value="$PROJECT_DIR$/../.env" />
        <option value="$PROJECT_DIR$/../shadow-idea-notes.md" />
        <option value="$PROJECT_DIR$/../src/geojson/cartoFileStructure.md" />
        <option value="$PROJECT_DIR$/../test/files.json" />
        <option value="$PROJECT_DIR$/../test/files.txt" />
        <option value="$PROJECT_DIR$/../.gitignore" />
        <option value="$PROJECT_DIR$/../test/test9.json" />
        <option value="$PROJECT_DIR$/../test/test10.json" />
        <option value="$PROJECT_DIR$/../test/test10-abv.json" />
        <option value="$PROJECT_DIR$/../test/test11.json" />
        <option value="$PROJECT_DIR$/../src/merger/core.cljs" />
        <option value="$PROJECT_DIR$/../test/js-json.json" />
        <option value="$PROJECT_DIR$/../shadow-cljs.edn" />
        <option value="$PROJECT_DIR$/../src/geojson/archive.cljs" />
        <option value="$PROJECT_DIR$/../test/test-abv2.json" />
        <option value="$PROJECT_DIR$/../src/geojson/filespaths.cljs" />
        <option value="$PROJECT_DIR$/../src/geojson/filepaths.cljs" />
        <option value="$PROJECT_DIR$/../src/geojson/filepaths_abv.cljs" />
        <option value="$PROJECT_DIR$/../pom.xml" />
        <option value="$PROJECT_DIR$/../src/geojson/core.cljs" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="importAutomatically" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="NodeModulesDirectoryManager">
    <handled-path value="$PROJECT_DIR$/../node_modules" />
  </component>
  <component name="NodePackageJsonFileManager">
    <packageJsonPaths>
      <path value="$PROJECT_DIR$/../package.json" />
    </packageJsonPaths>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="2729" />
    <option name="y" value="221" />
    <option name="width" value="1530" />
    <option name="height" value="1567" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State />
          <State>
            <id>Code maturityJava</id>
          </State>
          <State>
            <id>Data flowJava</id>
          </State>
          <State>
            <id>Data flowJavaScript</id>
          </State>
          <State>
            <id>Error handlingGroovy</id>
          </State>
          <State>
            <id>Error handlingJava</id>
          </State>
          <State>
            <id>Error handlingJavaScript</id>
          </State>
          <State>
            <id>Groovy</id>
          </State>
          <State>
            <id>Java</id>
          </State>
          <State>
            <id>JavaScript</id>
          </State>
          <State>
            <id>JavaScript validity issuesJavaScript</id>
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>DebuggerStatementJS</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="geojson" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="." type="b2602c69:ProjectViewProjectNode" />
              <item name="census-geojson" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SearchEverywhereHistoryKey" value="deb&#9;ACTION&#9;ActivateDebugToolWindow&#10;memory&#9;null&#9;null&#10;debug&#9;ACTION&#9;ActivateDebugToolWindow&#10;debu&#9;ACTION&#9;ActivateDebugToolWindow&#10;dump&#9;ACTION&#9;Console.TableResult.DumpGroup&#10;terminal&#9;ACTION&#9;ActivateTerminalToolWindow&#10;markdow&#9;ACTION&#9;Markdown.Toolbar.Right&#10;gfm&#9;ACTION&#9;ActivateGfmBrowserToolWindow" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/pom.xml" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="project.structure.last.edited" value="Project" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="debugger.dataViews.javascript" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\src\geojson" />
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\test" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\test\mkdirp!" />
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\testing-'folder" />
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\testing-+folder" />
      <recent name="C:\Users\Surface\Projects\clojure\cljs\census-geojson\geoRaw\test-#testing#" />
    </key>
  </component>
  <component name="ReplState" timestamp="1534969552841">{:repl-history {:ide [], :local [], :remote [{:command &quot;(js/console.log (clj-&gt;js {:key \&quot;value\&quot;}))&quot;, :offset 41, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         (big-json/stringify (clj-&gt;js {:body res}))\n                         #(close! =port=)))))&quot;, :offset 256, :ns &quot;geojson.core&quot;} {:command &quot;(let [=c= (chan 1)]\n  (put! =c= \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_us_860_00_500k.zip\&quot;)\n  (take! =c= (js/console.log)))&quot;, :offset 163, :ns &quot;geojson.core&quot;} {:command &quot;(let [=c= (chan 1)]\n  (put! =c= \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_us_860_00_500k.zip\&quot;)\n  (take! =c= #(js/console.log)))&quot;, :offset 164, :ns &quot;geojson.core&quot;} {:command &quot;(let [=c= (chan 1)]\n  (put! =c= (str \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_us_860_00_500k.zip\&quot;))\n  (take! =c= #(js/console.log))\n  (close! =c=))&quot;, :offset 185, :ns &quot;geojson.core&quot;} {:command &quot;(let [=c= (chan 1)]\n  (go (&gt;! =c= \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_us_860_00_500k.zip\&quot;)\n      (js/console.log (&lt;! =c=))\n      (close! =c=)))&quot;, :offset 186, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         (big-json/stringify\n                           (clj-&gt;js\n                             {:body res}\n                             (fn [err data] (if (= (type err) (type js/Error))\n                                              (throw err)\n                                              data))))\n                         #(close! =port=)))))&quot;, :offset 502, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         (big-json/stringify\n                           (clj-&gt;js {:body res})\n                           (fn [err data] (if (= (type err) (type js/Error))\n                                            (throw err)\n                                            data)))\n                         #(close! =port=)))))&quot;, :offset 467, :ns &quot;geojson.core&quot;} {:command &quot;(filename-&gt;&gt;geopath \&quot;cb_rd13_us_cd113_500k.zip\&quot;)&quot;, :offset 48, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         (big-json/stringify\n                           #js {:body res}\n                           (fn [err data] (if (= (type err) (type js/Error))\n                                            (throw (js/Error err))\n                                            data)))\n                         #(close! =port=)))))&quot;, :offset 472, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         (big-json/stringify\n                           #js {:body res}\n                           (fn [err data] \n                             (if (= (type err) (type js/Error))\n                               (throw (js/Error. err))\n                               data)))\n                         #(close! =port=)))))&quot;, :offset 477, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (#js {:key \&quot;value\&quot;}))&quot;, :offset 37, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log #js {\&quot;key\&quot; \&quot;value\&quot;})&quot;, :offset 36, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log #js {:key \&quot;value\&quot;})&quot;, :offset 35, :ns &quot;geojson.core&quot;} {:command &quot;(big-json/stringify #js {:key \&quot;value\&quot;})&quot;, :offset 39, :ns &quot;geojson.core&quot;} {:command &quot;(big-json/stringify #js {:key \&quot;value\&quot;} #(str %2))&quot;, :offset 49, :ns &quot;geojson.core&quot;} {:command &quot;(big-json/stringify #js {:body #js { :key \&quot;value\&quot;}} #(str %2))&quot;, :offset 62, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify #js {:body #js { :key \&quot;value\&quot;}} #(str %2)))&quot;, :offset 79, :ns &quot;geojson.core&quot;} {:command &quot;(let [=zip= (chan 1)\n      =json= (chan 1)]\n  (go (fsRead-&gt;put!\n        \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2013\\\\cb_2013_01_cousub_500k.zip\&quot;\n        =zip=)\n      (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n      (js/console.log (&lt;! =json=))))&quot;, :offset 276, :ns &quot;geojson.core&quot;} {:command &quot;(let [=zip= (chan 1)\n      =json= (chan 1)]\n  (go (fsRead-&gt;put!\n        \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2013\\\\cb_2013_01_cousub_500k.zip\&quot;\n        =zip=)\n      (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n      (pprint (&lt;! =json=))))&quot;, :offset 268, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify #js {:body\n                                           #js {:type \&quot;FeatureCollection\&quot;, :features #js [#js {:type \&quot;Feature\&quot;, :geometry #js {:bbox #js [-73.122453 41.168738 -72.9850951901769 41.276596], :type \&quot;Polygon\&quot;, :coordinates #js [#js [#js [-73.0745005203408 41.1971378507979] #js [-73.07502778204159 41.1968051775198] #js [-73.077609688953 41.195176135557105] #js [-73.082725 41.192254] #js [-73.086525 41.189107] #js [-73.086922 41.188663] #js [-73.090649 41.185] #js [-73.090818 41.18472] #js [-73.090963 41.184556] #js [-73.09121960535019 41.1841534418713] #js [-73.0919997952571 41.1834997336211] #js [-73.0921468255639 41.183376539353006] #js [-73.10432780864029 41.173170294615005] #js [-73.105068 41.172852999999996] #js [-73.10548271372069 41.1722026187037] #js [-73.105493 41.172194000000005] #js [-73.107987 41.168738] #js [-73.112152 41.171397] #js [-73.11985299999999 41.175697] #js [-73.121997 41.178927] #js [-73.122453 41.182897] #js [-73.121366 41.187444] #js [-73.116233 41.192586] #js [-73.115353 41.193497] #js [-73.11307699999999 41.19672] #js [-73.11057199999999 41.20027] #js [-73.109653 41.201997] #js [-73.10955299999999 41.205297] #js [-73.11065300000001 41.207797] #js [-73.110253 41.213996] #js [-73.108353 41.218295999999995] #js [-73.11045299999999 41.225296] #js [-73.10995299999999 41.229396] #js [-73.104952 41.236595] #js [-73.101573 41.240088] #js [-73.093403 41.244614999999996] #js [-73.09121499999999 41.246411] #js [-73.08735 41.251791999999995] #js [-73.08675199999999 41.25459600000001] #js [-73.08868199999999 41.271737] #js [-73.086852 41.276596] #js [-73.081251 41.274426999999996] #js [-73.062054 41.264595] #js [-73.055225 41.261297] #js [-73.05151099999999 41.2595] #js [-73.04414400000002 41.256814999999996] #js [-73.035161 41.254377999999996] #js [-73.03407299999999 41.253855] #js [-73.021226 41.25081] #js [-73.012715 41.249511] #js [-73.00665099999999 41.248208] #js [-72.998729 41.246362] #js [-72.995014 41.245711] #js [-72.992051 41.244909] #js [-72.99463399999999 41.241692] #js [-72.99284899999999 41.239929] #js [-72.992615 41.234206] #js [-72.99028 41.234736999999996] #js [-72.986904 41.235535] #js [-72.986721 41.235425] #js [-72.9850951901769 41.234358477595] #js [-72.98624699999999 41.23349700000001] #js [-72.9925634570778 41.227666922533096] #js [-72.99608883388801 41.2244130066669] #js [-72.997948 41.222697] #js [-72.9992818373224 41.2209602326531] #js [-72.99941512824921 41.2207866767589] #js [-73.0034736300419 41.21550216921631] #js [-73.00363879341809 41.215287112736895] #js [-73.006314 41.215979999999995] #js [-73.006287 41.215652] #js [-73.006371 41.21534] #js [-73.008068 41.210207] #js [-73.009406 41.209708] #js [-73.0134651172266 41.2054792984275] #js [-73.0139882241525 41.20506222668921] #js [-73.01494799999999 41.204297000000004] #js [-73.020149 41.204097] #js [-73.02016728214551 41.2042371631154] #js [-73.02019455263161 41.204446236842095] #js [-73.02021045448919 41.20456815108359] #js [-73.0202391867704 41.2047884319066] #js [-73.0202544782288 41.2049056664207] #js [-73.02044900000001 41.206396999999996] #js [-73.022549 41.20719700000001] #js [-73.0230265314951 41.207247980195895] #js [-73.023066 41.207325999999995] #js [-73.02367699999999 41.207404] #js [-73.02393099999999 41.207398] #js [-73.0247825412459 41.2074354478751] #js [-73.035219556563 41.2085496803206] #js [-73.0456024021101 41.2096581297224] #js [-73.048941 41.210346] #js [-73.052301 41.210105999999996] #js [-73.055495 41.208881] #js [-73.0549471812157 41.2084682489362] #js [-73.05935 41.206697] #js [-73.0745005203408 41.1971378507979]]]}, :properties #js {:GEO_ID \&quot;1700000US0947500\&quot;, :STATE \&quot;09\&quot;, :CONCIT \&quot;47500\&quot;, :NAME \&quot;Milford\&quot;, :LSAD \&quot;city\&quot;, :CENSUSAREA 22.175}}], :fileName \&quot;gz_2010_09_170_00_500k\&quot;}} #(str %2)))&quot;, :offset 3824, :ns &quot;geojson.core&quot;} {:command &quot;(pprint (big-json/stringify #js {:body\n                                   #js {:type \&quot;FeatureCollection\&quot;, :features #js [#js {:type \&quot;Feature\&quot;, :geometry #js {:bbox #js [-73.122453 41.168738 -72.9850951901769 41.276596], :type \&quot;Polygon\&quot;, :coordinates #js [#js [#js [-73.0745005203408 41.1971378507979] #js [-73.07502778204159 41.1968051775198] #js [-73.077609688953 41.195176135557105] #js [-73.082725 41.192254] #js [-73.086525 41.189107] #js [-73.086922 41.188663] #js [-73.090649 41.185] #js [-73.090818 41.18472] #js [-73.090963 41.184556] #js [-73.09121960535019 41.1841534418713] #js [-73.0919997952571 41.1834997336211] #js [-73.0921468255639 41.183376539353006] #js [-73.10432780864029 41.173170294615005] #js [-73.105068 41.172852999999996] #js [-73.10548271372069 41.1722026187037] #js [-73.105493 41.172194000000005] #js [-73.107987 41.168738] #js [-73.112152 41.171397] #js [-73.11985299999999 41.175697] #js [-73.121997 41.178927] #js [-73.122453 41.182897] #js [-73.121366 41.187444] #js [-73.116233 41.192586] #js [-73.115353 41.193497] #js [-73.11307699999999 41.19672] #js [-73.11057199999999 41.20027] #js [-73.109653 41.201997] #js [-73.10955299999999 41.205297] #js [-73.11065300000001 41.207797] #js [-73.110253 41.213996] #js [-73.108353 41.218295999999995] #js [-73.11045299999999 41.225296] #js [-73.10995299999999 41.229396] #js [-73.104952 41.236595] #js [-73.101573 41.240088] #js [-73.093403 41.244614999999996] #js [-73.09121499999999 41.246411] #js [-73.08735 41.251791999999995] #js [-73.08675199999999 41.25459600000001] #js [-73.08868199999999 41.271737] #js [-73.086852 41.276596] #js [-73.081251 41.274426999999996] #js [-73.062054 41.264595] #js [-73.055225 41.261297] #js [-73.05151099999999 41.2595] #js [-73.04414400000002 41.256814999999996] #js [-73.035161 41.254377999999996] #js [-73.03407299999999 41.253855] #js [-73.021226 41.25081] #js [-73.012715 41.249511] #js [-73.00665099999999 41.248208] #js [-72.998729 41.246362] #js [-72.995014 41.245711] #js [-72.992051 41.244909] #js [-72.99463399999999 41.241692] #js [-72.99284899999999 41.239929] #js [-72.992615 41.234206] #js [-72.99028 41.234736999999996] #js [-72.986904 41.235535] #js [-72.986721 41.235425] #js [-72.9850951901769 41.234358477595] #js [-72.98624699999999 41.23349700000001] #js [-72.9925634570778 41.227666922533096] #js [-72.99608883388801 41.2244130066669] #js [-72.997948 41.222697] #js [-72.9992818373224 41.2209602326531] #js [-72.99941512824921 41.2207866767589] #js [-73.0034736300419 41.21550216921631] #js [-73.00363879341809 41.215287112736895] #js [-73.006314 41.215979999999995] #js [-73.006287 41.215652] #js [-73.006371 41.21534] #js [-73.008068 41.210207] #js [-73.009406 41.209708] #js [-73.0134651172266 41.2054792984275] #js [-73.0139882241525 41.20506222668921] #js [-73.01494799999999 41.204297000000004] #js [-73.020149 41.204097] #js [-73.02016728214551 41.2042371631154] #js [-73.02019455263161 41.204446236842095] #js [-73.02021045448919 41.20456815108359] #js [-73.0202391867704 41.2047884319066] #js [-73.0202544782288 41.2049056664207] #js [-73.02044900000001 41.206396999999996] #js [-73.022549 41.20719700000001] #js [-73.0230265314951 41.207247980195895] #js [-73.023066 41.207325999999995] #js [-73.02367699999999 41.207404] #js [-73.02393099999999 41.207398] #js [-73.0247825412459 41.2074354478751] #js [-73.035219556563 41.2085496803206] #js [-73.0456024021101 41.2096581297224] #js [-73.048941 41.210346] #js [-73.052301 41.210105999999996] #js [-73.055495 41.208881] #js [-73.0549471812157 41.2084682489362] #js [-73.05935 41.206697] #js [-73.0745005203408 41.1971378507979]]]}, :properties #js {:GEO_ID \&quot;1700000US0947500\&quot;, :STATE \&quot;09\&quot;, :CONCIT \&quot;47500\&quot;, :NAME \&quot;Milford\&quot;, :LSAD \&quot;city\&quot;, :CENSUSAREA 22.175}}], :fileName \&quot;gz_2010_09_170_00_500k\&quot;}} #(str %2)))&quot;, :offset 3808, :ns &quot;geojson.core&quot;} {:command &quot;(pprint #js {:key \&quot;value\&quot;})&quot;, :offset 27, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify {body:\n                                      { type: 'FeatureCollection',\n                                       features:\n                                              [ { type: 'Feature', geometry: [Object], properties: [Object] } ],\n                                       fileName: 'gz_2010_09_170_00_500k'}} \n                                    #(str %2)))&quot;, :offset 396, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify '{body:\n                                       { type: 'FeatureCollection',\n                                        features:\n                                               [ { type: 'Feature', geometry: [Object], properties: [Object] } ],\n                                        fileName: 'gz_2010_09_170_00_500k'}} \n                                    #(str %2)))&quot;, :offset 401, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify #js {:body\n                                           #js {:type \&quot;FeatureCollection\&quot;, :features #js [#js {:type \&quot;Feature\&quot;, :geometry #js {:bbox #js [-73.122453 41.168738 -72.9850951901769 41.276596], :type \&quot;Polygon\&quot;, :coordinates #js [#js [#js [-73.0745005203408 41.1971378507979] #js [-73.07502778204159 41.1968051775198] #js [-73.077609688953 41.195176135557105] #js [-73.082725 41.192254] #js [-73.086525 41.189107] #js [-73.086922 41.188663] #js [-73.090649 41.185] #js [-73.090818 41.18472] #js [-73.090963 41.184556] #js [-73.09121960535019 41.1841534418713] #js [-73.0919997952571 41.1834997336211] #js [-73.0921468255639 41.183376539353006] #js [-73.10432780864029 41.173170294615005] #js [-73.105068 41.172852999999996] #js [-73.10548271372069 41.1722026187037] #js [-73.105493 41.172194000000005] #js [-73.107987 41.168738] #js [-73.112152 41.171397] #js [-73.11985299999999 41.175697] #js [-73.121997 41.178927] #js [-73.122453 41.182897] #js [-73.121366 41.187444] #js [-73.116233 41.192586] #js [-73.115353 41.193497] #js [-73.11307699999999 41.19672] #js [-73.11057199999999 41.20027] #js [-73.109653 41.201997] #js [-73.10955299999999 41.205297] #js [-73.11065300000001 41.207797] #js [-73.110253 41.213996] #js [-73.108353 41.218295999999995] #js [-73.11045299999999 41.225296] #js [-73.10995299999999 41.229396] #js [-73.104952 41.236595] #js [-73.101573 41.240088] #js [-73.093403 41.244614999999996] #js [-73.09121499999999 41.246411] #js [-73.08735 41.251791999999995] #js [-73.08675199999999 41.25459600000001] #js [-73.08868199999999 41.271737] #js [-73.086852 41.276596] #js [-73.081251 41.274426999999996] #js [-73.062054 41.264595] #js [-73.055225 41.261297] #js [-73.05151099999999 41.2595] #js [-73.04414400000002 41.256814999999996] #js [-73.035161 41.254377999999996] #js [-73.03407299999999 41.253855] #js [-73.021226 41.25081] #js [-73.012715 41.249511] #js [-73.00665099999999 41.248208] #js [-72.998729 41.246362] #js [-72.995014 41.245711] #js [-72.992051 41.244909] #js [-72.99463399999999 41.241692] #js [-72.99284899999999 41.239929] #js [-72.992615 41.234206] #js [-72.99028 41.234736999999996] #js [-72.986904 41.235535] #js [-72.986721 41.235425] #js [-72.9850951901769 41.234358477595] #js [-72.98624699999999 41.23349700000001] #js [-72.9925634570778 41.227666922533096] #js [-72.99608883388801 41.2244130066669] #js [-72.997948 41.222697] #js [-72.9992818373224 41.2209602326531] #js [-72.99941512824921 41.2207866767589] #js [-73.0034736300419 41.21550216921631] #js [-73.00363879341809 41.215287112736895] #js [-73.006314 41.215979999999995] #js [-73.006287 41.215652] #js [-73.006371 41.21534] #js [-73.008068 41.210207] #js [-73.009406 41.209708] #js [-73.0134651172266 41.2054792984275] #js [-73.0139882241525 41.20506222668921] #js [-73.01494799999999 41.204297000000004] #js [-73.020149 41.204097] #js [-73.02016728214551 41.2042371631154] #js [-73.02019455263161 41.204446236842095] #js [-73.02021045448919 41.20456815108359] #js [-73.0202391867704 41.2047884319066] #js [-73.0202544782288 41.2049056664207] #js [-73.02044900000001 41.206396999999996] #js [-73.022549 41.20719700000001] #js [-73.0230265314951 41.207247980195895] #js [-73.023066 41.207325999999995] #js [-73.02367699999999 41.207404] #js [-73.02393099999999 41.207398] #js [-73.0247825412459 41.2074354478751] #js [-73.035219556563 41.2085496803206] #js [-73.0456024021101 41.2096581297224] #js [-73.048941 41.210346] #js [-73.052301 41.210105999999996] #js [-73.055495 41.208881] #js [-73.0549471812157 41.2084682489362] #js [-73.05935 41.206697] #js [-73.0745005203408 41.1971378507979]]]}, :properties #js {:GEO_ID \&quot;1700000US0947500\&quot;, :STATE \&quot;09\&quot;, :CONCIT \&quot;47500\&quot;, :NAME \&quot;Milford\&quot;, :LSAD \&quot;city\&quot;, :CENSUSAREA 22.175}}], :fileName \&quot;gz_2010_09_170_00_500k\&quot;}} \n                                    #(str %2)))&quot;, :offset 3861, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify #js {:body\n                                           #js {:type \&quot;FeatureCollection\&quot;, :features #js [#js {:type \&quot;Feature\&quot;, :geometry #js {:bbox #js [-73.122453 41.168738 -72.9850951901769 41.276596], :type \&quot;Polygon\&quot;, :coordinates #js [#js [#js [-73.0745005203408 41.1971378507979] #js [-73.07502778204159 41.1968051775198] #js [-73.077609688953 41.195176135557105] #js [-73.082725 41.192254] #js [-73.086525 41.189107] #js [-73.086922 41.188663] #js [-73.090649 41.185] #js [-73.090818 41.18472] #js [-73.090963 41.184556] #js [-73.09121960535019 41.1841534418713] #js [-73.0919997952571 41.1834997336211] #js [-73.0921468255639 41.183376539353006] #js [-73.10432780864029 41.173170294615005] #js [-73.105068 41.172852999999996] #js [-73.10548271372069 41.1722026187037] #js [-73.105493 41.172194000000005] #js [-73.107987 41.168738] #js [-73.112152 41.171397] #js [-73.11985299999999 41.175697] #js [-73.121997 41.178927] #js [-73.122453 41.182897] #js [-73.121366 41.187444] #js [-73.116233 41.192586] #js [-73.115353 41.193497] #js [-73.11307699999999 41.19672] #js [-73.11057199999999 41.20027] #js [-73.109653 41.201997] #js [-73.10955299999999 41.205297] #js [-73.11065300000001 41.207797] #js [-73.110253 41.213996] #js [-73.108353 41.218295999999995] #js [-73.11045299999999 41.225296] #js [-73.10995299999999 41.229396] #js [-73.104952 41.236595] #js [-73.101573 41.240088] #js [-73.093403 41.244614999999996] #js [-73.09121499999999 41.246411] #js [-73.08735 41.251791999999995] #js [-73.08675199999999 41.25459600000001] #js [-73.08868199999999 41.271737] #js [-73.086852 41.276596] #js [-73.081251 41.274426999999996] #js [-73.062054 41.264595] #js [-73.055225 41.261297] #js [-73.05151099999999 41.2595] #js [-73.04414400000002 41.256814999999996] #js [-73.035161 41.254377999999996] #js [-73.03407299999999 41.253855] #js [-73.021226 41.25081] #js [-73.012715 41.249511] #js [-73.00665099999999 41.248208] #js [-72.998729 41.246362] #js [-72.995014 41.245711] #js [-72.992051 41.244909] #js [-72.99463399999999 41.241692] #js [-72.99284899999999 41.239929] #js [-72.992615 41.234206] #js [-72.99028 41.234736999999996] #js [-72.986904 41.235535] #js [-72.986721 41.235425] #js [-72.9850951901769 41.234358477595] #js [-72.98624699999999 41.23349700000001] #js [-72.9925634570778 41.227666922533096] #js [-72.99608883388801 41.2244130066669] #js [-72.997948 41.222697] #js [-72.9992818373224 41.2209602326531] #js [-72.99941512824921 41.2207866767589] #js [-73.0034736300419 41.21550216921631] #js [-73.00363879341809 41.215287112736895] #js [-73.006314 41.215979999999995] #js [-73.006287 41.215652] #js [-73.006371 41.21534] #js [-73.008068 41.210207] #js [-73.009406 41.209708] #js [-73.0134651172266 41.2054792984275] #js [-73.0139882241525 41.20506222668921] #js [-73.01494799999999 41.204297000000004] #js [-73.020149 41.204097] #js [-73.02016728214551 41.2042371631154] #js [-73.02019455263161 41.204446236842095] #js [-73.02021045448919 41.20456815108359] #js [-73.0202391867704 41.2047884319066] #js [-73.0202544782288 41.2049056664207] #js [-73.02044900000001 41.206396999999996] #js [-73.022549 41.20719700000001] #js [-73.0230265314951 41.207247980195895] #js [-73.023066 41.207325999999995] #js [-73.02367699999999 41.207404] #js [-73.02393099999999 41.207398] #js [-73.0247825412459 41.2074354478751] #js [-73.035219556563 41.2085496803206] #js [-73.0456024021101 41.2096581297224] #js [-73.048941 41.210346] #js [-73.052301 41.210105999999996] #js [-73.055495 41.208881] #js [-73.0549471812157 41.2084682489362] #js [-73.05935 41.206697] #js [-73.0745005203408 41.1971378507979]]]}, :properties #js {:GEO_ID \&quot;1700000US0947500\&quot;, :STATE \&quot;09\&quot;, :CONCIT \&quot;47500\&quot;, :NAME \&quot;Milford\&quot;, :LSAD \&quot;city\&quot;, :CENSUSAREA 22.175}}], :fileName \&quot;gz_2010_09_170_00_500k\&quot;}}\n                                    #(str %2)))&quot;, :offset 3860, :ns &quot;geojson.core&quot;} {:command &quot;(let [=zip= (chan 1)\n      =json= (chan 1)]\n  (go (fsRead-&gt;put!\n        \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_09_170_00_500k.zip\&quot;\n        =zip=)\n      (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n      (pprint (js-&gt;clj (&lt;! =json=)))))&quot;, :offset 278, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify #js {:body\n                                         {\&quot;type\&quot; \&quot;FeatureCollection\&quot;,\n                                          \&quot;features\&quot;\n                                                 [{\&quot;type\&quot; \&quot;Feature\&quot;,\n                                                   \&quot;geometry\&quot;\n                                                          {\&quot;bbox\&quot; [-73.122453 41.168738 -72.9850951901769 41.276596],\n                                                           \&quot;type\&quot; \&quot;Polygon\&quot;,\n                                                           \&quot;coordinates\&quot;\n                                                                  [[[-73.0745005203408 41.1971378507979]\n                                                                    [-73.07502778204159 41.1968051775198]\n                                                                    [-73.077609688953 41.195176135557105]\n                                                                    [-73.082725 41.192254]\n                                                                    [-73.086525 41.189107]\n                                                                    [-73.086922 41.188663]\n                                                                    [-73.090649 41.185]\n                                                                    [-73.090818 41.18472]\n                                                                    [-73.090963 41.184556]\n                                                                    [-73.09121960535019 41.1841534418713]\n                                                                    [-73.0919997952571 41.1834997336211]\n                                                                    [-73.0921468255639 41.183376539353006]\n                                                                    [-73.10432780864029 41.173170294615005]\n                                                                    [-73.105068 41.172852999999996]\n                                                                    [-73.10548271372069 41.1722026187037]\n                                                                    [-73.105493 41.172194000000005]\n                                                                    [-73.107987 41.168738]\n                                                                    [-73.112152 41.171397]\n                                                                    [-73.11985299999999 41.175697]\n                                                                    [-73.121997 41.178927]\n                                                                    [-73.122453 41.182897]\n                                                                    [-73.121366 41.187444]\n                                                                    [-73.116233 41.192586]\n                                                                    [-73.115353 41.193497]\n                                                                    [-73.11307699999999 41.19672]\n                                                                    [-73.11057199999999 41.20027]\n                                                                    [-73.109653 41.201997]\n                                                                    [-73.10955299999999 41.205297]\n                                                                    [-73.11065300000001 41.207797]\n                                                                    [-73.110253 41.213996]\n                                                                    [-73.108353 41.218295999999995]\n                                                                    [-73.11045299999999 41.225296]\n                                                                    [-73.10995299999999 41.229396]\n                                                                    [-73.104952 41.236595]\n                                                                    [-73.101573 41.240088]\n                                                                    [-73.093403 41.244614999999996]\n                                                                    [-73.09121499999999 41.246411]\n                                                                    [-73.08735 41.251791999999995]\n                                                                    [-73.08675199999999 41.25459600000001]\n                                                                    [-73.08868199999999 41.271737]\n                                                                    [-73.086852 41.276596]\n                                                                    [-73.081251 41.274426999999996]\n                                                                    [-73.062054 41.264595]\n                                                                    [-73.055225 41.261297]\n                                                                    [-73.05151099999999 41.2595]\n                                                                    [-73.04414400000002 41.256814999999996]\n                                                                    [-73.035161 41.254377999999996]\n                                                                    [-73.03407299999999 41.253855]\n                                                                    [-73.021226 41.25081]\n                                                                    [-73.012715 41.249511]\n                                                                    [-73.00665099999999 41.248208]\n                                                                    [-72.998729 41.246362]\n                                                                    [-72.995014 41.245711]\n                                                                    [-72.992051 41.244909]\n                                                                    [-72.99463399999999 41.241692]\n                                                                    [-72.99284899999999 41.239929]\n                                                                    [-72.992615 41.234206]\n                                                                    [-72.99028 41.234736999999996]\n                                                                    [-72.986904 41.235535]\n                                                                    [-72.986721 41.235425]\n                                                                    [-72.9850951901769 41.234358477595]\n                                                                    [-72.98624699999999 41.23349700000001]\n                                                                    [-72.9925634570778 41.227666922533096]\n                                                                    [-72.99608883388801 41.2244130066669]\n                                                                    [-72.997948 41.222697]\n                                                                    [-72.9992818373224 41.2209602326531]\n                                                                    [-72.99941512824921 41.2207866767589]\n                                                                    [-73.0034736300419 41.21550216921631]\n                                                                    [-73.00363879341809 41.215287112736895]\n                                                                    [-73.006314 41.215979999999995]\n                                                                    [-73.006287 41.215652]\n                                                                    [-73.006371 41.21534]\n                                                                    [-73.008068 41.210207]\n                                                                    [-73.009406 41.209708]\n                                                                    [-73.0134651172266 41.2054792984275]\n                                                                    [-73.0139882241525 41.20506222668921]\n                                                                    [-73.01494799999999 41.204297000000004]\n                                                                    [-73.020149 41.204097]\n                                                                    [-73.02016728214551 41.2042371631154]\n                                                                    [-73.02019455263161 41.204446236842095]\n                                                                    [-73.02021045448919 41.20456815108359]\n                                                                    [-73.0202391867704 41.2047884319066]\n                                                                    [-73.0202544782288 41.2049056664207]\n                                                                    [-73.02044900000001 41.206396999999996]\n                                                                    [-73.022549 41.20719700000001]\n                                                                    [-73.0230265314951 41.207247980195895]\n                                                                    [-73.023066 41.207325999999995]\n                                                                    [-73.02367699999999 41.207404]\n                                                                    [-73.02393099999999 41.207398]\n                                                                    [-73.0247825412459 41.2074354478751]\n                                                                    [-73.035219556563 41.2085496803206]\n                                                                    [-73.0456024021101 41.2096581297224]\n                                                                    [-73.048941 41.210346]\n                                                                    [-73.052301 41.210105999999996]\n                                                                    [-73.055495 41.208881]\n                                                                    [-73.0549471812157 41.2084682489362]\n                                                                    [-73.05935 41.206697]\n                                                                    [-73.0745005203408 41.1971378507979]]]},\n                                                   \&quot;properties\&quot;\n                                                          {\&quot;GEO_ID\&quot; \&quot;1700000US0947500\&quot;,\n                                                           \&quot;STATE\&quot; \&quot;09\&quot;,\n                                                           \&quot;CONCIT\&quot; \&quot;47500\&quot;,\n                                                           \&quot;NAME\&quot; \&quot;Milford\&quot;,\n                                                           \&quot;LSAD\&quot; \&quot;city\&quot;,\n                                                           \&quot;CENSUSAREA\&quot; 22.175}}],\n                                          \&quot;fileName\&quot; \&quot;gz_2010_09_170_00_500k\&quot;}}\n                                    #(str %2)))&quot;, :offset 10875, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify #js {:body\n                                         {\&quot;type\&quot; \&quot;FeatureCollection\&quot;,\n                                          \&quot;features\&quot;\n                                                 [{\&quot;type\&quot; \&quot;Feature\&quot;,\n                                                   \&quot;geometry\&quot;\n                                                          {\&quot;bbox\&quot; [-73.122453 41.168738 -72.9850951901769 41.276596],\n                                                           \&quot;type\&quot; \&quot;Polygon\&quot;,\n                                                           \&quot;coordinates\&quot;\n                                                                  [[[-73.0745005203408 41.1971378507979]\n                                                                    [-73.07502778204159 41.1968051775198]\n                                                                    [-73.077609688953 41.195176135557105]\n                                                                    [-73.082725 41.192254]\n                                                                    [-73.086525 41.189107]\n                                                                    [-73.086922 41.188663]\n                                                                    [-73.090649 41.185]\n                                                                    [-73.090818 41.18472]\n                                                                    [-73.090963 41.184556]\n                                                                    [-73.09121960535019 41.1841534418713]\n                                                                    [-73.0919997952571 41.1834997336211]\n                                                                    [-73.0921468255639 41.183376539353006]\n                                                                    [-73.10432780864029 41.173170294615005]\n                                                                    [-73.105068 41.172852999999996]\n                                                                    [-73.10548271372069 41.1722026187037]\n                                                                    [-73.105493 41.172194000000005]\n                                                                    [-73.107987 41.168738]\n                                                                    [-73.112152 41.171397]\n                                                                    [-73.11985299999999 41.175697]\n                                                                    [-73.121997 41.178927]\n                                                                    [-73.122453 41.182897]\n                                                                    [-73.121366 41.187444]\n                                                                    [-73.116233 41.192586]\n                                                                    [-73.115353 41.193497]\n                                                                    [-73.11307699999999 41.19672]\n                                                                    [-73.11057199999999 41.20027]\n                                                                    [-73.109653 41.201997]\n                                                                    [-73.10955299999999 41.205297]\n                                                                    [-73.11065300000001 41.207797]\n                                                                    [-73.110253 41.213996]\n                                                                    [-73.108353 41.218295999999995]\n                                                                    [-73.11045299999999 41.225296]\n                                                                    [-73.10995299999999 41.229396]\n                                                                    [-73.104952 41.236595]\n                                                                    [-73.101573 41.240088]\n                                                                    [-73.093403 41.244614999999996]\n                                                                    [-73.09121499999999 41.246411]\n                                                                    [-73.08735 41.251791999999995]\n                                                                    [-73.08675199999999 41.25459600000001]\n                                                                    [-73.08868199999999 41.271737]\n                                                                    [-73.086852 41.276596]\n                                                                    [-73.081251 41.274426999999996]\n                                                                    [-73.062054 41.264595]\n                                                                    [-73.055225 41.261297]\n                                                                    [-73.05151099999999 41.2595]\n                                                                    [-73.04414400000002 41.256814999999996]\n                                                                    [-73.035161 41.254377999999996]\n                                                                    [-73.03407299999999 41.253855]\n                                                                    [-73.021226 41.25081]\n                                                                    [-73.012715 41.249511]\n                                                                    [-73.00665099999999 41.248208]\n                                                                    [-72.998729 41.246362]\n                                                                    [-72.995014 41.245711]\n                                                                    [-72.992051 41.244909]\n                                                                    [-72.99463399999999 41.241692]\n                                                                    [-72.99284899999999 41.239929]\n                                                                    [-72.992615 41.234206]\n                                                                    [-72.99028 41.234736999999996]\n                                                                    [-72.986904 41.235535]\n                                                                    [-72.986721 41.235425]\n                                                                    [-72.9850951901769 41.234358477595]\n                                                                    [-72.98624699999999 41.23349700000001]\n                                                                    [-72.9925634570778 41.227666922533096]\n                                                                    [-72.99608883388801 41.2244130066669]\n                                                                    [-72.997948 41.222697]\n                                                                    [-72.9992818373224 41.2209602326531]\n                                                                    [-72.99941512824921 41.2207866767589]\n                                                                    [-73.0034736300419 41.21550216921631]\n                                                                    [-73.00363879341809 41.215287112736895]\n                                                                    [-73.006314 41.215979999999995]\n                                                                    [-73.006287 41.215652]\n                                                                    [-73.006371 41.21534]\n                                                                    [-73.008068 41.210207]\n                                                                    [-73.009406 41.209708]\n                                                                    [-73.0134651172266 41.2054792984275]\n                                                                    [-73.0139882241525 41.20506222668921]\n                                                                    [-73.01494799999999 41.204297000000004]\n                                                                    [-73.020149 41.204097]\n                                                                    [-73.02016728214551 41.2042371631154]\n                                                                    [-73.02019455263161 41.204446236842095]\n                                                                    [-73.02021045448919 41.20456815108359]\n                                                                    [-73.0202391867704 41.2047884319066]\n                                                                    [-73.0202544782288 41.2049056664207]\n                                                                    [-73.02044900000001 41.206396999999996]\n                                                                    [-73.022549 41.20719700000001]\n                                                                    [-73.0230265314951 41.207247980195895]\n                                                                    [-73.023066 41.207325999999995]\n                                                                    [-73.02367699999999 41.207404]\n                                                                    [-73.02393099999999 41.207398]\n                                                                    [-73.0247825412459 41.2074354478751]\n                                                                    [-73.035219556563 41.2085496803206]\n                                                                    [-73.0456024021101 41.2096581297224]\n                                                                    [-73.048941 41.210346]\n                                                                    [-73.052301 41.210105999999996]\n                                                                    [-73.055495 41.208881]\n                                                                    [-73.0549471812157 41.2084682489362]\n                                                                    [-73.05935 41.206697]\n                                                                    [-73.0745005203408 41.1971378507979]]]},\n                                                   \&quot;properties\&quot;\n                                                          {\&quot;GEO_ID\&quot; \&quot;1700000US0947500\&quot;,\n                                                           \&quot;STATE\&quot; \&quot;09\&quot;,\n                                                           \&quot;CONCIT\&quot; \&quot;47500\&quot;,\n                                                           \&quot;NAME\&quot; \&quot;Milford\&quot;,\n                                                           \&quot;LSAD\&quot; \&quot;city\&quot;,\n                                                           \&quot;CENSUSAREA\&quot; 22.175}}],\n                                          \&quot;fileName\&quot; \&quot;gz_2010_09_170_00_500k\&quot;}}\n                                    #(str %1 %2)))&quot;, :offset 10878, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify #js {:body #js {:key \&quot;value\&quot;}} #(str %2)))&quot;, :offset 78, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify #js {:body #js {:key \&quot;value\&quot;}} #(str %1 %2)))&quot;, :offset 81, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify `{ body: { key \&quot;value\&quot;}} #(str %1 %2)))&quot;, :offset 75, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (clj-&gt;js { :body { :key \&quot;value\&quot;}} #(str %1 %2))))&quot;, :offset 85, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (clj-&gt;js { :body { :key \&quot;value\&quot;}}) #(str %1 %2)))&quot;, :offset 85, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify \&quot;{\\n    \\\&quot;artist\\\&quot;: \\\&quot;The Beatles\\\&quot;,\\n    \\\&quot;album\\\&quot;: \\\&quot;Sgt Pepper Lonely Hearts Club Band\\\&quot;,\\n    \\\&quot;year\\\&quot;: 1967,\\n    \\\&quot;genre\\\&quot;: \\\&quot;Rock\\\&quot;,\\n    \\\&quot;tracks\\\&quot;: [\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;Sgt Pepper's Lonely Hearts Club Band\\\&quot;\\n        },\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;With A Little Help From My Friends\\\&quot;\\n        }\\n    ],\\n    \\\&quot;comments\\\&quot;: \\\&quot;What I can't even\\\&quot;\\n}\&quot;) #(str %1 %2))&quot;, :offset 433, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify \&quot;{ body: {\\n    \\\&quot;artist\\\&quot;: \\\&quot;The Beatles\\\&quot;,\\n    \\\&quot;album\\\&quot;: \\\&quot;Sgt Pepper Lonely Hearts Club Band\\\&quot;,\\n    \\\&quot;year\\\&quot;: 1967,\\n    \\\&quot;genre\\\&quot;: \\\&quot;Rock\\\&quot;,\\n    \\\&quot;tracks\\\&quot;: [\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;Sgt Pepper's Lonely Hearts Club Band\\\&quot;\\n        },\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;With A Little Help From My Friends\\\&quot;\\n        }\\n    ],\\n    \\\&quot;comments\\\&quot;: \\\&quot;What I can't even\\\&quot;\\n}\&quot;) #(str %1 %2))&quot;, :offset 441, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify \n                  \&quot;{\\n \\\&quot;body\\\&quot;: {\\n    \\\&quot;artist\\\&quot;: \\\&quot;The Beatles\\\&quot;,\\n    \\\&quot;album\\\&quot;: \\\&quot;Sgt Pepper Lonely Hearts Club Band\\\&quot;,\\n    \\\&quot;year\\\&quot;: 1967,\\n    \\\&quot;genre\\\&quot;: \\\&quot;Rock\\\&quot;,\\n    \\\&quot;tracks\\\&quot;: [\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;Sgt Pepper's Lonely Hearts Club Band\\\&quot;\\n        },\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;With A Little Help From My Friends\\\&quot;\\n        }\\n    ],\\n    \\\&quot;comments\\\&quot;: \\\&quot;What I can't even\\\&quot;\\n}\\n}\&quot;) \n                #(str %1 %2))&quot;, :offset 486, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify \n                  #js {:body \&quot;{\\n    \\\&quot;artist\\\&quot;: \\\&quot;The Beatles\\\&quot;,\\n    \\\&quot;album\\\&quot;: \\\&quot;Sgt Pepper Lonely Hearts Club Band\\\&quot;,\\n    \\\&quot;year\\\&quot;: 1967,\\n    \\\&quot;genre\\\&quot;: \\\&quot;Rock\\\&quot;,\\n    \\\&quot;tracks\\\&quot;: [\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;Sgt Pepper's Lonely Hearts Club Band\\\&quot;\\n        },\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;With A Little Help From My Friends\\\&quot;\\n        }\\n    ],\\n    \\\&quot;comments\\\&quot;: \\\&quot;What I can't even\\\&quot;\\n}\&quot;}) \n                #(str %1 %2))&quot;, :offset 481, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify \n                  #js {:body \&quot;{\\n    \\\&quot;artist\\\&quot;: \\\&quot;The Beatles\\\&quot;,\\n    \\\&quot;album\\\&quot;: \\\&quot;Sgt Pepper Lonely Hearts Club Band\\\&quot;,\\n    \\\&quot;year\\\&quot;: 1967,\\n    \\\&quot;genre\\\&quot;: \\\&quot;Rock\\\&quot;,\\n    \\\&quot;tracks\\\&quot;: [\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;Sgt Pepper's Lonely Hearts Club Band\\\&quot;\\n        },\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;With A Little Help From My Friends\\\&quot;\\n        }\\n    ],\\n    \\\&quot;comments\\\&quot;: \\\&quot;What I can't even\\\&quot;\\n}\&quot;} \n                  (fn [err data]\n                    data)))&quot;, :offset 511, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify\n                  #js {:body \&quot;{\\\&quot;artist\\\&quot;: \\\&quot;The Beatles\\\&quot;}\&quot;}\n                  (fn [err data]\n                    data)))&quot;, :offset 158, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify\n                  #js {:body #js {:key \&quot;value\&quot;}}\n                  (fn [err data]\n                    data)))&quot;, :offset 145, :ns &quot;geojson.core&quot;} {:command &quot;(let [=zip= (chan 1)\n      =json= (chan 1)]\n  (go (fsRead-&gt;put!\n        \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_09_170_00_500k.zip\&quot;\n        =zip=)\n      (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n      (pprint (&lt;! =json=))))&quot;, :offset 268, :ns &quot;geojson.core&quot;} {:command &quot;(go=&gt;zip=&gt;json=&gt; (put! (chan 1) \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_us_860_00_500k.zip\&quot;))&quot;, :offset 132, :ns &quot;geojson.core&quot;} {:command &quot;(let [=c= (chan 1)]\n  (go (&gt;! =c= \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_us_860_00_500k.zip\&quot;)\n      (go=&gt;zip=&gt;json=&gt; =c=)\n      (close! =c=)))&quot;, :offset 182, :ns &quot;geojson.core&quot;} {:command &quot;(ns geojson.core\n  (:require [cljs.core.async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async onto-chan]\n             :refer-macros [go go-loop alt!]]\n            [clojure.string :as s]\n            [clojure.set :refer [map-invert]]\n            [cljs.pprint :refer [pprint]]\n            [defun.core :refer-macros [defun]]\n            [cljs-promises.async\n             :as cpa\n             :refer [pair-port]\n             :refer-macros [&lt;?]]\n            [\&quot;fs\&quot; :as fs]\n            [\&quot;path\&quot; :as path]\n            [\&quot;shpjs\&quot; :as shpjs]\n            [\&quot;mkdirp\&quot; :as mkdirp]\n            [\&quot;big-json\&quot; :as big-json]\n            [clojure.repl :refer [source doc]]\n            [geojson.filepaths :as geos]\n            [geojson.filepaths_abv :as geos_abv]))&quot;, :offset 774, :ns &quot;cljs.user&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (let [ob #js {}]\n    (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n    (take! (cpa/value-port (shpjs val))\n           (fn [res] (put! =port=\n                           (big-json/stringify\n                             (jsOb/set ob \&quot;body\&quot; res)\n                             (fn [err data]\n                               (if (= (type err) (type js/Error))\n                                 (throw (js/Error. err))\n                                 data)))\n                           #(close! =port=))))))&quot;, :offset 525, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res]\n           (put! =port=\n                 (big-json/stringify\n                   (js-obj \&quot;body\&quot; res)\n                   (fn [err data]\n                     (if (= (type err) (type js/Error))\n                       (throw (js/Error. err))\n                       data)))\n                 #(close! =port=)))))&quot;, :offset 435, :ns &quot;geojson.core&quot;} {:command &quot;(big-json/stringify (js-obj \&quot;body\&quot; {\&quot;key\&quot; \&quot;value\&quot;}))&quot;, :offset 52, :ns &quot;geojson.core&quot;} {:command &quot;(big-json/stringify (js-obj \&quot;body\&quot; {\&quot;key\&quot; \&quot;value\&quot;})\n                    (fn [err data]\n                      (if (= (type err) (type js/Error))\n                        (str \&quot;Error writing json\&quot;)\n                        data)))&quot;, :offset 226, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; {\&quot;key\&quot; \&quot;value\&quot;})\n                                    (fn [err data]\n                                      (if (= (type err) (type js/Error))\n                                        (str \&quot;Error writing json\&quot;)\n                                        data))))&quot;, :offset 307, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; {\&quot;key\&quot; {\&quot;key1\&quot; \&quot;value\&quot;}})\n                                    (fn [err data]\n                                      (if (= (type err) (type js/Error))\n                                        (str \&quot;Error writing json\&quot;)\n                                        data))))&quot;, :offset 316, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (js-obj \&quot;body\&quot; {\&quot;key1\&quot; {\&quot;key2\&quot; \&quot;value2\&quot;}}))&quot;, :offset 59, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (js-obj \&quot;body\&quot; (js-obj {\&quot;key1\&quot; {\&quot;key2\&quot; \&quot;value2\&quot;}})))&quot;, :offset 68, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; (js-obj {\&quot;key\&quot; (js-obj{\&quot;key1\&quot; \&quot;value\&quot;})}))\n                                    (fn [err data]\n                                      (if (= (type err) (type js/Error))\n                                        (str \&quot;Error writing json\&quot;)\n                                        data))))&quot;, :offset 333, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; (js-obj {\&quot;key\&quot; {\&quot;key1\&quot; \&quot;value\&quot;}}))\n                                    (fn [err data]\n                                      (if (= (type err) (type js/Error))\n                                        (str \&quot;Error writing json\&quot;)\n                                        data))))&quot;, :offset 325, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (js-obj \&quot;body\&quot; (js-obj {\&quot;key1\&quot; \&quot;value1\&quot;})))&quot;, :offset 59, :ns &quot;geojson.core&quot;} {:command &quot;(pprint (js-obj \&quot;body\&quot; (js-obj {\&quot;key1\&quot; \&quot;value1\&quot;})))&quot;, :offset 51, :ns &quot;geojson.core&quot;} {:command &quot;(pprint (js-obj \&quot;body\&quot; (js-obj \&quot;key1\&quot; \&quot;value1\&quot;)))&quot;, :offset 49, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; \&quot;{ \&quot;artist\&quot; : \&quot;The Beetles\&quot; }\&quot;)\n                                    (fn [err data]\n                                      (if (= (type err) (type js/Error))\n                                        (str \&quot;Error writing json\&quot;)\n                                        data))))&quot;, :offset 322, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; \&quot;{\\n    \\\&quot;artist\\\&quot;: \\\&quot;The Beatles\\\&quot;,\\n    \\\&quot;album\\\&quot;: \\\&quot;Sgt Pepper Lonely Hearts Club Band\\\&quot;,\\n    \\\&quot;year\\\&quot;: 1967,\\n    \\\&quot;genre\\\&quot;: \\\&quot;Rock\\\&quot;,\\n    \\\&quot;tracks\\\&quot;: [\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;Sgt Pepper's Lonely Hearts Club Band\\\&quot;\\n        },\\n        {\\n            \\\&quot;name\\\&quot;: \\\&quot;With A Little Help From My Friends\\\&quot;\\n        }\\n    ],\\n    \\\&quot;comments\\\&quot;: \\\&quot;What I can't even\\\&quot;\\n}\&quot;)\n                                    (fn [err data]\n                                      (if (= (type err) (type js/Error))\n                                        (str \&quot;Error writing json\&quot;)\n                                        data))))&quot;, :offset 674, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res]\n           (put! =port=\n                 (big-json/stringify\n                   (js-obj \&quot;body\&quot; res)\n                   (fn [err data]\n                     (if (= (type err) (type js/Error))\n                       (str \&quot;Error writing json\&quot;)\n                       data)))\n                 #(close! =port=)))))&quot;, :offset 438, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; (js-obj \&quot;key\&quot; \&quot;value\&quot;))\n                                    (fn [err data]\n                                      (if (= (type err) (type js/Error))\n                                        (str \&quot;Error writing json\&quot;)\n                                        data))))&quot;, :offset 314, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (js-obj \&quot;body\&quot; (js-obj \&quot;key1\&quot; \&quot;value1\&quot;)))&quot;, :offset 57, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         (js-obj res)\n                         #(close! =port=)))))&quot;, :offset 226, :ns &quot;geojson.core&quot;} {:command &quot;(big-json/stringify (js-obj \&quot;body\&quot; (js-obj \&quot;key\&quot; \&quot;value\&quot;))\n                    #(js/console.log %))&quot;, :offset 99, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res]\n           (put! =port=\n                 (big-json/stringify\n                   (js-obj \&quot;body\&quot; res)\n                   #(identity %2))\n                 #(close! =port=)))))&quot;, :offset 302, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; (js-obj \&quot;key\&quot; \&quot;value\&quot;))\n                                    #(identity %2)))&quot;, :offset 127, :ns &quot;geojson.core&quot;} {:command &quot;(js/console.log (big-json/stringify (js-obj \&quot;body\&quot; (js-obj \&quot;key\&quot; \&quot;value\&quot;))\n                                    #(str %2)))&quot;, :offset 122, :ns &quot;geojson.core&quot;} {:command &quot;(big-json/stringify (js-obj \&quot;body\&quot; (js-obj \&quot;key\&quot; \&quot;value\&quot;))\n                    #(js/console.log %2))&quot;, :offset 100, :ns &quot;geojson.core&quot;} {:command &quot;(defn go=&gt;zip=&gt;json=&gt;\n  [=path=]\n  (go-loop []\n    (let [path (&lt;! =path=)]\n      (if-let [{:keys [directory filepath]} (-&gt;&gt; (s/split path #\&quot;\\\\\&quot;) (last) (filename-&gt;&gt;geopath))]\n        (let [=zip=  (chan 1)\n              =json= (chan 1 (x-geo-directory directory filepath))]\n          (do\n            (fsRead-&gt;put! path =zip=)\n            (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n            (mkdir-&gt;fsW! (&lt;! =json=))\n            (recur)))\n        (pprint (str \&quot;No :geoKeyMap match found for: \&quot; path))))\n    (recur)))&quot;, :offset 522, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res]\n             (big-json/stringify\n               (js-obj \&quot;body\&quot; res)\n               (fn [err json]\n                 (if (= (type err) (type js/Error))\n                   (throw (js/Error. err))\n                   (put! =port= json #(close! =port=))))))))&quot;, :offset 383, :ns &quot;geojson.core&quot;} {:command &quot;(shadow.cljs.devtools.api/node-repl)&quot;, :offset 36, :ns &quot;shadow.user&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         (js/JSON.stringify res)\n                         #(close! =port=)))))&quot;, :offset 237, :ns &quot;geojson.core&quot;} {:command &quot;(defn mkdir-&gt;fsW!\n  \&quot;\n  Takes some geojson and a directory and - internally - calls Node `fs/writeFile`\n  to store the geojson into the directory.\n  \&quot;\n  [val]\n  (let [{:keys [directory filepath json]} val]\n    (pprint (str \&quot;Ensuring Directory: \&quot; directory))\n    (mkdirp\n      directory\n      (fn [err]\n        (if (= (type err) (type js/Error))\n          (js/console.log (str \&quot;Error creating directory: \&quot; filepath))\n          (fs/writeFile\n            filepath\n            json\n            (fn [err]\n              (if (= (type err) (type js/Error))\n                (js/console.log (str \&quot;Error writing file: \&quot; filepath))\n                (js/console.log (str \&quot;Wrote GeoJSON to: \&quot; filepath))))))))))&quot;, :offset 696, :ns &quot;geojson.core&quot;} {:command &quot;(defn transducified [f]\n  (fn [rf]\n    (fn\n      ([] (rf))\n      ([acc] (rf acc))\n      ([acc val] (rf acc (f val))))))&quot;, :offset 119, :ns &quot;geojson.core&quot;} {:command &quot;(defn geo-directory\n  [directory filepath json]\n  {:directory directory\n   :filepath filepath\n   :json json})&quot;, :offset 109, :ns &quot;geojson.core&quot;} {:command &quot;(defn x-geo-directory\n  [directory filepath]\n  (transducified (partial geo-directory directory filepath)))&quot;, :offset 106, :ns &quot;geojson.core&quot;} {:command &quot;(def geotest\n  [\&quot;test directory 1\&quot;\n   \&quot;test json 1\&quot;,\n   \&quot;test directory 2\&quot;\n   \&quot;test json 2\&quot;,\n   \&quot;test directory 3\&quot;\n   \&quot;test json 3\&quot;])&quot;, :offset 133, :ns &quot;geojson.core&quot;} {:command &quot;(defn go=&gt;zip=&gt;json=&gt;\n  [=path=]\n  (go-loop []\n    (let [path (&lt;! =path=)]\n      (if-let [{:keys [directory filepath]} (-&gt;&gt; (s/split path #\&quot;\\\\\&quot;) (last) (filename-&gt;&gt;geopath))]\n        (let [=zip=  (chan 1)\n              =json= (chan 1 (x-geo-directory directory filepath))]\n          (do\n            (fsRead-&gt;put! path =zip=)\n            (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n            (mkdir-&gt;fsW! (&lt;! =json=))))\n        (pprint (str \&quot;No :geoKeyMap match found for: \&quot; path))))\n    (recur)))&quot;, :offset 502, :ns &quot;geojson.core&quot;} {:command &quot;(defn megaShpGeoJSON\n  \&quot;Takes a path to a list (vector) of paths to some zipfiles and - for each item in the list - based on the filename (if present) translates the zipfile to geojson, creates a directory structure (if needed) to store them and stores them in there.\&quot;\n  [paths-vec]\n  (let [=path= (chan 1)]\n    (go=&gt;zip=&gt;json=&gt; =path=)\n    (go (doseq [path paths-vec]\n          (&gt;! =path= path)))))&quot;, :offset 399, :ns &quot;geojson.core&quot;} {:command &quot;(megaShpGeoJSON geos_abv/paths)&quot;, :offset 31, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         (js-obj \&quot;body\&quot; res)\n                         #(close! =port=)))))&quot;, :offset 233, :ns &quot;geojson.core&quot;} {:command &quot;(let [=zip= (chan 1)\n      =json= (chan 1)]\n  (go (fsRead-&gt;put!\n        \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_09_170_00_500k.zip\&quot;\n        =zip=)\n      (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n      (js/console.log (&lt;! =json=))))&quot;, :offset 276, :ns &quot;geojson.core&quot;} {:command &quot;(let [=zip= (chan 1)\n      =json= (chan 1)]\n  (go (fsRead-&gt;put!\n        \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_us_860_00_500k.zip\&quot;\n        =zip=)\n      (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n      (pprint (&lt;! =json=))))&quot;, :offset 268, :ns &quot;geojson.core&quot;} {:command &quot;(shadow.cljs.devtools.api/node-repl {:node-args [\&quot;--max-old-space-size=8192\&quot;]})&quot;, :offset 79, :ns &quot;shadow.user&quot;} {:command &quot;(ns geojson.core\n  (:require [goog.object :as jsOb]\n            [cljs.core.async\n             :refer [chan put! take! &gt;! &lt;! pipe timeout close! alts! pipeline-async onto-chan]\n             :refer-macros [go go-loop alt!]]\n            [clojure.string :as s]\n            [clojure.set :refer [map-invert]]\n            [cljs.pprint :refer [pprint]]\n            [defun.core :refer-macros [defun]]\n            [cljs-promises.async\n             :as cpa\n             :refer [pair-port]\n             :refer-macros [&lt;?]]\n            [\&quot;fs\&quot; :as fs]\n            [\&quot;path\&quot; :as path]\n            [\&quot;shpjs\&quot; :as shpjs]\n            [\&quot;mkdirp\&quot; :as mkdirp]\n            [\&quot;big-json\&quot; :as big-json]\n            [clojure.repl :refer [source doc]]\n            [geojson.filepaths :as geos]\n            [geojson.filepaths_abv :as geos_abv]))&quot;, :offset 809, :ns &quot;cljs.user&quot;} {:command &quot;(def geoKeyMap\n  {:nation                                                      {:2010 \&quot;outline\&quot;\n                                                                 :2013 \&quot;nation\&quot;\n                                                                 :2014 \&quot;nation\&quot;\n                                                                 :2015 \&quot;nation\&quot;\n                                                                 :2016 \&quot;nation\&quot;\n                                                                 :2017 \&quot;nation\&quot;}\n   :region                                                      {:2013 \&quot;region\&quot;\n                                                                 :2014 \&quot;region\&quot;\n                                                                 :2015 \&quot;region\&quot;\n                                                                 :2016 \&quot;region\&quot;\n                                                                 :2017 \&quot;region\&quot;\n                                                                 :2010 \&quot;020\&quot;\n                                                                 :2000 \&quot;rg\&quot;}\n   :division                                                    {:2013 \&quot;division\&quot;\n                                                                 :2014 \&quot;division\&quot;\n                                                                 :2015 \&quot;division\&quot;\n                                                                 :2016 \&quot;division\&quot;\n                                                                 :2017 \&quot;division\&quot;\n                                                                 :2010 \&quot;030\&quot;\n                                                                 :2000 \&quot;dv\&quot;}\n   :state                                                       {:2013 \&quot;state\&quot;\n                                                                 :2014 \&quot;state\&quot;\n                                                                 :2015 \&quot;state\&quot;\n                                                                 :2016 \&quot;state\&quot;\n                                                                 :2017 \&quot;state\&quot;\n                                                                 :2010 \&quot;040\&quot;\n                                                                 :1990 \&quot;st\&quot;\n                                                                 :2000 \&quot;st\&quot;}\n   :consolidated-cities                                         {:2000 \&quot;cc\&quot;\n                                                                 :2010 \&quot;170\&quot;\n                                                                 :2013 \&quot;concity\&quot;\n                                                                 :2014 \&quot;concity\&quot;\n                                                                 :2015 \&quot;concity\&quot;\n                                                                 :2016 \&quot;concity\&quot;\n                                                                 :2017 \&quot;concity\&quot;}\n   :county                                                      {:2013 \&quot;county\&quot;\n                                                                 :2014 \&quot;county\&quot;\n                                                                 :2015 \&quot;county\&quot;\n                                                                 :2016 \&quot;county\&quot;\n                                                                 :2017 \&quot;county\&quot;\n                                                                 :2010 \&quot;050\&quot;\n                                                                 :1990 \&quot;co\&quot;\n                                                                 :2000 \&quot;co\&quot;}\n   :county-subdivision                                          {:2013 \&quot;cousub\&quot;\n                                                                 :2014 \&quot;cousub\&quot;\n                                                                 :2015 \&quot;cousub\&quot;\n                                                                 :2016 \&quot;cousub\&quot;\n                                                                 :2017 \&quot;cousub\&quot;\n                                                                 :2010 \&quot;060\&quot;\n                                                                 :1990 \&quot;cs\&quot;\n                                                                 :2000 \&quot;cs\&quot;}\n   :tract                                                       {:2013 \&quot;tract\&quot;\n                                                                 :2014 \&quot;tract\&quot;\n                                                                 :2015 \&quot;tract\&quot;\n                                                                 :2016 \&quot;tract\&quot;\n                                                                 :2017 \&quot;tract\&quot;\n                                                                 :2010 \&quot;140\&quot;\n                                                                 :1990 \&quot;tr\&quot;\n                                                                 :2000 \&quot;tr\&quot;}\n   :place                                                       {:2013 \&quot;place\&quot;\n                                                                 :2014 \&quot;place\&quot;\n                                                                 :2015 \&quot;place\&quot;\n                                                                 :2016 \&quot;place\&quot;\n                                                                 :2017 \&quot;place\&quot;\n                                                                 :2010 \&quot;160\&quot;\n                                                                 :1990 \&quot;pl\&quot;\n                                                                 :2000 \&quot;pl\&quot;}\n   :alaska-native-regional-corporation                          {:2013 \&quot;anrc\&quot;\n                                                                 :2014 \&quot;anrc\&quot;\n                                                                 :2015 \&quot;anrc\&quot;\n                                                                 :2016 \&quot;anrc\&quot;\n                                                                 :2017 \&quot;anrc\&quot;\n                                                                 :2010 \&quot;230\&quot;\n                                                                 :1990 \&quot;an\&quot;\n                                                                 :2000 \&quot;an\&quot;}\n   :american-indian-area!alaska-native-area!hawaiian-home-land  {:2013 \&quot;aiannh\&quot;\n                                                                 :2014 \&quot;aiannh\&quot;\n                                                                 :2015 \&quot;aiannh\&quot;\n                                                                 :2016 \&quot;aiannh\&quot;\n                                                                 :2017 \&quot;aiannh\&quot;\n                                                                 :2010 \&quot;250\&quot;\n                                                                 :1990 \&quot;ir\&quot;\n                                                                 :2000 \&quot;na\&quot;}\n   :metropolitan-statistical-area!micropolitan-statistical-area {:2013 \&quot;cbsa\&quot;\n                                                                 :2014 \&quot;cbsa\&quot;\n                                                                 :2015 \&quot;cbsa\&quot;\n                                                                 :2016 \&quot;cbsa\&quot;\n                                                                 :2017 \&quot;cbsa\&quot;\n                                                                 :2010 \&quot;310\&quot;\n                                                                 :1990 \&quot;ma\&quot;}\n   :combined-statistical-area                                   {:2013 \&quot;csa\&quot;\n                                                                 :2014 \&quot;csa\&quot;\n                                                                 :2015 \&quot;csa\&quot;\n                                                                 :2016 \&quot;csa\&quot;\n                                                                 :2017 \&quot;csa\&quot;\n                                                                 :2010 \&quot;330\&quot;}\n   :new-england-city-and-town-area                              {:2013 \&quot;necta\&quot;\n                                                                 :2014 \&quot;necta\&quot;\n                                                                 :2015 \&quot;necta\&quot;\n                                                                 :2016 \&quot;necta\&quot;\n                                                                 :2017 \&quot;necta\&quot;\n                                                                 :2010 \&quot;350\&quot;}\n   :combined-new-england-city-and-town-area                     {:2016 \&quot;cnecta\&quot;\n                                                                 :2017 \&quot;cnecta\&quot;}\n   :urban-area                                                  {:2013 \&quot;ua\&quot;\n                                                                 :2014 \&quot;ua\&quot;\n                                                                 :2015 \&quot;ua\&quot;\n                                                                 :2016 \&quot;ua\&quot;\n                                                                 :2017 \&quot;ua\&quot;\n                                                                 :2012 \&quot;uac\&quot;\n                                                                 :1990 \&quot;ua\&quot;\n                                                                 :2000 \&quot;ua\&quot;}\n   :congressional-district                                      {:103  \&quot;cd\&quot;\n                                                                 :104  \&quot;cd\&quot;\n                                                                 :105  \&quot;cd\&quot;\n                                                                 :106  \&quot;cd\&quot;\n                                                                 :107  \&quot;cd\&quot;\n                                                                 :108  \&quot;cd\&quot;\n                                                                 :109  \&quot;cd\&quot;\n                                                                 :110  \&quot;cd\&quot;\n                                                                 :2013 \&quot;cd\&quot;\n                                                                 :2014 \&quot;cd\&quot;\n                                                                 :2015 \&quot;cd\&quot;\n                                                                 :2016 \&quot;cd\&quot;\n                                                                 :2017 \&quot;cd\&quot;\n                                                                 :2012 \&quot;cd\&quot;\n                                                                 :2010 \&quot;500\&quot;}\n   :school-district-'elementary'                                {:2016 \&quot;elsd\&quot;\n                                                                 :2017 \&quot;elsd\&quot;\n                                                                 :2000 \&quot;se\&quot;}\n   :school-district-'secondary'                                 {:2016 \&quot;scsd\&quot;\n                                                                 :2017 \&quot;scsd\&quot;\n                                                                 :2000 \&quot;ss\&quot;}\n   :school-district-'unified'                                   {:2016 \&quot;unsd\&quot;\n                                                                 :2017 \&quot;unsd\&quot;\n                                                                 :2010 \&quot;970\&quot;\n                                                                 :2000 \&quot;sn\&quot;}\n   :block-group                                                 {:2013 \&quot;bg\&quot;\n                                                                 :2014 \&quot;bg\&quot;\n                                                                 :2015 \&quot;bg\&quot;\n                                                                 :2016 \&quot;bg\&quot;\n                                                                 :2017 \&quot;bg\&quot;\n                                                                 :2010 \&quot;150\&quot;\n                                                                 :1990 \&quot;bg\&quot;\n                                                                 :2000 \&quot;bg\&quot;}\n   :public-use-microdata-area                                   {:2013 \&quot;puma\&quot;\n                                                                 :2014 \&quot;puma\&quot;\n                                                                 :2015 \&quot;puma\&quot;\n                                                                 :2016 \&quot;puma\&quot;\n                                                                 :2017 \&quot;puma\&quot;}\n   :zip-code-tabulation-area                                    {:2013 \&quot;zcta\&quot;\n                                                                 :2014 \&quot;zcta\&quot;\n                                                                 :2015 \&quot;zcta\&quot;\n                                                                 :2016 \&quot;zcta\&quot;\n                                                                 :2017 \&quot;zcta\&quot;\n                                                                 :2010 \&quot;860\&quot;\n                                                                 :2000 \&quot;zt\&quot;} ;; zipcodes are *not* the same\n   :state-legislative-district-'upper-chamber'                  {:2013 \&quot;sldu\&quot;\n                                                                 :2014 \&quot;sldu\&quot;\n                                                                 :2015 \&quot;sldu\&quot;\n                                                                 :2016 \&quot;sldu\&quot;\n                                                                 :2017 \&quot;sldu\&quot;\n                                                                 :2012 \&quot;sldu\&quot;\n                                                                 :2010 \&quot;610\&quot;\n                                                                 :2000 \&quot;su\&quot;}\n   :state-legislative-district-'lower-chamber'                  {:2013 \&quot;sldl\&quot;\n                                                                 :2014 \&quot;sldl\&quot;\n                                                                 :2015 \&quot;sldl\&quot;\n                                                                 :2016 \&quot;sldl\&quot;\n                                                                 :2017 \&quot;sldl\&quot;\n                                                                 :2012 \&quot;sldl\&quot;\n                                                                 :2010 \&quot;620\&quot;\n                                                                 :2000 \&quot;sl\&quot;}})&quot;, :offset 13549, :ns &quot;geojson.core&quot;} {:command &quot;(defn ii-&gt;vin\n  \&quot;\n  Map over a collection to transform 2-digit vintages to their 4-digit codes.\n  \&quot;\n  [vtr]\n  (map #(cond (= \&quot;90\&quot; %) \&quot;1990\&quot;\n              (= \&quot;00\&quot; %) \&quot;2000\&quot;\n              :else %)\n       vtr))&quot;, :offset 207, :ns &quot;geojson.core&quot;} {:command &quot;(defn map-target-idx\n  \&quot;\n  Maps a provided function to a specific index of a provided collection of\n  collections.\n  \&quot;\n  [fnc idx coll]\n  (map-indexed #(if (zero? (mod (inc %1) idx)) (fnc %2) %2) coll))&quot;, :offset 202, :ns &quot;geojson.core&quot;} {:command &quot;(defn filename-&gt;&gt;geoIDvecs\n  \&quot;\n  Breaks apart a Census Tiger filename and cleans it into meaningful parts.\n  Takes a single string and returns a vector of vectors.\n  \&quot;\n  [string]\n  (-&gt;&gt; (s/split string #\&quot;_|\\.\&quot;)\n       (map #(re-seq #\&quot;[a-z]+|[0-9]+\&quot; %))\n       (map (fn [y] (remove #(= \&quot;d\&quot; %) y)))\n       (map-target-idx ii-&gt;vin 2)\n       (map #(vec %))))&quot;, :offset 354, :ns &quot;geojson.core&quot;} {:command &quot;(defn ?keyMatch\n  \&quot;\n  Searches a single item from an inverted geoKeyMap and checks for a match\n  against the provided vintage/level abbreviation code pair. Returns the `name`\n  of the key (string) if matched and `nil` if mismatched.\n  \&quot;\n  [vintage level [k v]]\n  (if-let [[_ v2] (find k (keyword vintage))]\n    (if (= v2 level) (name v) nil)\n    nil))&quot;, :offset 351, :ns &quot;geojson.core&quot;} {:command &quot;(defn keySearch\n  \&quot;\n  Searches the entire geoKeyMap (inverted) for matches against a provided\n  vintage and level abbreviation returning a string for the verbose geoKeyMap\n  key match if successful and an empty string ('') if not.\n  \&quot;\n  [vintage level]\n  (apply str (remove nil? (map #(?keyMatch vintage level %) (seq (map-invert geoKeyMap))))))&quot;, :offset 345, :ns &quot;geojson.core&quot;} {:command &quot;(defn parts-&gt;geopath\n  \&quot;\n  Consumes parts of the Tiger filename to compose a structured path for storage\n  as a `.json` file.\n  \&quot;\n  [[lev res m vin &amp; etc]]\n  (let [geopath (s/join \&quot;/\&quot; (list* vin etc))]\n    {:filepath (str \&quot;./GeoJSON/\&quot; (s/join \&quot;/\&quot; [(apply str res m) geopath (apply str (keySearch vin lev) \&quot;.json\&quot;)]))\n     :directory (str \&quot;./GeoJSON/\&quot; (s/join \&quot;/\&quot; [(apply str res m) geopath]))}))&quot;, :offset 395, :ns &quot;geojson.core&quot;} {:command &quot;(defn geoScopeFiler\n  \&quot;\n  Creates a filepath determined by whether or not the input contains a state\n  (e.g., '01') or national code ('99'/'us'). If the value returned from the\n  `keySearch` function = `` (empty string) returns `nil`.\n  \&quot;\n  [[lev res mes vin sco]]\n  (if-not (= \&quot;\&quot; (keySearch vin lev))\n    (if (or (= sco \&quot;99\&quot;) (= sco \&quot;us\&quot;))\n      (parts-&gt;geopath [lev res mes vin])\n      (parts-&gt;geopath [lev res mes vin sco]))\n    nil))&quot;, :offset 437, :ns &quot;geojson.core&quot;} {:command &quot;(defun file=&lt;&lt;Director\n  \&quot;\n  Pattern matches against incoming file structures to create a harmonized\n  directory ontology in which to store the file.\n  \&quot;\n  ([[lev sco] [vin] _     _]                                    (geoScopeFiler [lev       \&quot;500\&quot; \&quot;k\&quot; vin    sco]))\n  ([_         [vin] [sco] [\&quot;outline\&quot;]  [\&quot;500\&quot; \&quot;k\&quot;] _]           (geoScopeFiler [\&quot;outline\&quot; \&quot;500\&quot; \&quot;k\&quot; vin    sco]))\n  ([_         [vin] [sco] [\&quot;uac\&quot; \&quot;10\&quot;] [\&quot;500\&quot; \&quot;k\&quot;] _]           (geoScopeFiler [\&quot;uac\&quot;     \&quot;500\&quot; \&quot;k\&quot; vin    sco]))\n  ([_         [vin] [sco] [lev]        _         [\&quot;500\&quot; \&quot;k\&quot;] _] (geoScopeFiler [lev       \&quot;500\&quot; \&quot;k\&quot; vin    sco]))\n  ([_         [vin] [sco] [lev]        [\&quot;500\&quot; \&quot;k\&quot;] _]           (geoScopeFiler [lev       \&quot;500\&quot; \&quot;k\&quot; vin    sco]))\n  ([_         [vin] [sco] [lev]        [\&quot;500\&quot; \&quot;k\&quot;] _]           (geoScopeFiler [lev       \&quot;500\&quot; \&quot;k\&quot; vin    sco]))\n  ([_         _     [sco] [lev \&quot;113\&quot;]  [\&quot;500\&quot; \&quot;k\&quot;] _]           (geoScopeFiler [lev       \&quot;500\&quot; \&quot;k\&quot; \&quot;2012\&quot; sco]))\n  ([&amp; anything-else] nil))&quot;, :offset 978, :ns &quot;geojson.core&quot;} {:command &quot;(defn filename-&gt;&gt;geopath\n  \&quot;\n  Takes a filename string as input and sends it through the filepath creation\n  pipeline. Returns `nil` if no matches are found for the level abbreviation\n  contained in the filename.\n  \&quot;\n  [string]\n  (if-let [answer (-&gt;&gt; (filename-&gt;&gt;geoIDvecs string) (apply file=&lt;&lt;Director))] answer nil))&quot;, :offset 319, :ns &quot;geojson.core&quot;} {:command &quot;(defn fsRead-&gt;put!\n  [val, =port=]\n  (pprint (str \&quot;fsRead'ing: \&quot; val))\n  (fs/readFile\n    val\n    (fn [err, file]\n      (if (= (type err) (type js/Error))\n        (throw err)\n        (put! =port= file #(close! =port=))))))&quot;, :offset 222, :ns &quot;geojson.core&quot;} {:command &quot;(defn zip-&gt;json-&gt;put!\n  [val =port=]\n  (pprint (str \&quot;zip-&gt;json'ing...\&quot;))\n  (take! (cpa/value-port (shpjs val))\n         (fn [res] (put! =port=\n                         res\n                         #(close! =port=)))))&quot;, :offset 217, :ns &quot;geojson.core&quot;} {:command &quot;(let [=zip= (chan 1)\n      =json= (chan 1)]\n  (go (fsRead-&gt;put!\n        \&quot;C:\\\\Users\\\\Surface\\\\Downloads\\\\www2.census.gov\\\\geo\\\\tiger\\\\GENZ2010\\\\gz_2010_us_860_00_500k.zip\&quot;\n        =zip=)\n      (pipeline-async 1 =json= zip-&gt;json-&gt;put! =zip=)\n      (js/console.log (&lt;! =json=))))&quot;, :offset 276, :ns &quot;geojson.core&quot;}]}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration name="&lt;template&gt;" type="JUnit" default="true" selected="false">
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
    </configuration>
    <configuration name="&lt;template&gt;" type="TestNG" default="true" selected="false">
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Shadow REPL" type="ClojureREPL" factoryName="Remote">
      <module name="census-geojson" />
      <setting name="host" value="localhost" />
      <setting name="port" value="3333" />
      <setting name="replType" value="0" />
      <method v="2" />
    </configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="82ac4cda-63ef-47ec-b2ea-e93ad332046f" name="Default" comment="" />
      <created>1532985568925</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1532985568925</updated>
      <workItem from="1532985572100" duration="1880000" />
      <workItem from="1532987541062" duration="95000" />
      <workItem from="1532987719844" duration="2400000" />
      <workItem from="1532990391831" duration="692000" />
      <workItem from="1532991145601" duration="37320000" />
      <workItem from="1533223286311" duration="471000" />
      <workItem from="1533223860548" duration="61732000" />
      <workItem from="1533477791155" duration="93000" />
      <workItem from="1533477968393" duration="42000" />
      <workItem from="1533478159070" duration="86000" />
      <workItem from="1533478288842" duration="6152000" />
      <workItem from="1533558682794" duration="282000" />
      <workItem from="1533559006262" duration="69089000" />
      <workItem from="1533816892156" duration="21721000" />
      <workItem from="1533908701380" duration="2169000" />
      <workItem from="1533910910674" duration="122000" />
      <workItem from="1533911219766" duration="17000" />
      <workItem from="1533911277575" duration="19565000" />
      <workItem from="1534163482601" duration="126000" />
      <workItem from="1534163635923" duration="38936000" />
      <workItem from="1534332417256" duration="39201000" />
      <workItem from="1534428174899" duration="15390000" />
      <workItem from="1534504003847" duration="18668000" />
      <workItem from="1534608584257" duration="3013000" />
      <workItem from="1534621179722" duration="1803000" />
      <workItem from="1534623540328" duration="2382000" />
      <workItem from="1534633965701" duration="5319000" />
      <workItem from="1534684023215" duration="5857000" />
      <workItem from="1534696025250" duration="9354000" />
      <workItem from="1534710145196" duration="2260000" />
      <workItem from="1534765748877" duration="1694000" />
      <workItem from="1534769686443" duration="18592000" />
      <workItem from="1534795840062" duration="2712000" />
      <workItem from="1534934621853" duration="18838000" />
      <workItem from="1534961792490" duration="6460000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="414533000" />
  </component>
  <component name="TodoView" selected-index="1">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="2729" y="221" width="1530" height="1567" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.12653062" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Designer" order="2" />
      <window_info id="Favorites" order="3" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" sideWeight="0.49960032" weight="0.32914925" />
      <window_info anchor="bottom" id="Run" order="2" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" weight="0.3298466" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" weight="0.32874617" />
      <window_info anchor="bottom" id="Database Changes" order="8" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="9" show_stripe_button="false" />
      <window_info anchor="bottom" id="Quokka" order="10" />
      <window_info anchor="bottom" id="Terminal" order="11" sideWeight="0.3277378" weight="0.32874617" />
      <window_info anchor="bottom" id="Dependency Viewer" order="12" weight="0.32962447" />
      <window_info active="true" anchor="bottom" x="4025" y="1032" width="1270" height="748" id="REPL" order="13" sideWeight="0.5003997" side_tool="true" visible="true" weight="0.33472803" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="GfmBrowser" order="3" weight="0.32980227" />
      <window_info anchor="right" id="Palette&#9;" order="4" />
      <window_info anchor="right" id="Leiningen" order="5" />
      <window_info anchor="right" id="Database" order="6" />
      <window_info anchor="right" id="Maven Projects" order="7" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName=".gitignore" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/../test/files.txt" />
    <entry file="file://$PROJECT_DIR$/../test/filelist.json" />
    <entry file="file://$PROJECT_DIR$/../test/test2.json" />
    <entry file="file://$PROJECT_DIR$/../test/test3.json" />
    <entry file="file://$PROJECT_DIR$/../test/test4.json" />
    <entry file="file://$PROJECT_DIR$/../.env" />
    <entry file="file://$PROJECT_DIR$/../.gitignore" />
    <entry file="file://$PROJECT_DIR$/../test/test7.json" />
    <entry file="file://$PROJECT_DIR$/../test/test6.json" />
    <entry file="file://$PROJECT_DIR$/../test/test5.json" />
    <entry file="file://$PROJECT_DIR$/../test/test9.json" />
    <entry file="file://$PROJECT_DIR$/../test/test8.json" />
    <entry file="file://$PROJECT_DIR$/../test/counties.json" />
    <entry file="file://$USER_HOME$/AppData/Local/Temp/Temp1_mygeodata.zip/cb_2015_us_aiannh_500k.geojson" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/state-legislative-district-'lower-chamber'.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/tract.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/county-sub.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/county-su.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/county-subdivision2.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/county-subdivision5.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/county-subdivision6.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/county-subdivision3.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/county-subdivision4.json" />
    <entry file="file://$PROJECT_DIR$/../test/js-json.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="777">
          <caret line="99650" column="23" selection-start-line="99650" selection-start-column="23" selection-end-line="99650" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/county-subdivision.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/place.json" />
    <entry file="file://$PROJECT_DIR$/../test/mkdirp!/test11.json" />
    <entry file="file://$PROJECT_DIR$/../projectFilesBackup/.idea/workspace.xml">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/main/core.cljs">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/../test/mkdirp!/test.json" />
    <entry file="file://$PROJECT_DIR$/../test/mkdirp!/test2.json" />
    <entry file="file://$PROJECT_DIR$/../test/mkdirp!/test3.json" />
    <entry file="file://$PROJECT_DIR$/../src/geojson/cartoFileStructure.md">
      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
        <state split_layout="FIRST">
          <first_editor />
          <second_editor />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../test/test-abv2.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="540">
          <caret line="27" column="34" lean-forward="true" selection-start-line="27" selection-start-column="34" selection-end-line="27" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../test/test10.json">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret selection-end-line="49" selection-end-column="99" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../GeoJSON/20m/2010/nation.json" />
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojurescript/1.10.339/clojurescript-1.10.339.jar!/cljs/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="764">
          <caret line="5160" column="25" selection-start-line="5160" selection-start-column="25" selection-end-line="5160" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../.nrepl-port">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/../package-lock.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/05/state-legislative-district-'lower-chamber'.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2040" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2010/zip-code-tabulation-area.json" />
    <entry file="file://$PROJECT_DIR$/../GeoJSON/500k/2013/01/block-group.json">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/../package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="380">
          <caret line="19" column="17" selection-start-line="19" selection-start-column="17" selection-end-line="19" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../pom.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1540">
          <caret line="77" column="10" selection-start-line="77" selection-start-column="10" selection-end-line="77" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../test/test10-abv.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="80">
          <caret line="4" column="2" selection-start-line="4" selection-start-column="2" selection-end-line="4" selection-end-column="100" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/geojson/filepaths_abv.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="760">
          <caret line="38" column="3" selection-start-line="38" selection-start-column="3" selection-end-line="38" selection-end-column="101" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/geojson/filepaths.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="20">
          <caret line="1" selection-start-line="1" selection-end-line="1" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/merger/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1370">
          <caret line="238" column="4" selection-start-line="238" selection-start-column="4" selection-end-line="238" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://C:/Program Files/nodejs/node_modules/npm/package.json">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2054" />
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../shadow-cljs.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="280">
          <caret line="14" selection-start-line="14" selection-end-line="14" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/../src/geojson/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="708">
          <caret line="486" lean-forward="true" selection-start-line="486" selection-end-line="486" />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>census-geojson</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Maven: args4j:args4j:2.33</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>