{"version":3,"sources":["linked/core.cljc"],"sourcesContent":["(ns linked.core\n  (:refer-clojure :exclude [map set])\n  (:require [linked.map :as m]\n            [linked.set :as s]))\n\n(defn map\n  ([] m/empty-linked-map)\n  ([& keyvals] (apply assoc m/empty-linked-map keyvals)))\n\n(defn set\n  ([] s/empty-linked-set)\n  ([& keys] (apply conj s/empty-linked-set keys)))\n"],"mappings":";;;;AAKA,AAAA,AAAA,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAD;AAAA;AAAA,AAAAC;;;;AAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA;;AAAA,AAAA,AAAA,AAAAC,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAF;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAA,AAAA,AAAAG,AAAA,AAAAD,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAH,AAAAK;;;;;AAAA,AAAA,AAAA,AAAML;AAAN,AACMS;;;AADN,AAAA,AAAA,AAAA,AAAMT,AAEA;AAFN,AAEe,AAACU,AAAMC,AAAMF,AAAmBG;;;AAF/C;AAAA,AAAA,AAAA,AAAA,AAAMZ;AAAN,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAM,AAAA,AAAAC,AAAAC;;;AAAA,AAAA,AAAA,AAAMR;;AAAN,AAIA,AAAA,AAAA,AAAA,AAAMc;AAAN,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAD;AAAA;AAAA,AAAAC;;;;AAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAAA,AAAA,AAAA;;AAAA,AAAA,AAAA,AAAAb,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAF;;AAAA,AAAA,AAAAA,AAAA;;;;AAAA;;;;AAAA,AAAA,AAAA,AAAAG,AAAA,AAAAD,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAW,AAAAT;;;;;AAAA,AAAA,AAAA,AAAMS;AAAN,AACME;;;AADN,AAAA,AAAA,AAAA,AAAMF,AAEA;AAFN,AAEY,AAACJ,AAAMO,AAAKD,AAAmBE;;;AAF3C;AAAA,AAAA,AAAA,AAAA,AAAMJ;AAAN,AAAA,AAAA,AAAA;AAAA,AAAA,AAAAR,AAAA,AAAAC,AAAAQ;;;AAAA,AAAA,AAAA,AAAMD;;AAAN","names":["G__24728","linked.core/map","i__4642__auto__","len__4641__auto__","args-arr__4662__auto__","cljs.core/IndexedSeq","argseq__4663__auto__","self__4629__auto__","cljs.core/seq","seq24727","linked.map/empty-linked-map","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.core/assoc","keyvals","G__24731","linked.core/set","seq24730","linked.set/empty-linked-set","cljs.core/conj","keys"]}