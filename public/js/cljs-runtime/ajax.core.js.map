{"version":3,"sources":["ajax/core.cljc"],"sourcesContent":["(ns ajax.core\n  \"This is the documented API for cljs-ajax. The only functions not\n   exposed here that are documented are the deprecated features.\"\n  (:require [clojure.string :as str]\n            [ajax.url :as url]\n            [ajax.json :as json]\n            [ajax.transit :as transit]\n            [ajax.ring :as ring]\n            [ajax.formats :as f]\n            [ajax.util :as u]\n            [ajax.interceptors :as i]\n            [ajax.simple :as simple]\n            [ajax.easy :as easy]\n            [ajax.protocols :as pr]\n            #?@ (:clj  [[ajax.macros :as m]\n                        [poppea :as p]\n                        [ajax.apache]]\n                 :cljs [[ajax.xhrio]\n                        [ajax.xml-http-request]]))\n  #? (:cljs\n      (:require-macros [ajax.macros :as m])))\n\n;;; NB As a matter of policy, this file shouldn't reference any\n;;; google closure files. That functionality should be off in\n;;; specific namespaces and exposed here in a platform indepdent\n;;; way\n\n;;; Ideally this would be true of all functionality, but it's\n;;; an ongoing project.\n\n(def to-interceptor i/to-interceptor)\n\n(defn abort [this]\n  \"Call this on the result of `ajax-request` to cancel the request.\"\n  (pr/-abort this))\n\n;;; Standard Formats\n\n(def json-request-format json/json-request-format)\n(def json-response-format json/json-response-format)\n\n(def transit-request-format transit/transit-request-format)\n(def transit-response-format transit/transit-response-format)\n\n(def ring-response-format ring/ring-response-format)\n\n(def url-request-format url/url-request-format)\n\n(def text-request-format f/text-request-format)\n(def text-response-format f/text-response-format)\n; There's no raw-request-format because it's handled by the DirectSubmission code\n(def raw-response-format f/raw-response-format)\n\n(def success? u/success?)\n\n;;; Here's the entire \"simple\" API.\n\n(def default-interceptors simple/default-interceptors)\n\n(def ajax-request simple/ajax-request)\n\n;;; \"Easy\" API beyond this point\n\n(def default-formats easy/default-formats)\n\n;;; NB detect-response-format with no parameters will pull\n;;; in every non-deprecated format in the code and so is\n;;; considered part of the \"easy\" API. However,\n;;; using your own vector specification works with the\n;;; simple API and allows you to control what formats you\n;;; want to support.\n(def detect-response-format easy/detect-response-format)\n\n(m/easy-api GET)\n(m/easy-api HEAD)\n(m/easy-api POST)\n(m/easy-api PUT)\n(m/easy-api DELETE)\n(m/easy-api OPTIONS)\n(m/easy-api TRACE)\n(m/easy-api PATCH)\n(m/easy-api PURGE)\n"],"mappings":"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","names":["ajax.core/to-interceptor","ajax.interceptors/to-interceptor","ajax.core/abort","ajax.protocols/-abort","this","ajax.core/json-request-format","ajax.json/json-request-format","ajax.core/json-response-format","ajax.json/json-response-format","ajax.core/transit-request-format","ajax.transit/transit-request-format","ajax.core/transit-response-format","ajax.transit/transit-response-format","ajax.core/ring-response-format","ajax.ring/ring-response-format","ajax.core/url-request-format","ajax.url/url-request-format","ajax.core/text-request-format","ajax.formats/text-request-format","ajax.core/text-response-format","ajax.formats/text-response-format","ajax.core/raw-response-format","ajax.formats/raw-response-format","ajax.core/success?","ajax.util/success?","ajax.core/default-interceptors","ajax.simple/default-interceptors","ajax.core/ajax-request","ajax.simple/ajax-request","ajax.core/default-formats","ajax.easy/default-formats","ajax.core/detect-response-format","ajax.easy/detect-response-format","i__4642__auto__","len__4641__auto__","args__4647__auto__","cljs.core/IndexedSeq","ajax.core/GET","argseq__4648__auto__","cljs.core/first","opts","ajax.easy/easy-ajax-request","uri","f__22587__auto__","cljs.core/Keyword","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","seq23020","cljs.core/next","self__4628__auto__","G__23021","ajax.core/HEAD","seq23064","G__23065","ajax.core/POST","seq23069","G__23070","ajax.core/PUT","seq23071","G__23072","ajax.core/DELETE","seq23076","G__23077","ajax.core/OPTIONS","seq23081","G__23082","ajax.core/TRACE","seq23084","G__23085","ajax.core/PATCH","seq23087","G__23089","ajax.core/PURGE","seq23091","G__23092"]}