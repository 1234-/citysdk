{"version":3,"file":"linked.core.js","sources":["linked/core.cljc"],"mappings":";;;;AAKA,AAAA,kBAAA,0BAAAA,5CAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;;AAAA,IAAAC,yBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,4BAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,KAAAC,qBAAA,AAAAJ,6BAAA,KAAA,IAAA;AAAA,AAAA,OAAAD,qDAAAI;;;;;AAAA,AAAA,gDAAA,hDAAMJ;AAAN,AACMS;;;AADN,AAAA,AAAA,uDAAA,vDAAMT,kEAEAU;AAFN,AAEe,OAACC,8CAAMC,gBAAMH,4BAAmBC;;;AAF/C;AAAA,AAAA,oCAAA,WAAAJ,/CAAMN;AAAN,AAAA,IAAAO,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAAA,0CAAA,1CAAMN;;AAAN,AAIA,AAAA,kBAAA,0BAAAF,5CAAMgB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;;AAAA,IAAAb,yBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,4BAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,KAAAC,qBAAA,AAAAJ,6BAAA,KAAA,IAAA;AAAA,AAAA,OAAAa,qDAAAV;;;;;AAAA,AAAA,gDAAA,hDAAMU;AAAN,AACME;;;AADN,AAAA,AAAA,uDAAA,vDAAMF,kEAEAG;AAFN,AAEY,OAACN,8CAAMO,eAAKF,4BAAmBC;;;AAF3C;AAAA,AAAA,oCAAA,WAAAF,/CAAMD;AAAN,AAAA,IAAAP,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAO;;;AAAA,AAAA,0CAAA,1CAAMD;;AAAN","names":["var_args","G__25458","linked.core/map","args-arr__4546__auto__","len__4531__auto__","i__4532__auto__","argseq__4547__auto__","cljs.core/IndexedSeq","seq25457","self__4519__auto__","cljs.core/seq","linked.map/empty-linked-map","keyvals","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.core/assoc","G__25466","linked.core/set","seq25465","linked.set/empty-linked-set","keys","cljs.core/conj"],"sourcesContent":["(ns linked.core\n  (:refer-clojure :exclude [map set])\n  (:require [linked.map :as m]\n            [linked.set :as s]))\n\n(defn map\n  ([] m/empty-linked-map)\n  ([& keyvals] (apply assoc m/empty-linked-map keyvals)))\n\n(defn set\n  ([] s/empty-linked-set)\n  ([& keys] (apply conj s/empty-linked-set keys)))\n"]}