{"version":3,"file":"oops.messages.js","sources":["oops/messages.cljs"],"mappings":"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","names":["msg","oops.messages/post-process-message","key","path","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/empty?","oops.messages/runtime-message","_type","flavor","soft?","map__21967","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","frozen?","info","map__21977","goog/typeOf","fn","map__21958","js/oops","js/oops.messages","js/oops.messages.runtime-message","method-table__4414__auto__","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","prefer-table__4415__auto__","method-cache__4416__auto__","cached-hierarchy__4417__auto__","hierarchy__4418__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$3","cljs.core/get-global-hierarchy","cljs.core/MultiFn","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","type","_","map__21900","map__21961","map__21972"],"sourcesContent":["(ns oops.messages\n  \"A subsystem for printing runtime warnings and errors.\"\n  (:require-macros [oops.messages]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn ^:dynamic post-process-message [msg]\n  (str (oops.messages/gen-oops-message-prefix) \", \" msg))\n\n; -- runtime error/warning messages -----------------------------------------------------------------------------------------\n\n(defmulti runtime-message (fn [type & _] type))\n\n(defmethod runtime-message :unexpected-object-value [_type info]\n  (let [{:keys [flavor path]} info]\n    (post-process-message (str \"Unexpected object value (\" flavor \")\"\n                               (when-not (empty? path) (str \" on key path '\" path \"'\"))))))\n\n(defmethod runtime-message :expected-function-value [_type info]\n  (let [{:keys [soft? path fn]} info]\n    (post-process-message (str \"Expected a function\"\n                               (when soft? (str \" or nil\"))\n                               (when-not (empty? path) (str \" on key path '\" path \"'\"))\n                               \", got <\" (goog/typeOf fn) \"> instead\"))))\n\n(defmethod runtime-message :missing-object-key [_type info]\n  (let [{:keys [key path]} info]\n    (post-process-message (str \"Missing expected object key '\" key \"'\"\n                               (when-not (or (empty? path) (= path key)) (str \" on key path '\" path \"'\"))))))\n\n(defmethod runtime-message :object-key-not-writable [_type info]\n  (let [{:keys [key path frozen?]} info]\n    (post-process-message (str \"Object key '\" key \"' is not writable\"\n                               (when-not (or (empty? path) (= path key)) (str \" on key path '\" path \"'\"))\n                               (when frozen? (str \" because the object is frozen\"))))))\n\n(defmethod runtime-message :object-is-sealed [_type info]\n  (let [{:keys [key path]} info]\n    (post-process-message (str \"Cannot create object key '\" key \"'\"\n                               (when-not (or (empty? path) (= path key)) (str \" on key path '\" path \"'\"))\n                               \" because the object is sealed\"))))\n\n(defmethod runtime-message :object-is-frozen [_type info]\n  (let [{:keys [key path]} info]\n    (post-process-message (str \"Cannot create object key '\" key \"'\"\n                               (when-not (or (empty? path) (= path key)) (str \" on key path '\" path \"'\"))\n                               \" because the object is frozen\"))))\n\n(defmethod runtime-message :invalid-selector [_type]\n  (post-process-message \"Invalid selector\"))\n\n(defmethod runtime-message :unexpected-empty-selector [_type]\n  (post-process-message (str \"Unexpected empty selector\")))\n\n(defmethod runtime-message :unexpected-punching-selector [_type]\n  (post-process-message (str \"Unexpected punching selector (\\\"!\\\" makes sense only with oset!)\")))\n\n(defmethod runtime-message :unexpected-soft-selector [_type]\n  (post-process-message (str \"Unexpected soft selector (\\\"?\\\" does not make sense with oset!)\")))\n"]}