{"version":3,"sources":["ajax/xhrio.cljs"],"sourcesContent":["(ns ajax.xhrio\n  (:require goog.net.EventType\n            goog.net.ErrorCode\n            [goog.net.XhrIo :as xhr]\n            [goog.net.XhrManager :as xhrm]\n            [goog.Uri :as uri]\n            [goog.json :as goog-json]\n            [goog.events :as events]\n            [ajax.protocols :refer [AjaxImpl AjaxRequest\n                                    AjaxResponse Interceptor]]))\n\n(extend-type goog.net.XhrIo\n  AjaxImpl\n  (-js-ajax-request\n    [this\n     {:keys [uri method body headers timeout with-credentials\n             response-format progress-handler]\n      :or {with-credentials false\n           timeout 0}}\n     handler]\n    (when-let [response-type (:type response-format)]\n      (.setResponseType this (name response-type)))\n    (when (fn? progress-handler)\n      (doto this\n        (.setProgressEventsEnabled true)\n        (events/listen goog.net.EventType.UPLOAD_PROGRESS progress-handler)))\n    (doto this\n      (events/listen goog.net.EventType/COMPLETE\n                     #(handler (.-target %)))\n      (.setTimeoutInterval timeout)\n      (.setWithCredentials with-credentials)\n      (.send uri method body (clj->js headers))))\n  AjaxRequest\n  (-abort [this] (.abort this goog.net.ErrorCode/ABORT))\n  AjaxResponse\n  (-body [this] (.getResponse this))\n  (-status [this] (.getStatus this))\n  (-status-text [this] (.getStatusText this))\n  (-get-all-headers [this]\n    (js->clj (.getResponseHeaders this)))\n  (-get-response-header [this header]\n    (.getResponseHeader this header))\n  (-was-aborted [this]\n    (= (.getLastErrorCode this) goog.net.ErrorCode/ABORT)))\n\n(extend-type goog.net.XhrManager\n  AjaxImpl\n  (-js-ajax-request\n    [this {:keys [uri method body headers\n                  id timeout priority max-retries]\n           :or {timeout 0}}\n     handler]\n    (.send this id uri method body (clj->js headers)\n           priority handler max-retries)))\n"],"mappings":"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","names":["cljs.core/PROTOCOL_SENTINEL","goog.net/XhrIo","p__8943","map__8945","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","temp__5457__auto__","response-format","this","cljs.core/name","response-type","cljs.core/fn?","progress-handler","G__8948","goog.events/listen","goog.net.EventType/UPLOAD_PROGRESS","G__8952","G__8954","G__8955","G__8956","goog.net.EventType/COMPLETE","G__8957","handler","p1__8940#","timeout","with-credentials","uri","method","body","cljs.core/clj->js","headers","goog.net.ErrorCode/ABORT","cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1","header","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","goog.net/XhrManager","p__8963","map__8964","id","priority","max-retries"]}