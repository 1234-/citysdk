{"version":3,"sources":["ajax/util.cljc"],"sourcesContent":["(ns ajax.util\n  \"Short utility functions. A lot of these only exist because the \n   cross platform implementation is annoying.\"\n   (:require [ajax.protocols :as pr])\n   #? (:clj\n       (:import [java.io OutputStreamWriter]\n                [java.lang String])))\n\n(defn throw-error [args]\n  \"Throws an error.\"\n  (throw (#?(:clj Exception. :cljs js/Error.)\n           (str args))))\n\n(defn get-content-type ^String [response]\n  (or (pr/-get-response-header response \"Content-Type\") \"\"))\n\n(defn to-utf8-writer [to-str]\n  \"Takes a function that converts to a string and transforms it\n   into a function that converts to an object that will write\n   UTF-8 to the wire. Note that this is the identity function\n   for JavaScript because the underlying implementations take\n   a string.\"\n  #? (:cljs to-str\n      :clj (fn write-utf8 [stream params]\n             (doto (OutputStreamWriter. stream)\n               (.write ^String (to-str params))\n               (.flush)))))\n\n(defn success? [status]\n  \"Indicates whether an HTTP status code is considered successful.\"\n  (<= 200 status 299))\n"],"mappings":";;;AAQA,AAAA,AAAMA,AAAa;AAAnB,AAAA;AAEE,AAAO,AAAAC,AACE,AAAKC;;AAEhB,AAAA,AAAMC,AAA0B;AAAhC,AACE,AAAA,AAAI,AAAA,AAACE,AAAwBC;AAA7B,AAAA,AAAAF;AAAAA;;AAAA;;;AAEF,AAAA,AAAMG,AAAgB;AAAtB,AAAA;AAMYC;;AAMZ,AAAA,AAAMC,AAAU;AAAhB,AAAA;AAEE,AAAA,AAAA,AAAA,AAAA,AAAQC,AAAAA","names":["ajax.util/throw-error","js/Error","args","ajax.util/get-content-type","or__4047__auto__","ajax.protocols/-get-response-header","response","ajax.util/to-utf8-writer","to-str","ajax.util/success?","status"]}