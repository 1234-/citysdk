{"version":3,"sources":["ajax/xml_http_request.cljs"],"sourcesContent":["(ns ajax.xml-http-request\n  (:require [ajax.protocols :refer [AjaxImpl AjaxRequest\n                                    AjaxResponse Interceptor]]\n            goog.string))\n\n(defn ready-state [e]\n  ({0 :not-initialized\n    1 :connection-established\n    2 :request-received\n    3 :processing-request\n    4 :response-ready} (.-readyState (.-target e))))\n\n(defn append [current next]\n  (if current\n    (str current \", \" next)\n    next))\n\n(defn process-headers [header-str]\n  (if header-str\n    (reduce (fn [headers header-line]\n              (if (goog.string/isEmptyOrWhitespace header-line)\n                headers\n                (let [key-value (goog.string/splitLimit header-line \": \" 2)]\n                  (update headers (aget key-value 0) append (aget key-value 1)))))\n            {}\n            (.split header-str \"\\r\\n\"))\n    {}))\n\n(def xmlhttprequest\n  (if (= cljs.core/*target* \"nodejs\")\n    (let [xmlhttprequest (.-XMLHttpRequest (js/require \"xmlhttprequest\"))]\n      (goog.object/set js/global \"XMLHttpRequest\" xmlhttprequest)\n      xmlhttprequest)\n    (.-XMLHttpRequest js/window)))\n\n(extend-type xmlhttprequest\n  AjaxImpl\n  (-js-ajax-request\n    [this\n     {:keys [uri method body headers timeout with-credentials\n             response-format]\n      :or {with-credentials false\n           timeout 0}}\n     handler]\n    (set! (.-withCredentials this) with-credentials)\n    (set! (.-onreadystatechange this)\n          #(when (= :response-ready (ready-state %))\n             (handler this)))\n    (.open this method uri true)\n    (set! (.-timeout this) timeout)\n;;; IE8 needs timeout to be set between open and send\n;;; https://msdn.microsoft.com/en-us/library/cc304105(v=vs.85).aspx\n    (when-let [response-type (:type response-format)]\n      (set! (.-responseType this) (name response-type)))\n    (doseq [[k v] headers]\n      (.setRequestHeader this k v))\n    (.send this (or body \"\"))\n    this)\n  AjaxRequest\n  (-abort [this] (.abort this))\n  AjaxResponse\n  (-body [this] (.-response this))\n  (-status [this] (.-status this))\n  (-status-text [this] (.-statusText this))\n  (-get-all-headers [this]\n    (process-headers (.getAllResponseHeaders this)))\n  (-get-response-header [this header]\n    (.getResponseHeader this header))\n  (-was-aborted [this] (= 0 (.-readyState this))))\n"],"mappings":"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","names":["ajax.xml-http-request/ready-state","fexpr__8974","G__8975","e","ajax.xml-http-request/append","current","next","ajax.xml-http-request/process-headers","header-str","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","goog.string/isEmptyOrWhitespace","header-line","headers","goog.string/splitLimit","cljs.core.update.cljs$core$IFn$_invoke$arity$4","key-value","ajax.xml-http-request/xmlhttprequest","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core/*target*","js/require","goog.object/set","js/global","xmlhttprequest","js/window","cljs.core/PROTOCOL_SENTINEL","p__8977","map__8978","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core.get.cljs$core$IFn$_invoke$arity$3","this","with-credentials","p1__8976#","handler","method","uri","timeout","temp__5457__auto__","response-format","cljs.core/name","response-type","cljs.core/seq","i__8983","count__8982","chunk__8981","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__8984","seq__8980","cljs.core/chunked-seq?","cljs.core/chunk-first","cljs.core/chunk-rest","c__4461__auto__","cljs.core/count","cljs.core/first","vec__8987","cljs.core/next","k","v","or__4047__auto__","body","header"]}