{"version":3,"file":"test.core.js","sources":["test/core.cljs"],"mappings":"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","names":["test.core/stats-key","target-obj-14959","*runtime-state*14962","oops.state/*runtime-state*","oops.state/prepare-state","js/Error","next-obj-14960","oops.core/validate-object-access-dynamically","next-obj-14961","js/shadow.js.shim.module$dotenv.load","test.core/test-args-1","test.core/test-args-2","test.core/test-args-3","test.core/test-args-4","test.core/test-args-5","test.core/test-args-6","test.core/test-js-args-1","test.core/test-js-args-2","test.core/test-arg-map","var_args","args__4534__auto__","len__4531__auto__","i__4532__auto__","argseq__4535__auto__","cljs.core/IndexedSeq","test.core/get-path","seq14963","self__4519__auto__","cljs.core/seq","path","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","test.core/test-args","vin","geo","res","s-key","vkey","cljs.core.keyword.cljs$core$IFn$_invoke$arity$1","test.core.get_path.cljs$core$IFn$_invoke$arity$variadic","vins","srcs","prds","vals","ge1s","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","com.rpl.specter.impl/compiled-select*","info__13096__auto__","test.core/pathcache14967","info14968","com.rpl.specter.impl/magic-precompilation","com.rpl.specter.impl/->VarUse","com.rpl.specter/MAP-VALS","precompiled14969","com.rpl.specter.impl/cached-path-info-precompiled","dynamic?__13097__auto__","com.rpl.specter.impl/cached-path-info-dynamic?","G__14970","com.rpl.specter.impl/compiled-setval*","test.core/pathcache14971","info14972","precompiled14973","G__14974","ge2s","geoH","cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic","ress","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core.map.cljs$core$IFn$_invoke$arity$2","val","test.core/pathcache14975","info14976","precompiled14977","G__14978","test.core/args-ok-wms-only","test.core/args-na-wms-only","test.core/args-ok-s+g-v+ps","test.core/args-na-sts-pred","test.core/args-ok-geo-only","test.core/args-na-geo-only","test.core/args-ok-s+g-vals","test.core/args-ok-sts-vals","test.core/args-ok-sts-v+ps","test.core/args-na-s+g-vals","test.core/args-na-sts-vals"],"sourcesContent":["(ns test.core\r\n  (:require\r\n    [com.rpl.specter :as sp]\r\n    [oops.core :as ob]\r\n    [\"dotenv\" :as env]))\r\n\r\n(def stats-key (ob/oget (env/load) [\"parsed\" \"Census_Key_Pro\"]))\r\n\r\n(def test-args-1 {:vintage       \"2000\"\r\n                  :geoHierarchy  {:state {:lat 28.2639 :lng -80.7214} :state-legislative-district-_upper-chamber_ \"*\"}\r\n                  :sourcePath    [\"acs\" \"acs5\"]\r\n                  :geoResolution \"500k\"\r\n                  :values        [\"B01001_001E\"]\r\n                  :statsKey      stats-key})\r\n\r\n(def test-args-2 {:vintage       2016\r\n                  :geoHierarchy {:place {:lat 28.2639 :lng -80.7214}}\r\n                  :sourcePath    [\"acs\" \"acs5\"]\r\n                  :geoResolution \"500k\"\r\n                  :values        [\"B01001_001E\"]\r\n                  :statsKey      stats-key})\r\n\r\n(def test-args-3 {:vintage       \"2016\"\r\n                  :geoHierarchy {:county {:lat 28.2639 :lng -80.7214} :tract \"*\"}\r\n                  :sourcePath    [\"acs\" \"acs5\"]\r\n                  :geoResolution \"500k\"\r\n                  :values        [\"B01001_001E\"]\r\n                  :statsKey      stats-key})\r\n\r\n(def test-args-4 {:vintage       2010\r\n                  :geoHierarchy  {:state \"01\" :county \"001\" :someting-non-existant \"*\"}\r\n                  :sourcePath    [\"acs\" \"acs5\"]\r\n                  :geoResolution \"500k\"\r\n                  :values        [\"B01001_001E\"]\r\n                  :statsKey      stats-key})\r\n\r\n(def test-args-5 {:vintage       2016\r\n                  :geoHierarchy  {:state \"*\" :tract \"*\"}\r\n                  :sourcePath    [\"acs\" \"acs5\"]\r\n                  :geoResolution \"500k\"\r\n                  :values        [\"B01001_001E\"]\r\n                  :statsKey      stats-key})\r\n\r\n\r\n(def test-args-6 {:vintage       \"2016\"\r\n                  :geoHierarchy  {:state \"01\" :county \"001\" :tract \"*\"}\r\n                  :sourcePath    [\"acs\" \"acs5\"]\r\n                  :geoResolution \"500k\"\r\n                  :values        [\"B01001_001E\"]\r\n                  :statsKey      stats-key})\r\n\r\n(def test-js-args-1 #js {\"vintage\"     \"2016\"\r\n                         \"geoHierarchy\"  #js {\"state\" \"12\" \"state legislative district (upper chamber)\" \"*\"}\r\n                         \"sourcePath\"    #js [\"acs\" \"acs5\"]\r\n                         \"values\"        #js [\"B01001_001E\" \"NAME\"]\r\n                         \"predicates\"    #js {\"B00001_001E\" \"0:30000\"}\r\n                         \"geoResolution\" \"500k\"\r\n                         \"statsKey\"      stats-key})\r\n\r\n(def test-js-args-2 #js {\"vintage\"      2016\r\n                         \"geoHierarchy\" #js {\"state\" #js {\"lat\" 28.2639 \"lng\" -80.7214} \"state legislative district (upper chamber)\" \"*\"}\r\n                         \"sourcePath\"   #js [\"acs\" \"acs5\"]\r\n                         \"values\"       #js [\"B01001_001E\" \"NAME\"]\r\n                         \"predicates\"   #js {\"B00001_001E\" \"0:30000\"}\r\n                         \"geoResolution\" \"500k\"\r\n                         \"statsKey\"     stats-key})\r\n\r\n\r\n(def test-arg-map\r\n  {:vins [2000 \"2000\" 2010 \"2010\" 2015 \"2015\" 2016 \"2016\" 2017 2014]\r\n   :crds [{:lat 28.2639 :lng -80.7214}]\r\n   :geo1 [{:invalid \"*\"} {:state \"01\"}   {:state :coords} {:county :coords} {:state \"01\"}]\r\n   :geo2 [nil            {:county \"001\"} {:county \"*\"}    nil               {:zip-code-tabulation-area \"*\"}]\r\n   :srcP {:2000 [\"nonemp\"]        :2010 [\"dec\" \"sf1\"]      :2015 [\"cbp\"]   :2016 [\"acs\" \"acs5\"] :2017 [\"acs\" \"acs1\"]}\r\n   :pred {:2000 {:NAICS1997 \"72\"} :2010 {:H016001 \"0:500\"} :2015 nil       :2016 {:B00001_001E \"0:1000000\"} :2017 {:B00001_001E \"0:1000000\"}}\r\n   :vals {:2000 [\"NAME\" \"NESTAB\"] :2010 [\"P001001\"]        :2015 [\"ESTAB\"] :2016 [\"B01001_001E\"]}\r\n   :geoR [\"20m\" \"5m\" \"500k\"]\r\n   :sKey stats-key})\r\n\r\n(defn get-path\r\n  [& path]\r\n  (get-in test-arg-map path))\r\n\r\n(defn test-args\r\n  [vin geo res s-key]\r\n  (let [vkey (keyword (str (get-path :vins vin)))\r\n        vins {:vintage       (get-path :vins vin)}\r\n        srcs {:sourcePath    (get-path :srcP vkey)}\r\n        prds {:predicates    (get-path :pred vkey)}\r\n        vals {:values        (get-path :vals vkey)}\r\n        ge1s (if (= [:coords] (sp/select sp/MAP-VALS (get-path :geo1 geo)))\r\n               (sp/setval sp/MAP-VALS (get-path :crds 0) (get-path :geo1 geo))\r\n               (get-path :geo1 geo))\r\n        ge2s (get-path :geo2 geo)\r\n        geoH {:geoHierarchy  (conj {} ge1s ge2s)}\r\n        ress {:geoResolution (get-path :geoR res)}]\r\n    (into {} (map (fn [val] (if (= [nil] (sp/select sp/MAP-VALS val)) nil val))\r\n                  [vins geoH srcs ress prds vals (if (= 1 s-key) {:statsKey stats-key} {:statsKey nil})]))))\r\n\r\n\r\n(def args-ok-wms-only (test-args 9 2 4 0))\r\n#_{:vintage     \"2016\",\r\n   :geoHierachy {:state {:lat 28.2639, :lng -80.7214}, :county \"*\"}}\r\n\r\n(def args-na-wms-only (test-args 9 0 4 0))\r\n#_{:vintage \"2016\",\r\n   :geoHierachy {:invalid \"*\"}}\r\n\r\n(def args-ok-s+g-v+ps (test-args 6 1 2 1))\r\n#_{:vintage 2016,\r\n   :geoHierachy {:state \"01\", :county \"001\"},\r\n   :sourcePath [\"acs\" \"acs5\"],\r\n   :geoResolution \"500k\",\r\n   :predicates {:B00001_001E \"0:1000000\"},\r\n   :values [\"NAME\"],\r\n   :statsKey \"6980d91653a1f78acd456d9187ed28e23ea5d4e3\"}\r\n\r\n(def args-na-sts-pred (test-args 8 1 3 1))\r\n#_{:vintage 2017,\r\n   :geoHierachy {:state \"01\", :county \"001\"},\r\n   :sourcePath [\"acs\" \"acs1\"],\r\n   :predicates {:B00001_001E \"0:1000000\"},\r\n   :statsKey \"6980d91653a1f78acd456d9187ed28e23ea5d4e3\"}\r\n\r\n(def args-ok-geo-only (test-args 9 2 2 0))\r\n#_{:vintage 2014,\r\n   :geoHierachy {:state {:lat 28.2639, :lng -80.7214}, :county \"*\"},\r\n   :geoResolution \"500k\"}\r\n\r\n(def args-na-geo-only (test-args 9 4 1 0))\r\n#_{:vintage 2014,\r\n   :geoHierachy {:state \"01\", :zip-code-tabulation-area \"*\"},\r\n   :geoResolution \"5m\"}\r\n\r\n(def args-ok-s+g-vals (test-args 5 3 0 1))\r\n#_{:vintage \"2015\",\r\n   :geoHierachy {:county {:lat 28.2639, :lng -80.7214}},\r\n   :sourcePath [\"cbp\"],\r\n   :geoResolution \"20m\",\r\n   :values [\"ESTAB\"],\r\n   :statsKey \"6980d91653a1f78acd456d9187ed28e23ea5d4e3\"}\r\n\r\n(def args-ok-sts-vals (test-args 5 3 3 1))\r\n#_{:vintage \"2015\",\r\n   :geoHierachy {:county {:lat 28.2639, :lng -80.7214}},\r\n   :sourcePath [\"cbp\"],\r\n   :values [\"ESTAB\"],\r\n   :statsKey \"6980d91653a1f78acd456d9187ed28e23ea5d4e3\"}\r\n\r\n(def args-ok-s+g-v+ps (test-args 6 3 1 1))\r\n#_{:vintage 2016,\r\n   :geoHierachy {:county {:lat 28.2639, :lng -80.7214}},\r\n   :sourcePath [\"acs\" \"acs5\"],\r\n   :geoResolution \"5m\",\r\n   :predicates {:B00001_001E \"0:1000000\"},\r\n   :values [\"NAME\"],\r\n   :statsKey \"6980d91653a1f78acd456d9187ed28e23ea5d4e3\"}\r\n\r\n(def args-ok-sts-v+ps (test-args 6 3 3 1))\r\n#_{:vintage 2016,\r\n   :geoHierachy {:county {:lat 28.2639, :lng -80.7214}},\r\n   :sourcePath [\"acs\" \"acs5\"],\r\n   :predicates {:B00001_001E \"0:1000000\"},\r\n   :values [\"NAME\"],\r\n   :statsKey \"6980d91653a1f78acd456d9187ed28e23ea5d4e3\"}\r\n\r\n(def args-na-s+g-vals (test-args 5 0 0 1))\r\n#_{:vintage \"2015\",\r\n   :geoHierachy {:invalid \"*\"},\r\n   :sourcePath [\"cbp\"],\r\n   :geoResolution \"20m\",\r\n   :values [\"ESTAB\"],\r\n   :statsKey \"6980d91653a1f78acd456d9187ed28e23ea5d4e3\"}\r\n\r\n(def args-na-sts-vals (test-args 5 0 3 1))\r\n#_{:vintage \"2015\",\r\n   :geoHierachy {:invalid \"*\"},\r\n   :sourcePath [\"cbp\"],\r\n   :values [\"ESTAB\"],\r\n   :statsKey \"6980d91653a1f78acd456d9187ed28e23ea5d4e3\"}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}